Search.setIndex({"docnames": ["_autosummary/atomica", "_autosummary/atomica.calibration", "_autosummary/atomica.calibration.calibrate", "_autosummary/atomica.cascade", "_autosummary/atomica.cascade.CascadeEnsemble", "_autosummary/atomica.cascade.InvalidCascade", "_autosummary/atomica.cascade.cascade_summary", "_autosummary/atomica.cascade.get_cascade_data", "_autosummary/atomica.cascade.get_cascade_vals", "_autosummary/atomica.cascade.plot_cascade", "_autosummary/atomica.cascade.plot_multi_cascade", "_autosummary/atomica.cascade.plot_single_cascade", "_autosummary/atomica.cascade.plot_single_cascade_series", "_autosummary/atomica.cascade.sanitize_cascade", "_autosummary/atomica.cascade.sanitize_pops", "_autosummary/atomica.cascade.validate_cascade", "_autosummary/atomica.data", "_autosummary/atomica.data.InvalidDatabook", "_autosummary/atomica.data.ProjectData", "_autosummary/atomica.demos", "_autosummary/atomica.demos.demo", "_autosummary/atomica.demos.make_demo_scenarios", "_autosummary/atomica.excel", "_autosummary/atomica.excel.TimeDependentConnections", "_autosummary/atomica.excel.TimeDependentValuesEntry", "_autosummary/atomica.excel.apply_widths", "_autosummary/atomica.excel.cell_get_number", "_autosummary/atomica.excel.cell_get_string", "_autosummary/atomica.excel.copy_sheet", "_autosummary/atomica.excel.read_dataframes", "_autosummary/atomica.excel.read_tables", "_autosummary/atomica.excel.standard_formats", "_autosummary/atomica.excel.transfer_comments", "_autosummary/atomica.excel.update_widths", "_autosummary/atomica.excel.validate_category", "_autosummary/atomica.framework", "_autosummary/atomica.framework.InvalidFramework", "_autosummary/atomica.framework.ProjectFramework", "_autosummary/atomica.framework.generate_framework_doc", "_autosummary/atomica.function_parser", "_autosummary/atomica.function_parser.parse_function", "_autosummary/atomica.function_parser.sdiv", "_autosummary/atomica.function_parser.vector_max", "_autosummary/atomica.function_parser.vector_min", "_autosummary/atomica.migration", "_autosummary/atomica.migration.Migration", "_autosummary/atomica.migration.all_frameworks", "_autosummary/atomica.migration.all_progsets", "_autosummary/atomica.migration.all_results", "_autosummary/atomica.migration.migrate", "_autosummary/atomica.migration.migration", "_autosummary/atomica.migration.register_migration", "_autosummary/atomica.model", "_autosummary/atomica.model.BadInitialization", "_autosummary/atomica.model.Characteristic", "_autosummary/atomica.model.Compartment", "_autosummary/atomica.model.JunctionCompartment", "_autosummary/atomica.model.Link", "_autosummary/atomica.model.Model", "_autosummary/atomica.model.ModelError", "_autosummary/atomica.model.Parameter", "_autosummary/atomica.model.Population", "_autosummary/atomica.model.ResidualJunctionCompartment", "_autosummary/atomica.model.SinkCompartment", "_autosummary/atomica.model.SourceCompartment", "_autosummary/atomica.model.TimedCompartment", "_autosummary/atomica.model.TimedLink", "_autosummary/atomica.model.Variable", "_autosummary/atomica.model.run_model", "_autosummary/atomica.optimization", "_autosummary/atomica.optimization.Adjustable", "_autosummary/atomica.optimization.Adjustment", "_autosummary/atomica.optimization.AtLeastMeasurable", "_autosummary/atomica.optimization.AtMostMeasurable", "_autosummary/atomica.optimization.Constraint", "_autosummary/atomica.optimization.DecreaseByMeasurable", "_autosummary/atomica.optimization.ExponentialSpendingAdjustment", "_autosummary/atomica.optimization.FailedConstraint", "_autosummary/atomica.optimization.IncreaseByMeasurable", "_autosummary/atomica.optimization.InvalidInitialConditions", "_autosummary/atomica.optimization.MaximizeCascadeConversionRate", "_autosummary/atomica.optimization.MaximizeCascadeStage", "_autosummary/atomica.optimization.MaximizeMeasurable", "_autosummary/atomica.optimization.Measurable", "_autosummary/atomica.optimization.MinimizeMeasurable", "_autosummary/atomica.optimization.Optimization", "_autosummary/atomica.optimization.PairedLinearSpendingAdjustment", "_autosummary/atomica.optimization.SpendingAdjustment", "_autosummary/atomica.optimization.SpendingPackageAdjustment", "_autosummary/atomica.optimization.StartTimeAdjustment", "_autosummary/atomica.optimization.TotalSpendConstraint", "_autosummary/atomica.optimization.UnresolvableConstraint", "_autosummary/atomica.optimization.constrain_sum_bounded", "_autosummary/atomica.optimization.optimize", "_autosummary/atomica.parameters", "_autosummary/atomica.parameters.Parameter", "_autosummary/atomica.parameters.ParameterSet", "_autosummary/atomica.plotting", "_autosummary/atomica.plotting.PlotData", "_autosummary/atomica.plotting.Series", "_autosummary/atomica.plotting.plot_bars", "_autosummary/atomica.plotting.plot_legend", "_autosummary/atomica.plotting.plot_series", "_autosummary/atomica.plotting.relabel_legend", "_autosummary/atomica.plotting.reorder_legend", "_autosummary/atomica.plotting.save_figs", "_autosummary/atomica.programs", "_autosummary/atomica.programs.Covout", "_autosummary/atomica.programs.Program", "_autosummary/atomica.programs.ProgramInstructions", "_autosummary/atomica.programs.ProgramSet", "_autosummary/atomica.project", "_autosummary/atomica.project.Project", "_autosummary/atomica.project.ProjectSettings", "_autosummary/atomica.reconciliation", "_autosummary/atomica.reconciliation.reconcile", "_autosummary/atomica.results", "_autosummary/atomica.results.Ensemble", "_autosummary/atomica.results.Result", "_autosummary/atomica.results.export_results", "_autosummary/atomica.scenarios", "_autosummary/atomica.scenarios.BudgetScenario", "_autosummary/atomica.scenarios.CombinedScenario", "_autosummary/atomica.scenarios.CoverageScenario", "_autosummary/atomica.scenarios.ParameterScenario", "_autosummary/atomica.scenarios.Scenario", "_autosummary/atomica.system", "_autosummary/atomica.system.FrameworkSettings", "_autosummary/atomica.system.NotFoundError", "_autosummary/atomica.system.atomica_path", "_autosummary/atomica.utils", "_autosummary/atomica.utils.NDict", "_autosummary/atomica.utils.NamedItem", "_autosummary/atomica.utils.Quiet", "_autosummary/atomica.utils.TimeSeries", "_autosummary/atomica.utils.datetime_to_year", "_autosummary/atomica.utils.evaluate_plot_string", "_autosummary/atomica.utils.format_duration", "_autosummary/atomica.utils.nested_loop", "_autosummary/atomica.utils.parallel_progress", "_autosummary/atomica.utils.parent_dir", "_autosummary/atomica.utils.start_logging", "_autosummary/atomica.utils.stop_logging", "_autosummary/atomica.version", "examples/Basic-workflow", "examples/Frameworks", "examples/Model-dev", "examples/Model-user", "examples/Plot-Programs", "examples/Plot-Units", "examples/Plotting", "examples/Probability-Rescaling", "examples/Scenarios", "examples/Uncertainty", "examples/databooks/Databooks", "examples/index", "examples/ode_models/ode_models", "examples/override_cost_coverage/override_cost_coverage", "general/Compartment-Initialization", "general/Contextual-Overview", "general/File-Logging", "general/Optimization", "general/Parameters", "general/index", "general/junctions/Junctions", "general/population-types/Population-Types", "general/programs/Programs", "general/stochastic/stochastic", "general/timed-transitions/Timed-Transitions", "index", "library/cervicalcancer", "library/diabetes", "library/dt", "library/hiv", "library/hiv_dyn", "library/hypertension", "library/hypertension_dyn", "library/index", "library/service", "library/sir", "library/tb", "library/tb_simple", "library/tb_simple_dyn", "library/udt", "library/udt_dyn", "library/usdt", "tutorial/T1-Defining-a-model", "tutorial/T2-Calibration", "tutorial/T3-Multiple-populations", "tutorial/T4-Characteristics", "tutorial/T5-Junctions", "tutorial/T6-Programs", "tutorial/index"], "filenames": ["_autosummary/atomica.rst", "_autosummary/atomica.calibration.rst", "_autosummary/atomica.calibration.calibrate.rst", "_autosummary/atomica.cascade.rst", "_autosummary/atomica.cascade.CascadeEnsemble.rst", "_autosummary/atomica.cascade.InvalidCascade.rst", "_autosummary/atomica.cascade.cascade_summary.rst", "_autosummary/atomica.cascade.get_cascade_data.rst", "_autosummary/atomica.cascade.get_cascade_vals.rst", "_autosummary/atomica.cascade.plot_cascade.rst", "_autosummary/atomica.cascade.plot_multi_cascade.rst", "_autosummary/atomica.cascade.plot_single_cascade.rst", "_autosummary/atomica.cascade.plot_single_cascade_series.rst", "_autosummary/atomica.cascade.sanitize_cascade.rst", "_autosummary/atomica.cascade.sanitize_pops.rst", "_autosummary/atomica.cascade.validate_cascade.rst", "_autosummary/atomica.data.rst", "_autosummary/atomica.data.InvalidDatabook.rst", "_autosummary/atomica.data.ProjectData.rst", "_autosummary/atomica.demos.rst", "_autosummary/atomica.demos.demo.rst", "_autosummary/atomica.demos.make_demo_scenarios.rst", "_autosummary/atomica.excel.rst", "_autosummary/atomica.excel.TimeDependentConnections.rst", "_autosummary/atomica.excel.TimeDependentValuesEntry.rst", "_autosummary/atomica.excel.apply_widths.rst", "_autosummary/atomica.excel.cell_get_number.rst", "_autosummary/atomica.excel.cell_get_string.rst", "_autosummary/atomica.excel.copy_sheet.rst", "_autosummary/atomica.excel.read_dataframes.rst", "_autosummary/atomica.excel.read_tables.rst", "_autosummary/atomica.excel.standard_formats.rst", "_autosummary/atomica.excel.transfer_comments.rst", "_autosummary/atomica.excel.update_widths.rst", "_autosummary/atomica.excel.validate_category.rst", "_autosummary/atomica.framework.rst", "_autosummary/atomica.framework.InvalidFramework.rst", "_autosummary/atomica.framework.ProjectFramework.rst", "_autosummary/atomica.framework.generate_framework_doc.rst", "_autosummary/atomica.function_parser.rst", "_autosummary/atomica.function_parser.parse_function.rst", "_autosummary/atomica.function_parser.sdiv.rst", "_autosummary/atomica.function_parser.vector_max.rst", "_autosummary/atomica.function_parser.vector_min.rst", "_autosummary/atomica.migration.rst", "_autosummary/atomica.migration.Migration.rst", "_autosummary/atomica.migration.all_frameworks.rst", "_autosummary/atomica.migration.all_progsets.rst", "_autosummary/atomica.migration.all_results.rst", "_autosummary/atomica.migration.migrate.rst", "_autosummary/atomica.migration.migration.rst", "_autosummary/atomica.migration.register_migration.rst", "_autosummary/atomica.model.rst", "_autosummary/atomica.model.BadInitialization.rst", "_autosummary/atomica.model.Characteristic.rst", "_autosummary/atomica.model.Compartment.rst", "_autosummary/atomica.model.JunctionCompartment.rst", "_autosummary/atomica.model.Link.rst", "_autosummary/atomica.model.Model.rst", "_autosummary/atomica.model.ModelError.rst", "_autosummary/atomica.model.Parameter.rst", "_autosummary/atomica.model.Population.rst", "_autosummary/atomica.model.ResidualJunctionCompartment.rst", "_autosummary/atomica.model.SinkCompartment.rst", "_autosummary/atomica.model.SourceCompartment.rst", "_autosummary/atomica.model.TimedCompartment.rst", "_autosummary/atomica.model.TimedLink.rst", "_autosummary/atomica.model.Variable.rst", "_autosummary/atomica.model.run_model.rst", "_autosummary/atomica.optimization.rst", "_autosummary/atomica.optimization.Adjustable.rst", "_autosummary/atomica.optimization.Adjustment.rst", "_autosummary/atomica.optimization.AtLeastMeasurable.rst", "_autosummary/atomica.optimization.AtMostMeasurable.rst", "_autosummary/atomica.optimization.Constraint.rst", "_autosummary/atomica.optimization.DecreaseByMeasurable.rst", "_autosummary/atomica.optimization.ExponentialSpendingAdjustment.rst", "_autosummary/atomica.optimization.FailedConstraint.rst", "_autosummary/atomica.optimization.IncreaseByMeasurable.rst", "_autosummary/atomica.optimization.InvalidInitialConditions.rst", "_autosummary/atomica.optimization.MaximizeCascadeConversionRate.rst", "_autosummary/atomica.optimization.MaximizeCascadeStage.rst", "_autosummary/atomica.optimization.MaximizeMeasurable.rst", "_autosummary/atomica.optimization.Measurable.rst", "_autosummary/atomica.optimization.MinimizeMeasurable.rst", "_autosummary/atomica.optimization.Optimization.rst", "_autosummary/atomica.optimization.PairedLinearSpendingAdjustment.rst", "_autosummary/atomica.optimization.SpendingAdjustment.rst", "_autosummary/atomica.optimization.SpendingPackageAdjustment.rst", "_autosummary/atomica.optimization.StartTimeAdjustment.rst", "_autosummary/atomica.optimization.TotalSpendConstraint.rst", "_autosummary/atomica.optimization.UnresolvableConstraint.rst", "_autosummary/atomica.optimization.constrain_sum_bounded.rst", "_autosummary/atomica.optimization.optimize.rst", "_autosummary/atomica.parameters.rst", "_autosummary/atomica.parameters.Parameter.rst", "_autosummary/atomica.parameters.ParameterSet.rst", "_autosummary/atomica.plotting.rst", "_autosummary/atomica.plotting.PlotData.rst", "_autosummary/atomica.plotting.Series.rst", "_autosummary/atomica.plotting.plot_bars.rst", "_autosummary/atomica.plotting.plot_legend.rst", "_autosummary/atomica.plotting.plot_series.rst", "_autosummary/atomica.plotting.relabel_legend.rst", "_autosummary/atomica.plotting.reorder_legend.rst", "_autosummary/atomica.plotting.save_figs.rst", "_autosummary/atomica.programs.rst", "_autosummary/atomica.programs.Covout.rst", "_autosummary/atomica.programs.Program.rst", "_autosummary/atomica.programs.ProgramInstructions.rst", "_autosummary/atomica.programs.ProgramSet.rst", "_autosummary/atomica.project.rst", "_autosummary/atomica.project.Project.rst", "_autosummary/atomica.project.ProjectSettings.rst", "_autosummary/atomica.reconciliation.rst", "_autosummary/atomica.reconciliation.reconcile.rst", "_autosummary/atomica.results.rst", "_autosummary/atomica.results.Ensemble.rst", "_autosummary/atomica.results.Result.rst", "_autosummary/atomica.results.export_results.rst", "_autosummary/atomica.scenarios.rst", "_autosummary/atomica.scenarios.BudgetScenario.rst", "_autosummary/atomica.scenarios.CombinedScenario.rst", "_autosummary/atomica.scenarios.CoverageScenario.rst", "_autosummary/atomica.scenarios.ParameterScenario.rst", "_autosummary/atomica.scenarios.Scenario.rst", "_autosummary/atomica.system.rst", "_autosummary/atomica.system.FrameworkSettings.rst", "_autosummary/atomica.system.NotFoundError.rst", "_autosummary/atomica.system.atomica_path.rst", "_autosummary/atomica.utils.rst", "_autosummary/atomica.utils.NDict.rst", "_autosummary/atomica.utils.NamedItem.rst", "_autosummary/atomica.utils.Quiet.rst", "_autosummary/atomica.utils.TimeSeries.rst", "_autosummary/atomica.utils.datetime_to_year.rst", "_autosummary/atomica.utils.evaluate_plot_string.rst", "_autosummary/atomica.utils.format_duration.rst", "_autosummary/atomica.utils.nested_loop.rst", "_autosummary/atomica.utils.parallel_progress.rst", "_autosummary/atomica.utils.parent_dir.rst", "_autosummary/atomica.utils.start_logging.rst", "_autosummary/atomica.utils.stop_logging.rst", "_autosummary/atomica.version.rst", "examples/Basic-workflow.ipynb", "examples/Frameworks.ipynb", "examples/Model-dev.ipynb", "examples/Model-user.ipynb", "examples/Plot-Programs.ipynb", "examples/Plot-Units.ipynb", "examples/Plotting.ipynb", "examples/Probability-Rescaling.ipynb", "examples/Scenarios.ipynb", "examples/Uncertainty.ipynb", "examples/databooks/Databooks.ipynb", "examples/index.rst", "examples/ode_models/ode_models.ipynb", "examples/override_cost_coverage/override_cost_coverage.ipynb", "general/Compartment-Initialization.md", "general/Contextual-Overview.rst", "general/File-Logging.md", "general/Optimization.md", "general/Parameters.rst", "general/index.rst", "general/junctions/Junctions.rst", "general/population-types/Population-Types.rst", "general/programs/Programs.rst", "general/stochastic/stochastic.rst", "general/timed-transitions/Timed-Transitions.rst", "index.rst", "library/cervicalcancer.md", "library/diabetes.md", "library/dt.md", "library/hiv.md", "library/hiv_dyn.md", "library/hypertension.md", "library/hypertension_dyn.md", "library/index.rst", "library/service.md", "library/sir.md", "library/tb.md", "library/tb_simple.md", "library/tb_simple_dyn.md", "library/udt.md", "library/udt_dyn.md", "library/usdt.md", "tutorial/T1-Defining-a-model.ipynb", "tutorial/T2-Calibration.ipynb", "tutorial/T3-Multiple-populations.ipynb", "tutorial/T4-Characteristics.ipynb", "tutorial/T5-Junctions.ipynb", "tutorial/T6-Programs.ipynb", "tutorial/index.rst"], "titles": ["atomica", "atomica.calibration", "atomica.calibration.calibrate", "atomica.cascade", "atomica.cascade.CascadeEnsemble", "atomica.cascade.InvalidCascade", "atomica.cascade.cascade_summary", "atomica.cascade.get_cascade_data", "atomica.cascade.get_cascade_vals", "atomica.cascade.plot_cascade", "atomica.cascade.plot_multi_cascade", "atomica.cascade.plot_single_cascade", "atomica.cascade.plot_single_cascade_series", "atomica.cascade.sanitize_cascade", "atomica.cascade.sanitize_pops", "atomica.cascade.validate_cascade", "atomica.data", "atomica.data.InvalidDatabook", "atomica.data.ProjectData", "atomica.demos", "atomica.demos.demo", "atomica.demos.make_demo_scenarios", "atomica.excel", "atomica.excel.TimeDependentConnections", "atomica.excel.TimeDependentValuesEntry", "atomica.excel.apply_widths", "atomica.excel.cell_get_number", "atomica.excel.cell_get_string", "atomica.excel.copy_sheet", "atomica.excel.read_dataframes", "atomica.excel.read_tables", "atomica.excel.standard_formats", "atomica.excel.transfer_comments", "atomica.excel.update_widths", "atomica.excel.validate_category", "atomica.framework", "atomica.framework.InvalidFramework", "atomica.framework.ProjectFramework", "atomica.framework.generate_framework_doc", "atomica.function_parser", "atomica.function_parser.parse_function", "atomica.function_parser.sdiv", "atomica.function_parser.vector_max", "atomica.function_parser.vector_min", "atomica.migration", "atomica.migration.Migration", "atomica.migration.all_frameworks", "atomica.migration.all_progsets", "atomica.migration.all_results", "atomica.migration.migrate", "atomica.migration.migration", "atomica.migration.register_migration", "atomica.model", "atomica.model.BadInitialization", "atomica.model.Characteristic", "atomica.model.Compartment", "atomica.model.JunctionCompartment", "atomica.model.Link", "atomica.model.Model", "atomica.model.ModelError", "atomica.model.Parameter", "atomica.model.Population", "atomica.model.ResidualJunctionCompartment", "atomica.model.SinkCompartment", "atomica.model.SourceCompartment", "atomica.model.TimedCompartment", "atomica.model.TimedLink", "atomica.model.Variable", "atomica.model.run_model", "atomica.optimization", "atomica.optimization.Adjustable", "atomica.optimization.Adjustment", "atomica.optimization.AtLeastMeasurable", "atomica.optimization.AtMostMeasurable", "atomica.optimization.Constraint", "atomica.optimization.DecreaseByMeasurable", "atomica.optimization.ExponentialSpendingAdjustment", "atomica.optimization.FailedConstraint", "atomica.optimization.IncreaseByMeasurable", "atomica.optimization.InvalidInitialConditions", "atomica.optimization.MaximizeCascadeConversionRate", "atomica.optimization.MaximizeCascadeStage", "atomica.optimization.MaximizeMeasurable", "atomica.optimization.Measurable", "atomica.optimization.MinimizeMeasurable", "atomica.optimization.Optimization", "atomica.optimization.PairedLinearSpendingAdjustment", "atomica.optimization.SpendingAdjustment", "atomica.optimization.SpendingPackageAdjustment", "atomica.optimization.StartTimeAdjustment", "atomica.optimization.TotalSpendConstraint", "atomica.optimization.UnresolvableConstraint", "atomica.optimization.constrain_sum_bounded", "atomica.optimization.optimize", "atomica.parameters", "atomica.parameters.Parameter", "atomica.parameters.ParameterSet", "atomica.plotting", "atomica.plotting.PlotData", "atomica.plotting.Series", "atomica.plotting.plot_bars", "atomica.plotting.plot_legend", "atomica.plotting.plot_series", "atomica.plotting.relabel_legend", "atomica.plotting.reorder_legend", "atomica.plotting.save_figs", "atomica.programs", "atomica.programs.Covout", "atomica.programs.Program", "atomica.programs.ProgramInstructions", "atomica.programs.ProgramSet", "atomica.project", "atomica.project.Project", "atomica.project.ProjectSettings", "atomica.reconciliation", "atomica.reconciliation.reconcile", "atomica.results", "atomica.results.Ensemble", "atomica.results.Result", "atomica.results.export_results", "atomica.scenarios", "atomica.scenarios.BudgetScenario", "atomica.scenarios.CombinedScenario", "atomica.scenarios.CoverageScenario", "atomica.scenarios.ParameterScenario", "atomica.scenarios.Scenario", "atomica.system", "atomica.system.FrameworkSettings", "atomica.system.NotFoundError", "atomica.system.atomica_path", "atomica.utils", "atomica.utils.NDict", "atomica.utils.NamedItem", "atomica.utils.Quiet", "atomica.utils.TimeSeries", "atomica.utils.datetime_to_year", "atomica.utils.evaluate_plot_string", "atomica.utils.format_duration", "atomica.utils.nested_loop", "atomica.utils.parallel_progress", "atomica.utils.parent_dir", "atomica.utils.start_logging", "atomica.utils.stop_logging", "atomica.version", "Basic workflow", "Frameworks", "Models (implementation)", "Results and Models", "Plotting programs", "Plot unit conversions", "Plotting Documentation", "Probability rescaling", "Scenarios", "Uncertainty", "Data and Databooks", "Examples", "Comparison with ODEs", "Overriding coverage calculations", "Initializing compartments", "Contextual overview", "Logging cookbook", "Optimization", "Parameters", "General content", "Junction overview", "Population types", "Program System", "Stochastic models", "Timed transitions", "Atomica", "Cervical cancer", "Diabetes", "Diagnosis-Treated", "HIV without dynamics", "HIV with dynamics", "Hypertension", "Hypertension with dynamics", "Model library", "Service modalities", "SIR model", "TB full model", "TB simple model", "TB simple with dynamics", "UDT model", "UDT model with dynamics", "USDT model", "T1 - Defining a model", "T2 - Calibration", "T3 - Multiple populations", "T4 - Characteristics", "T5 - Junctions", "T6 - Programs", "Tutorials"], "terms": {"root": [0, 150, 162, 167], "modul": [0, 1, 3, 16, 22, 35, 39, 44, 49, 51, 52, 69, 97, 106, 120, 129, 143, 157, 166], "The": [0, 3, 4, 13, 14, 15, 18, 21, 23, 24, 26, 28, 32, 34, 37, 38, 41, 49, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 122, 124, 125, 131, 134, 135, 136, 139, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 179, 186, 187, 188, 189, 190, 191], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 37, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 124, 125, 131, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "entri": [0, 1, 22, 23, 24, 37, 44, 70, 93, 96, 101, 104, 107, 110, 112, 131, 145, 146, 153, 154, 161, 165, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "point": [0, 1, 3, 4, 7, 8, 10, 18, 44, 49, 60, 61, 65, 66, 72, 73, 75, 78, 83, 87, 90, 93, 95, 98, 102, 108, 109, 110, 112, 117, 118, 134, 145, 146, 150, 152, 153, 154, 156, 158, 161, 162, 166, 186, 187, 191], "run": [0, 2, 4, 18, 20, 35, 37, 44, 49, 51, 58, 68, 85, 96, 98, 107, 109, 110, 112, 114, 117, 118, 121, 122, 123, 124, 125, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 167, 186, 187, 188, 189, 190, 191], "simul": [0, 4, 7, 18, 53, 58, 60, 61, 63, 67, 68, 75, 78, 83, 85, 96, 109, 110, 112, 113, 117, 118, 121, 122, 123, 124, 125, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 186, 187, 188, 189, 190, 191], "perform": [0, 4, 18, 28, 49, 52, 54, 55, 56, 57, 60, 62, 64, 67, 68, 69, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 93, 98, 110, 112, 115, 117, 118, 124, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 159, 165, 166, 168, 186, 187, 188, 189, 191], "analysi": [0, 56, 62, 147, 154, 159, 186, 187], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 18, 22, 23, 24, 26, 28, 29, 31, 33, 35, 37, 40, 44, 45, 49, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 120, 121, 122, 123, 124, 125, 129, 130, 131, 133, 134, 136, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "implement": [1, 3, 4, 16, 18, 22, 35, 39, 52, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 69, 74, 90, 93, 94, 97, 98, 106, 109, 111, 114, 116, 117, 120, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 186, 188, 190, 191], "automat": [1, 3, 4, 37, 49, 51, 58, 90, 98, 105, 108, 109, 110, 112, 114, 117, 134, 141, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 160, 161, 162, 165, 166, 168, 186, 187, 188, 189, 190, 191], "thi": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 21, 22, 23, 24, 26, 27, 28, 29, 32, 34, 35, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 131, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "defin": [1, 3, 4, 13, 15, 16, 18, 19, 35, 37, 44, 61, 67, 68, 85, 88, 98, 106, 107, 115, 118, 120, 122, 124, 126, 127, 130, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 164, 165, 166, 168, 187, 188, 189, 191, 192], "function": [1, 2, 3, 4, 6, 7, 9, 13, 16, 18, 19, 22, 23, 24, 26, 27, 28, 29, 32, 34, 35, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 75, 76, 78, 80, 81, 82, 83, 84, 85, 88, 95, 96, 97, 98, 99, 104, 105, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 124, 126, 129, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 151, 153, 154, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "which": [1, 2, 3, 4, 6, 10, 11, 13, 14, 16, 18, 20, 23, 24, 26, 28, 29, 30, 33, 35, 37, 45, 51, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 78, 87, 88, 90, 91, 93, 95, 97, 98, 99, 102, 104, 106, 107, 108, 109, 110, 112, 115, 117, 118, 120, 121, 122, 123, 124, 125, 131, 134, 138, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 186, 187, 188, 189, 191], "project": [2, 4, 18, 19, 20, 21, 37, 44, 46, 47, 48, 49, 51, 68, 93, 96, 98, 99, 110, 115, 117, 118, 121, 122, 123, 124, 125, 129, 145, 148, 149, 150, 152, 153, 154, 156, 157, 159, 161, 162, 166, 167, 168, 186, 187, 188, 189, 190, 191], "parset": [2, 4, 58, 60, 61, 65, 68, 93, 94, 96, 111, 112, 115, 117, 118, 121, 122, 123, 124, 125, 131, 144, 146, 148, 150, 152, 153, 161, 186, 187, 191], "pars_to_adjust": 2, "output_quant": 2, "max_tim": [2, 112, 115, 144, 187], "60": [2, 112, 144, 150, 151, 158, 164], "method": [2, 4, 16, 18, 21, 23, 24, 28, 37, 45, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 98, 99, 107, 108, 109, 110, 112, 113, 116, 117, 118, 121, 122, 123, 124, 125, 127, 131, 132, 133, 134, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 162, 166, 186, 187, 188, 191], "asd": [2, 53, 70, 71, 76, 85, 86, 87, 88, 89, 90, 115, 144, 161, 191], "sourc": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 150, 153, 154, 157, 158, 162, 166, 167, 168, 184, 186, 190, 191], "autom": [2, 150, 152, 153, 187], "paramet": [2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 145, 147, 148, 151, 153, 154, 156, 157, 159, 161, 163, 164, 165, 167, 168, 186, 187, 188, 189, 190, 191], "A": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 35, 37, 38, 40, 44, 46, 47, 48, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 102, 104, 105, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 121, 122, 123, 124, 125, 131, 132, 134, 136, 137, 139, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 180, 186, 187, 188, 191], "instanc": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 23, 24, 26, 28, 37, 38, 44, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 74, 85, 90, 93, 95, 96, 98, 100, 102, 107, 108, 109, 110, 112, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 134, 135, 144, 146, 148, 150, 151, 153, 154, 157, 160, 161, 165, 187], "provid": [2, 4, 16, 18, 23, 35, 37, 42, 43, 60, 68, 70, 75, 78, 83, 85, 90, 98, 101, 104, 105, 109, 110, 112, 113, 116, 117, 118, 124, 131, 134, 144, 145, 146, 147, 150, 151, 153, 154, 157, 158, 159, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 191], "data": [2, 3, 4, 7, 9, 10, 11, 12, 22, 23, 24, 27, 37, 54, 55, 57, 60, 61, 64, 65, 66, 67, 72, 73, 75, 78, 80, 81, 82, 83, 84, 94, 95, 96, 98, 99, 102, 105, 108, 109, 110, 111, 112, 114, 117, 118, 119, 134, 144, 146, 147, 148, 152, 153, 155, 157, 158, 159, 161, 162, 165, 167, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191], "sim": [2, 61], "set": [2, 4, 7, 18, 20, 23, 24, 26, 33, 37, 44, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 85, 87, 88, 90, 93, 95, 98, 99, 100, 101, 102, 106, 107, 108, 109, 111, 112, 117, 119, 122, 125, 127, 131, 133, 134, 144, 145, 146, 147, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 165, 166, 168, 186, 187, 188, 189, 190, 191], "parameterset": [2, 4, 60, 61, 68, 93, 94, 95, 112, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 144, 153, 162, 165, 186, 187, 191], "list": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 21, 23, 24, 29, 30, 37, 40, 45, 48, 49, 51, 60, 61, 71, 75, 76, 78, 80, 83, 85, 86, 87, 88, 89, 90, 95, 98, 100, 101, 102, 103, 104, 105, 108, 111, 112, 117, 118, 119, 124, 129, 131, 134, 136, 138, 139, 144, 145, 146, 147, 148, 150, 151, 153, 154, 157, 161, 162, 165, 166, 186, 187, 189], "tupl": [2, 4, 7, 8, 13, 18, 30, 37, 40, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 70, 85, 98, 110, 115, 117, 119, 124, 131, 134, 138, 145, 150], "par_nam": [2, 37, 61, 118, 124, 146, 147, 153, 162, 188], "pop_nam": [2, 58, 72, 73, 75, 78, 80, 81, 82, 83, 84, 95, 118, 124, 150, 153, 186], "lower_limit": 2, "upper_limit": 2, "pop": [2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 18, 23, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 80, 95, 96, 98, 99, 102, 107, 108, 110, 112, 117, 118, 119, 131, 144, 146, 147, 148, 149, 150, 151, 153, 154, 165, 186, 188, 190], "name": [2, 3, 4, 6, 7, 13, 14, 15, 18, 23, 24, 28, 37, 38, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 75, 78, 80, 83, 85, 87, 88, 89, 95, 96, 98, 99, 105, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 121, 122, 123, 124, 125, 131, 132, 141, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 157, 158, 160, 161, 162, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191], "can": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 18, 23, 24, 26, 28, 35, 37, 40, 44, 51, 52, 53, 56, 57, 58, 60, 61, 64, 65, 70, 74, 85, 88, 90, 96, 98, 99, 102, 104, 105, 109, 110, 111, 112, 117, 119, 124, 125, 129, 131, 133, 136, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "none": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 26, 28, 32, 33, 34, 37, 38, 45, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 75, 78, 82, 83, 84, 85, 87, 88, 90, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 125, 129, 131, 132, 134, 139, 141, 142, 144, 145, 146, 150, 151, 152, 153, 154, 161, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 191], "expand": [2, 37, 96, 98, 168], "all": [2, 3, 4, 7, 8, 12, 14, 15, 18, 23, 24, 28, 35, 37, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74, 75, 78, 80, 81, 83, 85, 87, 88, 90, 91, 95, 96, 98, 107, 109, 110, 111, 112, 115, 117, 118, 119, 125, 131, 133, 134, 138, 141, 144, 145, 146, 147, 148, 150, 152, 153, 154, 157, 158, 159, 161, 162, 164, 165, 166, 168, 170, 186, 187, 188, 189, 190, 191], "popul": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 23, 24, 37, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 75, 78, 80, 83, 95, 96, 98, 99, 100, 107, 108, 110, 112, 117, 118, 119, 124, 128, 131, 144, 145, 147, 148, 150, 152, 153, 156, 158, 159, 161, 163, 166, 168, 186, 187, 189, 191, 192], "relev": [2, 146, 150, 154, 162, 166, 186, 190], "independ": [2, 85, 87, 88, 90, 95, 96, 108, 110, 112, 134, 144, 147, 153, 154, 157, 159, 161, 162, 165, 166, 186, 188], "instead": [2, 12, 18, 26, 29, 34, 49, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 95, 99, 131, 141, 144, 145, 146, 147, 148, 150, 152, 153, 154, 156, 157, 158, 160, 161, 162, 164, 165, 168, 186, 188, 189, 190], "oper": [2, 28, 29, 37, 40, 41, 58, 60, 68, 85, 95, 98, 105, 112, 131, 134, 144, 145, 146, 147, 150, 151, 153, 154, 157, 158, 161, 162, 165, 166, 188, 189], "meta": [2, 168], "y": [2, 23, 40, 95, 96, 124, 131, 144, 145, 146, 150, 151, 154, 156, 158, 161, 162, 166, 168, 188, 190, 191], "factor": [2, 80, 83, 90, 96, 109, 144, 146, 150, 157, 159, 161, 162, 186, 187, 188], "var_label": 2, "weight": [2, 60, 80, 81, 83, 98, 112, 145, 150, 154, 161, 165, 188], "metric": [2, 74, 112, 161], "object": [2, 3, 4, 9, 10, 11, 12, 14, 18, 23, 24, 37, 40, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 98, 99, 101, 107, 108, 109, 110, 113, 117, 118, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 134, 139, 140, 144, 145, 147, 148, 150, 152, 153, 160, 161, 162, 165, 166, 186, 187, 188, 190, 191], "support": [2, 4, 7, 8, 9, 10, 11, 12, 13, 15, 20, 28, 37, 42, 43, 75, 78, 83, 98, 108, 112, 117, 124, 127, 131, 138, 146, 147, 148, 150, 153, 161, 162, 165], "If": [2, 4, 6, 7, 8, 9, 10, 15, 18, 20, 26, 27, 29, 32, 34, 37, 38, 56, 58, 60, 61, 62, 66, 68, 70, 74, 75, 78, 83, 87, 88, 90, 95, 96, 98, 99, 100, 101, 104, 105, 108, 109, 110, 112, 117, 118, 119, 121, 122, 123, 124, 125, 131, 133, 134, 138, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 165, 166, 168, 186, 188, 189, 190, 191], "maximum": [2, 42, 70, 85, 88, 95, 115, 118, 144, 145, 147, 148, 150, 151, 152, 153, 166, 167], "time": [2, 4, 7, 8, 10, 11, 12, 14, 18, 22, 23, 24, 37, 49, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 76, 78, 80, 83, 85, 86, 87, 90, 95, 96, 98, 99, 100, 102, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 124, 133, 134, 138, 144, 146, 147, 149, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 165, 166, 167, 186, 187, 188, 189, 190, 191], "pso": [2, 85], "upper": [2, 85, 87, 89, 90, 91, 92, 93, 98, 115, 146, 150, 161, 166], "lower": [2, 85, 87, 89, 90, 92, 93, 98, 115, 146, 150, 161, 168, 187, 190, 191], "limit": [2, 4, 60, 64, 70, 85, 87, 112, 117, 144, 145, 146, 147, 148, 150, 151, 152, 154, 161, 166, 167, 187, 191], "must": [2, 4, 6, 9, 10, 11, 12, 14, 15, 23, 24, 42, 43, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 78, 83, 85, 88, 95, 96, 98, 99, 108, 109, 110, 112, 117, 118, 119, 121, 122, 123, 124, 125, 132, 134, 144, 146, 151, 153, 154, 157, 158, 161, 162, 165, 166, 168, 186, 188, 190, 191], "finit": [2, 79, 85, 95, 134, 191], "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 40, 41, 42, 43, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 125, 129, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 166, 167, 168, 187, 191], "type": [2, 3, 4, 6, 8, 12, 13, 14, 15, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 37, 40, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 74, 75, 76, 78, 82, 83, 84, 85, 86, 87, 88, 90, 92, 95, 96, 98, 100, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 127, 129, 131, 134, 135, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 163, 164, 166, 167, 168, 186, 188], "util": [3, 22, 144, 152, 153, 154, 186], "work": [3, 4, 13, 18, 98, 99, 107, 110, 112, 116, 117, 134, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 157, 161, 162, 165, 166, 167, 186, 187, 188, 189, 190, 191], "ar": [3, 4, 7, 9, 10, 15, 18, 22, 23, 24, 28, 29, 37, 39, 40, 42, 43, 49, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 75, 78, 83, 85, 88, 90, 91, 93, 94, 95, 96, 98, 99, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 124, 125, 131, 134, 136, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "projectframework": [3, 4, 7, 13, 15, 18, 35, 38, 49, 60, 61, 68, 96, 110, 112, 118, 144, 153, 154, 156, 167, 186, 188, 190], "includ": [3, 4, 37, 57, 66, 67, 80, 88, 95, 98, 99, 119, 131, 134, 145, 146, 147, 148, 150, 153, 156, 157, 158, 161, 162, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191], "valid": [3, 4, 5, 6, 13, 15, 18, 34, 37, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 72, 73, 110, 131, 144, 147, 150, 153, 154, 158, 161, 162, 165, 168, 186], "plot": [3, 4, 7, 9, 10, 11, 12, 13, 14, 18, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 116, 117, 118, 119, 136, 137, 144, 145, 146, 151, 152, 154, 155, 156, 157, 161, 162, 167, 186, 187, 188, 190, 191], "valu": [3, 4, 6, 7, 8, 10, 18, 23, 24, 26, 27, 28, 32, 33, 37, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 122, 124, 131, 134, 138, 144, 145, 146, 148, 149, 151, 152, 153, 154, 156, 157, 159, 161, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "extract": [3, 18, 23, 60, 70, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 98, 134, 148, 161], "On": [3, 18, 145, 151, 152, 161, 165, 186, 191], "side": [3, 18, 49, 145, 158, 166, 186], "two": [3, 4, 7, 18, 23, 60, 66, 68, 75, 78, 83, 86, 91, 95, 96, 98, 100, 120, 131, 134, 138, 144, 145, 146, 148, 150, 151, 152, 153, 156, 157, 158, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "kei": [3, 4, 7, 14, 18, 33, 37, 95, 96, 98, 101, 103, 109, 110, 112, 117, 118, 124, 127, 131, 134, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 166, 168, 187, 189, 191], "plot_single_cascad": [3, 9], "make": [3, 4, 7, 18, 34, 49, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 87, 95, 98, 99, 103, 112, 131, 144, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 161, 162, 164, 165, 166, 186, 187, 188, 190, 191], "singl": [3, 4, 8, 9, 10, 11, 12, 14, 24, 37, 40, 51, 60, 62, 70, 75, 78, 80, 83, 86, 87, 90, 95, 96, 98, 106, 107, 108, 110, 112, 117, 118, 124, 131, 134, 139, 146, 147, 148, 150, 153, 154, 157, 158, 159, 161, 162, 164, 165, 166, 168, 186, 187, 188, 191], "complet": [3, 4, 56, 93, 118, 144, 146, 151, 158, 159, 162, 165, 186], "shade": [3, 4, 12, 117, 150, 153], "region": 3, "between": [3, 7, 9, 18, 23, 32, 37, 57, 58, 60, 66, 74, 90, 95, 98, 109, 110, 112, 118, 134, 145, 146, 147, 150, 151, 152, 154, 156, 157, 158, 159, 161, 162, 165, 166, 167, 168, 186, 187, 188, 189, 191], "bar": [3, 4, 10, 100, 117, 129, 139, 140, 141, 153, 165], "convers": [3, 4, 58, 80, 117, 131, 146, 151, 155, 162, 166], "arrow": [3, 168, 186], "plot_multi_cascad": [3, 4, 9, 153], "scenario": [3, 4, 20, 21, 95, 98, 109, 110, 111, 112, 117, 146, 147, 148, 150, 153, 155, 159, 161, 162, 165, 186, 191], "comparison": [3, 112, 115, 153, 155], "group": [3, 4, 10, 14, 23, 54, 56, 62, 65, 98, 100, 102, 118, 119, 138, 145, 146, 147, 150, 153, 159, 166, 186, 189], "stage": [3, 4, 5, 10, 12, 13, 15, 18, 37, 56, 58, 80, 109, 119, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 161, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191], "possibl": [3, 10, 15, 18, 56, 62, 70, 74, 77, 92, 95, 98, 103, 107, 131, 134, 145, 146, 147, 148, 150, 152, 153, 154, 158, 159, 161, 162, 165, 166, 167, 168, 186, 187, 188, 189, 191], "normal": [3, 4, 12, 13, 18, 37, 45, 56, 62, 64, 85, 93, 95, 98, 99, 102, 108, 110, 119, 134, 141, 142, 145, 146, 148, 150, 151, 152, 153, 157, 160, 162, 165, 166, 188, 190], "plot_bar": [3, 4, 10, 98, 105, 117, 138, 144, 148, 149, 150, 153], "take": [3, 4, 6, 18, 37, 38, 40, 42, 43, 49, 51, 56, 57, 58, 60, 61, 64, 65, 75, 78, 83, 85, 98, 101, 108, 109, 112, 117, 122, 124, 125, 131, 137, 138, 144, 145, 146, 148, 150, 151, 152, 153, 154, 161, 162, 165, 166, 168, 186, 188, 189, 190, 191], "argument": [3, 4, 6, 40, 51, 90, 93, 95, 98, 105, 107, 112, 117, 129, 131, 139, 147, 148, 150, 151, 153, 157, 160, 187, 188, 191], "user": [3, 4, 13, 15, 18, 24, 37, 90, 93, 99, 111, 117, 128, 137, 144, 145, 146, 150, 151, 154, 158, 159, 160, 161, 162, 165, 186, 188, 189], "specifi": [3, 4, 6, 7, 8, 13, 14, 18, 23, 24, 37, 51, 56, 60, 61, 62, 68, 70, 71, 74, 75, 78, 83, 85, 87, 88, 90, 93, 95, 96, 98, 99, 101, 102, 107, 108, 109, 110, 112, 115, 117, 118, 119, 121, 122, 123, 124, 125, 128, 131, 134, 136, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 191], "framework": [3, 4, 7, 13, 15, 18, 29, 39, 46, 52, 56, 58, 60, 61, 62, 68, 80, 95, 96, 110, 112, 118, 119, 124, 136, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 181, 182, 185, 186, 187, 188, 189, 190, 191], "index": [3, 4, 13, 23, 24, 33, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 98, 103, 117, 131, 145, 146, 147, 150, 154, 161], "comp": [3, 18, 37, 60, 61, 110, 144, 145, 146, 147], "charac": [3, 13, 18, 37, 60, 61, 145, 146], "order": [3, 4, 18, 49, 56, 58, 61, 62, 74, 96, 104, 109, 117, 118, 119, 131, 134, 138, 145, 146, 147, 151, 153, 154, 157, 161, 162, 165, 166, 186, 187, 188], "match": [3, 4, 6, 7, 14, 18, 24, 37, 74, 95, 98, 99, 102, 108, 110, 114, 115, 118, 119, 125, 131, 134, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 158, 161, 162, 165, 166, 168, 187, 188, 190, 191], "dict": [3, 4, 7, 13, 14, 18, 23, 24, 33, 37, 40, 60, 80, 90, 93, 95, 96, 98, 101, 103, 107, 109, 110, 117, 118, 122, 124, 131, 136, 144, 145, 146, 147, 148, 150, 153, 154, 161], "custom": [3, 28, 98, 145, 146, 147, 150, 157], "refer": [3, 4, 15, 23, 24, 29, 44, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 70, 98, 117, 125, 144, 145, 146, 147, 159, 161, 162, 165, 166, 168, 186, 187, 191], "code": [3, 4, 14, 18, 23, 26, 37, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 87, 95, 96, 105, 107, 108, 110, 112, 117, 118, 124, 131, 145, 146, 147, 148, 150, 153, 154, 157, 160, 161, 165, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189], "first": [3, 4, 12, 13, 18, 23, 24, 57, 90, 95, 98, 100, 107, 108, 117, 119, 131, 134, 138, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 165, 166, 168, 186, 187, 188, 189, 190, 191], "represent": [3, 4, 7, 8, 13, 14, 15, 16, 35, 37, 39, 40, 45, 52, 60, 94, 99, 108, 109, 110, 131, 136, 137, 144, 145, 147, 154, 166, 168, 186, 191], "map": [3, 4, 13, 18, 23, 24, 37, 57, 60, 61, 69, 85, 90, 98, 104, 109, 112, 115, 117, 131, 139, 144, 145, 146, 150, 151, 152, 153, 154, 157, 159, 161, 165, 166, 167, 168, 187, 191], "while": [3, 4, 37, 54, 56, 60, 62, 67, 73, 91, 98, 99, 108, 110, 115, 138, 144, 146, 150, 151, 153, 154, 157, 161, 165, 166, 168, 186, 187, 188, 191], "last": [3, 37, 105, 109, 112, 131, 142, 145, 146, 150, 152, 158, 166, 168, 187, 189], "relat": [3, 18, 98, 109, 110, 144, 146, 147, 148, 156, 158, 165, 166, 186, 187, 188, 189, 191], "fly": [3, 125, 153], "thei": [3, 4, 18, 24, 37, 44, 56, 61, 62, 66, 70, 93, 96, 98, 109, 110, 112, 115, 117, 118, 125, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "therefor": [3, 18, 37, 51, 56, 57, 62, 64, 65, 66, 74, 85, 94, 95, 98, 107, 109, 110, 141, 144, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 191], "sanit": [3, 4, 7, 14], "sanitize_cascade_input": 3, "turn": [3, 13, 60, 87, 109, 118, 146, 147, 152, 154, 158, 165, 166, 168, 186], "indic": [3, 23, 30, 55, 56, 62, 63, 64, 65, 66, 104, 111, 131, 134, 146, 148, 150, 153, 156, 166, 186, 187, 188], "string": [3, 4, 13, 14, 18, 23, 24, 26, 27, 34, 37, 39, 40, 48, 51, 60, 85, 95, 96, 98, 99, 104, 105, 107, 108, 110, 112, 117, 118, 121, 122, 123, 124, 125, 131, 132, 134, 136, 137, 145, 150, 153, 161, 166], "predefin": 3, "allow": [3, 4, 18, 24, 28, 37, 40, 46, 47, 48, 49, 56, 57, 58, 60, 61, 62, 66, 72, 73, 85, 88, 90, 98, 104, 105, 110, 115, 122, 125, 131, 134, 144, 145, 146, 150, 152, 153, 154, 156, 157, 160, 161, 162, 166, 168, 186, 187, 189, 190, 191], "titl": [3, 11, 13, 24, 145, 147, 148, 150, 151, 152, 153, 156, 191], "get_cascade_output": 3, "dictionari": [3, 4, 13, 24, 33, 37, 51, 90, 93, 96, 107, 110, 112, 118, 124, 131, 146, 150, 154, 161], "alwai": [3, 9, 56, 62, 98, 110, 112, 119, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 162, 165, 166, 168, 187, 189, 191], "requir": [3, 4, 9, 18, 26, 33, 37, 40, 45, 51, 54, 57, 58, 60, 61, 67, 68, 69, 70, 75, 78, 85, 95, 96, 98, 108, 109, 110, 117, 118, 122, 124, 134, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 164, 166, 167, 168, 186, 187, 188, 189, 190], "when": [3, 4, 18, 23, 24, 28, 37, 49, 51, 55, 57, 58, 60, 64, 66, 67, 85, 88, 90, 93, 98, 99, 105, 107, 110, 112, 117, 118, 121, 122, 123, 124, 125, 128, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 191], "retriev": [3, 4, 7, 8, 18, 37, 58, 60, 61, 85, 96, 98, 107, 108, 110, 117, 118, 134, 145, 146, 147, 150, 152, 160, 161, 189], "There": [3, 18, 63, 91, 120, 131, 134, 144, 146, 152, 153, 154, 158, 161, 165, 166, 167, 168, 186, 187, 188, 191], "get_cascade_v": [3, 4, 7], "each": [3, 4, 9, 11, 12, 23, 24, 30, 37, 44, 61, 65, 66, 67, 68, 71, 76, 80, 83, 85, 86, 87, 88, 89, 95, 96, 98, 100, 102, 105, 107, 108, 109, 110, 112, 117, 118, 131, 134, 138, 139, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 180, 186, 187, 188, 189, 190, 191], "from": [3, 4, 7, 12, 14, 18, 23, 24, 26, 27, 28, 29, 30, 32, 37, 44, 51, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 74, 85, 87, 90, 93, 95, 96, 97, 98, 108, 109, 110, 111, 112, 115, 117, 118, 119, 122, 124, 125, 131, 134, 137, 138, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "model": [3, 7, 18, 20, 35, 37, 51, 72, 73, 75, 78, 80, 81, 82, 83, 84, 85, 94, 95, 96, 97, 98, 107, 108, 110, 112, 114, 116, 118, 145, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 182, 187, 188, 189, 190, 191, 192], "result": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 20, 24, 26, 42, 43, 45, 46, 47, 48, 49, 51, 60, 68, 91, 98, 99, 100, 102, 104, 108, 110, 111, 112, 121, 122, 123, 124, 125, 131, 138, 139, 144, 145, 146, 148, 149, 150, 151, 152, 155, 156, 158, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "get_cascade_data": 3, "attempt": [3, 4, 112, 117, 150, 153], "comput": [3, 4, 37, 52, 54, 56, 58, 60, 61, 62, 67, 74, 76, 85, 87, 90, 93, 98, 99, 107, 108, 109, 110, 117, 146, 147, 149, 150, 151, 153, 154, 156, 157, 159, 161, 162, 165, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191], "projectdata": [3, 7, 9, 10, 11, 12, 16, 23, 24, 28, 96, 110, 112, 144, 153, 154, 156, 186, 188, 190, 191], "compart": [3, 13, 15, 18, 37, 52, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 98, 99, 108, 109, 110, 118, 144, 145, 147, 148, 150, 151, 153, 154, 156, 157, 159, 163, 164, 165, 166, 168, 186, 187, 188, 189, 190, 191], "characterist": [3, 18, 24, 37, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 98, 112, 118, 145, 147, 148, 150, 153, 154, 156, 161, 162, 165, 186, 187, 188, 192], "sum": [3, 55, 56, 61, 62, 63, 64, 65, 66, 75, 78, 80, 83, 88, 90, 91, 92, 98, 146, 148, 150, 151, 153, 158, 161, 162, 164, 165, 166, 186, 188, 189, 190, 191], "onli": [3, 4, 11, 14, 18, 23, 24, 29, 37, 38, 40, 49, 51, 56, 58, 60, 61, 62, 63, 64, 65, 70, 74, 90, 98, 99, 100, 102, 103, 104, 107, 108, 110, 112, 115, 117, 118, 119, 131, 134, 136, 138, 144, 145, 146, 147, 148, 150, 151, 153, 156, 157, 159, 160, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 190, 191], "displai": [3, 4, 9, 23, 34, 98, 99, 108, 110, 117, 118, 137, 145, 147, 148, 149, 150, 153, 160, 186, 189], "ha": [3, 4, 23, 26, 33, 34, 56, 60, 62, 63, 87, 90, 95, 98, 99, 105, 110, 115, 117, 125, 131, 134, 136, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "quantiti": [3, 4, 18, 23, 24, 28, 37, 38, 40, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 78, 83, 87, 96, 98, 99, 102, 109, 117, 118, 119, 127, 134, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 161, 162, 165, 166, 186, 187, 188, 189, 190, 191], "year": [3, 4, 6, 7, 8, 9, 10, 11, 18, 24, 60, 61, 66, 75, 78, 83, 88, 89, 90, 98, 99, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 124, 135, 137, 144, 146, 148, 149, 150, 151, 153, 156, 157, 158, 159, 161, 162, 165, 166, 168, 186, 187, 188, 190, 191], "being": [3, 4, 13, 26, 29, 37, 53, 60, 70, 71, 76, 86, 87, 88, 89, 90, 91, 93, 98, 107, 109, 110, 117, 119, 131, 139, 141, 144, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 190, 191], "class": [3, 4, 16, 18, 22, 23, 24, 26, 28, 35, 37, 44, 45, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 144, 145, 146, 153, 154, 164, 166, 186], "except": [3, 5, 16, 17, 26, 29, 34, 35, 36, 52, 53, 59, 61, 69, 77, 79, 91, 98, 110, 126, 128, 131, 146, 153, 154, 161, 164, 165, 168, 186, 188, 191], "baseline_result": [4, 117, 153, 167], "base": [4, 9, 16, 18, 23, 24, 37, 45, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 105, 107, 108, 109, 110, 111, 112, 113, 117, 118, 121, 122, 123, 124, 125, 127, 131, 132, 133, 134, 144, 145, 146, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 166, 167, 168, 186, 187, 190, 191], "ensembl": [4, 6, 53, 112, 167], "special": [4, 37, 60, 112, 117, 134, 145, 146, 150, 154, 164, 165, 168, 186, 188, 189, 190], "orient": [4, 100, 118, 146, 150, 165, 186], "It": [4, 13, 18, 24, 37, 40, 45, 52, 56, 60, 67, 74, 75, 77, 78, 83, 95, 96, 99, 107, 109, 110, 112, 117, 118, 125, 129, 137, 138, 144, 145, 146, 147, 150, 151, 152, 153, 154, 158, 161, 162, 165, 166, 168, 169, 186, 187, 189, 190, 191], "pre": [4, 56, 62, 107, 124, 144, 153, 161, 186, 188, 190, 191], "wrapper": [4, 68, 93, 116, 118, 161], "conceptu": [4, 24, 98, 150, 151, 161, 165, 189], "idea": [4, 151, 153, 186, 187, 188, 191], "do": [4, 10, 18, 49, 55, 56, 57, 62, 64, 88, 90, 98, 107, 124, 131, 134, 144, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 165, 168, 186, 187, 188, 189, 190, 191], "thing": [4, 23, 98, 124, 131, 144, 150, 153, 165, 166, 168, 169, 186], "have": [4, 7, 9, 18, 23, 24, 26, 49, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 85, 88, 90, 95, 98, 99, 105, 107, 112, 115, 117, 119, 124, 134, 138, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "gener": [4, 7, 9, 10, 11, 12, 18, 28, 37, 38, 46, 47, 48, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 95, 96, 97, 98, 99, 105, 107, 110, 112, 115, 117, 118, 119, 134, 138, 141, 144, 145, 146, 147, 148, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 187, 188, 191], "plotdata": [4, 14, 99, 100, 102, 117, 118, 144, 147, 149, 150, 151, 152, 153, 156, 162, 165, 167, 186, 187, 188, 190, 191], "where": [4, 7, 8, 9, 18, 24, 37, 41, 56, 58, 60, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 88, 90, 95, 98, 101, 103, 105, 108, 109, 110, 112, 117, 124, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "output": [4, 7, 10, 26, 51, 56, 62, 65, 68, 72, 73, 75, 78, 80, 81, 82, 83, 84, 97, 98, 99, 100, 102, 107, 108, 110, 115, 116, 117, 118, 119, 133, 134, 136, 139, 141, 142, 144, 146, 147, 149, 150, 151, 153, 154, 156, 158, 159, 161, 162, 165, 166, 167, 168, 187, 188, 189, 190, 191], "same": [4, 7, 15, 18, 42, 43, 56, 57, 60, 61, 62, 65, 66, 68, 70, 85, 87, 88, 90, 92, 95, 98, 99, 100, 101, 103, 105, 108, 109, 112, 117, 118, 119, 131, 134, 136, 138, 141, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 190, 191], "color": [4, 98, 99, 144, 156], "rule": [4, 95, 98, 146, 150, 153, 165, 168, 190], "out": [4, 7, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 68, 72, 73, 105, 110, 131, 144, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 165, 166, 168, 186, 189, 190], "store": [4, 6, 18, 20, 23, 24, 34, 37, 45, 51, 55, 56, 57, 60, 62, 64, 65, 67, 70, 74, 75, 78, 85, 94, 95, 96, 98, 99, 107, 109, 112, 117, 118, 122, 124, 127, 131, 134, 144, 145, 146, 147, 150, 152, 153, 154, 157, 160, 161, 162, 166, 168, 189, 190, 191], "rather": [4, 7, 18, 27, 37, 41, 56, 58, 61, 62, 74, 85, 90, 98, 108, 109, 113, 117, 118, 131, 134, 145, 146, 147, 148, 150, 151, 153, 154, 157, 158, 161, 162, 164, 165, 166, 168, 189, 191], "than": [4, 7, 18, 23, 27, 32, 37, 41, 56, 57, 58, 61, 62, 72, 73, 74, 85, 86, 88, 90, 91, 98, 99, 108, 109, 113, 117, 118, 131, 134, 145, 146, 147, 148, 150, 151, 153, 154, 157, 158, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 190, 191], "both": [4, 23, 42, 43, 61, 68, 74, 85, 98, 109, 112, 118, 122, 131, 141, 144, 146, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 165, 166, 168, 186, 187, 188, 189, 191], "abov": [4, 61, 72, 131, 133, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 190, 191], "step": [4, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 90, 98, 108, 113, 118, 124, 134, 144, 146, 148, 149, 150, 151, 153, 156, 157, 158, 159, 161, 162, 165, 166, 167, 168, 186, 187, 191], "constructor": [4, 18, 57, 66, 85, 95, 96, 98, 108, 110, 112, 117, 118, 121, 122, 123, 124, 125, 132, 146, 148, 150, 153, 161, 165, 186], "intern": [4, 37, 66, 95, 107, 110, 114, 115, 126, 134, 146, 147, 150, 152, 153, 154, 162, 166, 168, 186], "suitabl": [4, 23, 98, 99, 157, 165, 168, 186, 187], "handl": [4, 10, 58, 108, 110, 117, 120, 141, 145, 146, 148, 149, 150, 158, 162, 166], "multi": [4, 9, 153, 189], "error": [4, 5, 15, 18, 26, 27, 34, 37, 53, 59, 63, 77, 79, 87, 91, 98, 113, 117, 128, 134, 142, 145, 146, 151, 153, 154, 158, 160, 162, 165, 166, 189, 191], "sanitize_cascad": [4, 7, 8, 9, 10, 11, 12, 15], "howev": [4, 7, 18, 28, 37, 56, 57, 62, 68, 95, 98, 99, 107, 109, 125, 131, 134, 141, 145, 146, 148, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "advanc": [4, 37, 95, 124, 165, 166, 186], "aggreg": [4, 6, 9, 10, 11, 12, 14, 58, 60, 80, 98, 99, 118, 119, 146, 147, 149, 153, 161, 162, 165, 187, 188, 189], "one": [4, 6, 7, 13, 18, 23, 24, 29, 32, 37, 44, 55, 56, 58, 60, 61, 62, 64, 69, 70, 71, 73, 76, 80, 85, 86, 87, 88, 89, 95, 96, 98, 100, 107, 108, 109, 110, 112, 115, 117, 118, 134, 138, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 190, 191], "record": [4, 56, 62, 141, 158], "multipl": [4, 9, 10, 11, 57, 58, 60, 75, 78, 83, 86, 88, 96, 105, 109, 112, 117, 145, 146, 147, 148, 150, 153, 154, 158, 161, 162, 165, 166, 168, 186, 187, 190, 191, 192], "creat": [4, 18, 20, 21, 24, 32, 37, 57, 61, 66, 96, 100, 101, 102, 110, 112, 131, 133, 145, 147, 150, 152, 153, 160, 165, 168, 186, 187, 188, 189, 190, 191], "further": [4, 72, 73, 75, 78, 80, 81, 82, 83, 84, 98, 144, 146, 152, 153, 157, 162, 165, 166, 168, 186, 187, 188, 189, 191], "option": [4, 7, 8, 11, 23, 24, 37, 51, 56, 60, 61, 62, 68, 70, 85, 87, 88, 93, 95, 96, 98, 100, 101, 103, 105, 108, 109, 110, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 125, 129, 131, 134, 139, 144, 145, 146, 147, 148, 152, 153, 154, 160, 161, 162, 165, 166, 186, 191], "interpol": [4, 55, 57, 60, 64, 67, 95, 98, 99, 108, 109, 110, 117, 122, 124, 134, 144, 146, 148, 153, 154, 158, 186, 191], "onto": [4, 98, 99, 109, 117, 124, 146, 148, 150, 152, 153, 158, 162, 165, 166, 186], "reduc": [4, 72, 73, 75, 78, 80, 81, 82, 83, 84, 144, 153, 159, 168, 187, 191], "storag": [4, 33, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 112, 118, 146, 153, 165, 166, 189], "baselin": [4, 72, 73, 75, 78, 80, 81, 82, 83, 84, 85, 93, 107, 108, 115, 117, 124, 144, 150, 152, 153, 157, 166, 167, 191], "obtain": [4, 65, 66, 85, 134, 146, 150, 151, 153, 162, 166, 167, 186, 189], "without": [4, 49, 57, 66, 105, 110, 117, 124, 134, 141, 142, 145, 146, 149, 150, 152, 153, 154, 156, 158, 162, 165, 166, 168, 177, 181, 185, 186, 187, 188, 190, 191], "uncertainti": [4, 23, 24, 95, 107, 108, 110, 117, 134, 155, 158, 166, 167, 186, 187, 191], "evalu": [4, 14, 58, 60, 65, 85, 98, 110, 115, 136, 144, 146, 147, 150, 151, 152, 161, 162, 165, 189, 191], "more": [4, 23, 29, 32, 37, 44, 70, 71, 86, 88, 99, 109, 117, 124, 134, 144, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 161, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "nameditem": [4, 85, 95, 96, 108, 110, 112, 117, 118, 121, 122, 123, 124, 125, 144, 153, 186], "attribut": [4, 18, 23, 24, 37, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 76, 85, 86, 87, 88, 89, 95, 96, 99, 107, 108, 112, 113, 115, 117, 118, 121, 122, 123, 124, 125, 127, 134, 146, 147, 150, 152, 154, 159, 161, 162, 187, 191], "add": [4, 18, 23, 28, 60, 95, 98, 110, 117, 124, 131, 144, 145, 152, 153, 162, 165, 166, 168, 186, 187, 188, 190, 191], "kwarg": [4, 50, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 95, 112, 117, 131, 134], "sampl": [4, 53, 95, 96, 107, 108, 110, 112, 117, 134, 144, 151, 152, 154, 162, 167, 186], "ani": [4, 6, 13, 15, 18, 23, 24, 37, 42, 43, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 85, 87, 90, 95, 96, 98, 102, 107, 108, 109, 110, 114, 117, 118, 119, 131, 134, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 186, 187, 188, 190, 191], "other": [4, 18, 37, 55, 57, 58, 60, 64, 67, 73, 77, 91, 95, 98, 102, 105, 112, 117, 124, 125, 131, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 161, 162, 164, 165, 166, 167, 168, 169, 186, 187, 188, 189, 191], "need": [4, 7, 18, 28, 37, 49, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 90, 98, 110, 117, 118, 136, 144, 145, 146, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "": [4, 18, 21, 23, 27, 49, 51, 56, 57, 60, 61, 62, 65, 68, 74, 85, 90, 92, 95, 96, 97, 107, 108, 109, 110, 112, 115, 117, 131, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "call": [4, 9, 13, 18, 23, 40, 42, 43, 44, 49, 51, 54, 55, 56, 57, 58, 60, 62, 64, 67, 74, 85, 95, 98, 107, 108, 110, 112, 117, 134, 139, 140, 145, 146, 147, 150, 152, 153, 157, 167, 187, 191], "addit": [4, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 85, 99, 107, 108, 109, 111, 117, 129, 144, 145, 146, 147, 148, 150, 152, 153, 154, 156, 158, 159, 162, 165, 166, 167, 168, 186, 187, 190, 191], "keyword": [4, 40, 93, 117, 127, 150], "pass": [4, 6, 23, 24, 37, 55, 61, 64, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 93, 95, 98, 110, 112, 117, 125, 134, 139, 144, 145, 146, 147, 148, 150, 153, 154, 161, 165, 166, 186, 187, 191], "e": [4, 6, 14, 15, 18, 20, 22, 23, 24, 26, 28, 33, 37, 40, 45, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 75, 78, 80, 81, 82, 83, 84, 85, 88, 90, 96, 98, 99, 101, 106, 107, 108, 109, 110, 112, 113, 117, 118, 119, 127, 129, 131, 134, 136, 137, 140, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 186, 187, 191], "outcom": [4, 107, 108, 109, 110, 115, 117, 144, 145, 147, 153, 157, 159, 162, 165, 187, 191], "boxplot": [4, 117, 153], "fig": [4, 6, 101, 103, 104, 105, 117, 150, 151, 153, 167], "render": [4, 10, 99, 100, 101, 104, 117, 148, 150], "box": [4, 117, 168], "effect": [4, 18, 49, 60, 69, 74, 109, 117, 144, 145, 150, 153, 155, 156, 157, 159, 160, 161, 162, 165, 166, 167, 168, 186, 187, 188, 190, 191], "an": [4, 6, 11, 13, 18, 23, 24, 26, 27, 28, 29, 30, 34, 37, 39, 40, 42, 43, 44, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 93, 94, 95, 96, 98, 99, 103, 104, 105, 107, 108, 109, 110, 111, 112, 117, 118, 119, 124, 125, 128, 131, 134, 138, 139, 140, 142, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 165, 166, 167, 168, 173, 174, 186, 187, 188, 189, 190, 191], "altern": [4, 98, 112, 117, 131, 144, 146, 150, 151, 154, 160, 161, 168, 191], "approach": [4, 117, 150, 151, 153, 154, 157, 158, 161, 166, 167, 168, 186, 187], "kernel": [4, 117], "densiti": [4, 117], "estim": [4, 117, 145, 153, 167, 186, 187], "distribut": [4, 117, 150, 158, 166, 167, 168, 189], "figur": [4, 9, 10, 11, 12, 100, 101, 102, 103, 104, 105, 117, 118, 148, 149, 151, 152, 153, 156, 166, 168], "show": [4, 12, 117, 144, 146, 147, 148, 150, 153, 156, 160, 161, 165, 166, 168, 190], "quantil": [4, 117], "whisker": [4, 117], "select": [4, 14, 23, 98, 100, 102, 105, 112, 115, 117, 119, 150, 153, 159, 162, 165, 168, 188, 191], "filter": [4, 98, 117, 131, 150, 153, 161], "exist": [4, 7, 15, 18, 23, 32, 95, 96, 98, 103, 104, 110, 117, 128, 131, 134, 144, 145, 147, 150, 152, 153, 154, 158, 159, 160, 161, 165, 186, 187, 188, 191], "otherwis": [4, 13, 15, 18, 27, 28, 37, 58, 60, 72, 73, 75, 78, 90, 95, 98, 112, 117, 118, 121, 122, 123, 124, 125, 134, 136, 144, 146, 150, 153, 154, 160, 161, 162, 165, 168, 186, 191], "matplotlib": [4, 101, 117, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 191], "note": [4, 7, 18, 23, 24, 27, 28, 37, 40, 49, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 78, 80, 81, 82, 83, 84, 85, 87, 90, 96, 98, 99, 107, 109, 110, 112, 117, 118, 119, 131, 134, 145, 146, 147, 148, 150, 151, 153, 154, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 175, 186, 187, 188, 190, 191], "ever": [4, 49, 117, 150, 189, 191], "get_val": 4, "arrai": [4, 7, 8, 9, 10, 18, 23, 24, 41, 42, 43, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 85, 87, 88, 92, 95, 98, 99, 105, 107, 108, 110, 113, 117, 118, 124, 131, 134, 139, 144, 146, 147, 150, 151, 152, 154, 156, 157], "unlik": [4, 12, 90, 98, 99, 134, 148, 150, 152, 154, 162, 186, 188], "now": [4, 18, 131, 138, 144, 145, 146, 147, 150, 151, 153, 154, 156, 157, 161, 165, 166, 168, 186, 187, 188, 189, 190, 191], "becaus": [4, 5, 6, 18, 28, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 74, 87, 90, 91, 93, 96, 98, 99, 107, 108, 110, 117, 118, 119, 134, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 190, 191], "we": [4, 18, 37, 49, 55, 56, 60, 62, 64, 65, 66, 72, 73, 75, 78, 80, 81, 82, 83, 84, 90, 98, 110, 117, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 165, 166, 168, 186, 187, 188, 189, 190, 191], "certain": [4, 65, 90, 148, 149, 158, 161, 162, 165, 166, 168, 188, 191], "assumpt": [4, 23, 24, 74, 95, 98, 134, 146, 152, 153, 154, 158, 159, 162, 165, 166, 168, 186, 187, 191], "specif": [4, 9, 10, 11, 12, 15, 18, 24, 28, 53, 55, 57, 60, 64, 67, 85, 90, 95, 96, 98, 99, 104, 107, 108, 109, 110, 112, 117, 134, 136, 144, 145, 147, 148, 150, 151, 153, 154, 158, 159, 162, 165, 166, 168, 186, 187, 188, 189, 191], "correspond": [4, 9, 10, 11, 12, 18, 24, 37, 40, 52, 57, 60, 61, 66, 75, 78, 85, 86, 87, 90, 96, 107, 108, 110, 112, 117, 119, 124, 134, 140, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 190, 191], "contain": [4, 6, 9, 10, 11, 14, 15, 18, 23, 24, 26, 27, 30, 32, 35, 37, 40, 46, 47, 51, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 83, 85, 90, 95, 96, 98, 99, 101, 104, 105, 107, 108, 109, 110, 111, 112, 115, 117, 118, 122, 124, 129, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 158, 159, 161, 162, 165, 166, 186, 189, 190, 191], "made": [4, 14, 28, 61, 74, 90, 110, 145, 150, 151, 159, 161, 187, 191], "find": [4, 18, 24, 131, 145, 151, 167, 189], "mai": [4, 7, 28, 37, 46, 47, 48, 51, 53, 54, 55, 56, 57, 60, 62, 64, 66, 67, 68, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 85, 95, 98, 99, 105, 108, 110, 114, 115, 117, 134, 144, 146, 150, 153, 157, 158, 159, 161, 162, 165, 166, 167, 168, 186, 187, 188, 191], "occur": [4, 51, 72, 73, 75, 78, 80, 81, 82, 83, 84, 117, 146, 151, 153, 158, 160, 162, 166, 168, 187, 189], "wa": [4, 6, 9, 13, 15, 23, 24, 26, 37, 51, 56, 92, 104, 109, 110, 112, 117, 118, 119, 128, 145, 147, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 165, 168, 186, 187, 191], "initi": [4, 18, 23, 37, 53, 55, 56, 58, 61, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 98, 110, 112, 115, 117, 131, 133, 144, 145, 146, 147, 150, 151, 152, 153, 156, 159, 161, 162, 163, 165, 166, 167, 179, 186, 187, 188, 189, 191], "case": [4, 28, 49, 65, 66, 68, 70, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 90, 91, 93, 98, 99, 105, 108, 109, 110, 112, 114, 117, 121, 122, 123, 124, 125, 131, 139, 144, 145, 146, 147, 150, 151, 152, 153, 154, 157, 158, 161, 162, 164, 165, 166, 175, 181, 185, 186, 187, 188, 189, 190, 191], "doubl": [4, 21, 107, 144, 147, 150, 153, 157, 187], "incorrect": [4, 37, 150, 165], "g": [4, 14, 18, 20, 22, 23, 24, 26, 28, 33, 37, 40, 45, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 75, 78, 80, 81, 82, 83, 84, 85, 88, 96, 98, 99, 101, 106, 108, 109, 110, 112, 113, 118, 119, 127, 131, 134, 136, 137, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 165, 166, 168, 186, 187, 191], "again": [4, 56, 60, 68, 146, 150, 153, 157, 166, 186, 187], "part": [4, 18, 49, 65, 85, 90, 112, 125, 144, 147, 150, 151, 152, 157, 161, 162, 168, 186, 187, 189], "get": [4, 5, 7, 8, 37, 49, 53, 55, 56, 57, 58, 59, 60, 64, 67, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 95, 98, 110, 112, 117, 121, 122, 123, 124, 125, 128, 131, 134, 138, 144, 147, 149, 150, 151, 152, 153, 154, 157, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191, 192], "To": [4, 7, 13, 18, 24, 37, 68, 98, 99, 110, 112, 117, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 165, 166, 168, 186, 187, 188, 189, 190, 191], "prevent": [4, 18, 56, 58, 62, 110, 113, 146, 162, 165, 168], "happen": [4, 49, 53, 98, 136, 150, 151, 153, 166, 188, 189, 191], "here": [4, 18, 22, 23, 24, 37, 58, 61, 64, 65, 90, 98, 99, 110, 117, 119, 121, 122, 123, 124, 125, 131, 141, 144, 145, 146, 147, 148, 150, 152, 153, 156, 158, 161, 162, 165, 166, 168, 186, 187, 188, 190, 191], "should": [4, 7, 18, 24, 37, 48, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 87, 88, 90, 91, 95, 98, 99, 104, 107, 108, 109, 110, 112, 114, 117, 121, 122, 123, 124, 125, 134, 138, 139, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 158, 160, 161, 162, 165, 166, 168, 186, 187, 188, 189, 190, 191], "been": [4, 18, 23, 26, 33, 55, 56, 58, 60, 64, 66, 90, 98, 117, 124, 134, 136, 144, 145, 146, 147, 148, 150, 152, 153, 154, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190], "were": [4, 5, 11, 12, 18, 118, 149, 150, 151, 152, 153, 154, 158, 159, 161, 166, 187, 188, 190, 191], "load": [4, 18, 20, 37, 49, 51, 96, 110, 111, 112, 144, 145, 146, 150, 153, 154, 157, 159, 162, 165, 166, 186, 188, 189, 191], "thu": [4, 7, 9, 12, 18, 37, 53, 55, 56, 57, 60, 62, 64, 67, 72, 73, 75, 78, 80, 81, 82, 83, 84, 96, 108, 109, 110, 118, 124, 144, 146, 147, 150, 151, 152, 153, 158, 159, 161, 162, 165, 166, 168, 186, 188, 189, 190, 191], "prompt": [4, 186], "subset": [4, 7, 8, 40, 103, 104, 107, 115, 117, 131, 148, 150, 153, 166], "item": [4, 6, 42, 43, 60, 85, 98, 100, 117, 119, 128, 131, 134, 138, 141, 144, 146, 150, 154, 160, 166], "self": [4, 58, 107, 112, 121, 122, 123, 124, 125, 134, 146, 157, 161], "tvec": [4, 18, 23, 24, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 95, 99, 108, 110, 113, 117, 144, 154, 157, 162, 186, 188, 190, 191], "val": [4, 60, 65, 66, 98, 99, 110, 131, 134, 146, 147, 149, 150, 152, 153, 154, 188, 189], "t": [4, 7, 8, 18, 23, 24, 34, 37, 49, 55, 58, 60, 61, 64, 72, 73, 75, 76, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 95, 96, 98, 107, 112, 117, 118, 119, 124, 134, 137, 141, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 161, 162, 165, 166, 168, 186, 187, 188, 189, 190, 191], "doubli": 4, "nest": [4, 5, 15, 96, 107, 131, 138, 153, 158, 166], "form": [4, 7, 8, 52, 61, 96, 112, 131, 134, 145, 146, 153, 156, 158, 166], "result_nam": [4, 112, 117, 144, 148, 150, 151, 152, 153, 167, 187, 191], "stage_nam": [4, 7, 8], "np": [4, 7, 8, 24, 41, 42, 43, 72, 73, 74, 75, 78, 87, 90, 99, 107, 110, 124, 131, 134, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 161, 167], "sie": 4, "input": [4, 7, 13, 14, 26, 37, 40, 42, 43, 56, 63, 68, 93, 95, 98, 103, 112, 115, 117, 121, 122, 123, 124, 125, 128, 138, 139, 144, 146, 147, 150, 152, 154, 157, 158, 162, 165, 166, 167, 168, 186, 187, 189, 190, 191], "mapping_funct": [4, 117, 153, 167], "add_sampl": [4, 117], "properti": [4, 18, 24, 34, 37, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 74, 88, 95, 96, 99, 105, 107, 108, 109, 113, 117, 118, 125, 131, 134, 144, 145, 146, 150, 152, 153, 154, 158, 161, 186], "n_sampl": [4, 112, 117, 153, 167], "int": [4, 23, 24, 26, 33, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 107, 112, 117, 131], "number": [4, 12, 18, 23, 26, 29, 37, 49, 55, 56, 57, 60, 62, 64, 65, 66, 75, 78, 85, 98, 99, 103, 107, 108, 110, 112, 117, 118, 127, 131, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 164, 165, 167, 168, 186, 187, 188, 189, 190, 191], "present": [4, 13, 23, 24, 34, 37, 85, 95, 96, 110, 117, 118, 119, 124, 131, 134, 136, 145, 146, 147, 150, 151, 153, 154, 161, 162, 165, 166, 167, 186, 187, 188, 191], "yet": [4, 93, 117, 148, 151, 158, 161, 186, 191], "empti": [4, 18, 23, 24, 26, 30, 37, 56, 62, 105, 112, 117, 119, 131, 145, 146, 150, 151, 154, 159, 164, 165, 166, 168, 186, 190], "assum": [4, 98, 105, 108, 110, 112, 117, 134, 145, 146, 151, 156, 162, 165, 166, 186, 187, 190, 191], "horizont": [4, 100, 117], "fals": [4, 11, 13, 15, 27, 29, 38, 45, 51, 88, 95, 96, 98, 100, 108, 110, 112, 117, 131, 133, 134, 137, 141, 146, 150, 151, 152, 153, 154, 156, 157, 166, 167, 187, 191], "offset": [4, 95, 96, 108, 110, 117, 134], "veri": [4, 74, 117, 145, 147, 150, 151, 154, 161, 162, 165, 166, 168, 188], "similar": [4, 72, 73, 75, 78, 80, 81, 82, 83, 84, 107, 117, 118, 119, 145, 147, 150, 151, 153, 154, 156, 165, 166, 167, 188, 190, 191], "doesn": [4, 34, 60, 117, 150, 153, 161, 168, 188, 190, 191], "stack": [4, 12, 100, 102, 117, 144, 148, 151, 153, 165, 188, 190, 191], "mislead": [4, 99, 117, 153], "sinc": [4, 49, 56, 62, 85, 90, 110, 112, 117, 131, 150, 154, 157, 161, 166, 186, 187, 189, 190, 191], "appli": [4, 11, 60, 74, 77, 85, 88, 90, 95, 96, 98, 108, 109, 110, 117, 122, 124, 131, 134, 146, 150, 151, 152, 153, 161, 162, 166, 168, 186, 187, 191], "cumul": [4, 74, 117, 150, 151, 161], "within": [4, 18, 24, 34, 55, 58, 61, 65, 88, 98, 99, 110, 112, 117, 118, 119, 122, 131, 146, 147, 148, 150, 153, 154, 157, 159, 161, 165, 166, 167, 168, 186, 187, 188, 191], "new": [4, 18, 21, 23, 24, 32, 57, 58, 66, 95, 96, 98, 99, 101, 104, 109, 110, 112, 113, 117, 118, 124, 131, 136, 141, 144, 146, 147, 148, 153, 154, 156, 161, 165, 168, 181, 186, 187, 188, 190, 191], "rel": [4, 70, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 87, 90, 93, 98, 107, 112, 117, 129, 144, 145, 150, 161, 162, 164, 165, 166, 168, 187, 188, 190], "current": [4, 10, 23, 24, 32, 37, 44, 49, 58, 85, 108, 112, 117, 131, 133, 140, 146, 148, 150, 152, 156, 161, 162, 170, 186, 187, 190, 191], "axi": [4, 12, 24, 98, 99, 102, 117, 144, 147, 148, 149, 151, 152, 153, 162, 187, 191], "intend": [4, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 98, 117, 137, 145, 150, 186, 187], "facilit": [4, 13, 28, 98, 105, 117, 145, 146, 147, 153, 154, 157, 166, 191], "compar": [4, 110, 115, 117, 144, 147, 148, 150, 158, 165, 186, 187, 188, 191], "across": [4, 24, 58, 61, 66, 75, 78, 83, 98, 112, 117, 131, 145, 146, 150, 153, 158, 164, 165, 166, 168, 186, 188, 189], "iter": [4, 11, 18, 46, 47, 48, 58, 68, 77, 85, 91, 96, 112, 117, 131, 134, 138, 150, 153, 187], "appear": [4, 15, 18, 24, 38, 40, 49, 75, 78, 83, 94, 100, 102, 104, 117, 118, 145, 146, 150, 151, 153, 154, 156, 157, 158, 161, 162, 165, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191], "permut": [4, 117], "true": [4, 6, 9, 10, 15, 18, 20, 24, 29, 37, 38, 51, 60, 88, 95, 96, 98, 100, 108, 110, 112, 117, 118, 121, 122, 123, 124, 125, 131, 133, 134, 137, 139, 141, 144, 146, 150, 151, 153, 154, 160, 165, 167, 168, 191], "float": [4, 6, 18, 26, 41, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 74, 75, 78, 80, 82, 83, 84, 85, 88, 90, 92, 107, 109, 112, 113, 115, 117, 118, 134, 135, 137], "posit": [4, 104, 112, 117, 131, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 166, 187, 189, 191], "determin": [4, 23, 27, 56, 62, 85, 108, 112, 117, 146, 150, 162, 164, 166, 168, 186, 187], "content": [4, 18, 23, 27, 28, 33, 37, 45, 110, 112, 117, 134, 145, 147, 153, 154, 169, 186, 188], "plot_distribut": [4, 117, 153], "could": [4, 13, 14, 18, 24, 26, 49, 60, 70, 74, 88, 90, 91, 95, 98, 112, 117, 134, 144, 145, 147, 150, 151, 152, 153, 154, 157, 158, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "superimpos": [4, 7, 117, 150, 153], "default": [4, 7, 18, 19, 21, 26, 29, 37, 49, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 74, 75, 78, 87, 88, 90, 95, 96, 98, 99, 100, 101, 102, 105, 110, 112, 115, 117, 129, 131, 139, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "most": [4, 70, 98, 112, 117, 131, 146, 147, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 165, 166, 168, 186, 187, 188, 189, 191], "would": [4, 13, 15, 18, 24, 28, 45, 49, 56, 62, 65, 66, 70, 72, 73, 74, 75, 78, 88, 90, 93, 95, 104, 108, 110, 112, 115, 117, 119, 135, 140, 141, 144, 145, 146, 150, 151, 152, 153, 154, 157, 158, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "so": [4, 7, 12, 13, 18, 23, 42, 43, 44, 49, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 74, 90, 96, 98, 105, 107, 109, 114, 115, 117, 118, 119, 134, 136, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "probabl": [4, 7, 23, 37, 60, 99, 117, 119, 127, 137, 146, 149, 150, 155, 156, 157, 162, 165, 166, 168, 171, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185, 186, 188, 190], "wouldn": [4, 117], "matter": [4, 74, 95, 117, 152, 168, 188, 191], "target": [4, 32, 74, 89, 92, 108, 110, 117, 119, 147, 150, 153, 157, 161, 162, 165, 168, 187, 188, 191], "differ": [4, 7, 18, 22, 24, 45, 56, 62, 68, 90, 95, 96, 98, 99, 108, 109, 110, 112, 117, 119, 127, 134, 138, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 161, 162, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "primarili": [4, 110, 186, 188], "fact": [4, 15, 65, 117, 131, 145, 147, 150, 151, 154, 158, 161, 165, 166, 168, 188, 189], "around": [4, 111, 118, 151, 153, 162, 187, 191], "simplifi": [4, 56, 150, 157, 168, 186], "routin": [4, 158, 165], "properli": 4, "actual": [4, 18, 23, 37, 49, 52, 56, 58, 60, 85, 95, 98, 118, 119, 136, 145, 146, 147, 148, 150, 151, 153, 154, 156, 157, 161, 162, 165, 166, 168, 186, 187, 188, 190, 191], "flexibl": [4, 131, 145, 161, 166, 186], "term": [4, 60, 61, 151, 161, 162, 166, 187, 191], "arbitrari": [4, 74, 134, 138, 145, 147, 150, 153, 154, 157, 162, 188], "like": [4, 14, 18, 34, 61, 64, 90, 98, 99, 105, 107, 109, 110, 118, 124, 131, 134, 136, 144, 145, 147, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 191], "virtual": 4, "usag": [4, 13, 18, 37, 40, 47, 48, 51, 72, 73, 75, 78, 80, 81, 82, 83, 84, 88, 110, 112, 117, 124, 129, 131, 133, 137, 138, 146, 150, 153, 154, 161, 162, 168], "One": [4, 11, 12, 85, 118, 149, 150, 153, 154, 166, 168], "OR": [4, 88, 98, 103, 134, 139], "legend": [4, 100, 101, 102, 103, 104, 105, 117, 148, 153, 154, 156], "either": [4, 6, 14, 18, 23, 37, 58, 87, 88, 90, 98, 110, 117, 131, 134, 144, 146, 149, 150, 154, 161, 162, 165, 167, 168, 186, 187, 188], "done": [4, 18, 28, 58, 60, 65, 112, 144, 145, 146, 148, 150, 152, 154, 157, 162, 168, 186, 188, 191], "simpli": [4, 74, 87, 88, 90, 134, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 161, 162, 164, 165, 166, 168, 186, 188, 190, 191], "alreadi": [4, 6, 18, 37, 55, 64, 90, 98, 107, 110, 134, 146, 150, 151, 152, 153, 154, 160, 162, 165, 168, 186, 187], "onc": [4, 55, 56, 57, 60, 64, 67, 68, 108, 118, 144, 145, 146, 151, 153, 160, 161, 165, 166], "applic": [4, 65, 146, 150, 153, 154, 158, 159, 162, 165, 166, 186], "clearer": [4, 150, 153, 161, 162], "plot_seri": [4, 98, 105, 117, 144, 147, 148, 149, 150, 151, 152, 153, 156, 167, 186, 187, 188, 190, 191], "style": [4, 117, 148, 150], "quartil": [4, 117, 153], "seri": [4, 24, 37, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 95, 96, 98, 102, 108, 110, 117, 134, 144, 145, 147, 148, 149, 151, 152, 153, 154, 157, 159, 187, 189, 191], "whether": [4, 9, 23, 24, 28, 37, 57, 98, 100, 101, 108, 117, 118, 121, 122, 123, 124, 125, 131, 134, 138, 145, 146, 148, 150, 153, 154, 157, 159, 161, 162, 165, 166, 168, 188, 189, 191], "transpar": [4, 117, 146, 150, 187], "line": [4, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 98, 101, 102, 117, 148, 150, 153, 154, 156, 166, 187], "area": [4, 12, 117, 150, 153, 191], "For": [4, 13, 14, 18, 22, 23, 24, 37, 40, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 75, 78, 85, 88, 90, 95, 96, 98, 99, 100, 104, 108, 109, 110, 115, 117, 128, 131, 135, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "std": [4, 117], "ci": [4, 117], "depend": [4, 23, 24, 37, 40, 45, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 76, 85, 101, 105, 108, 110, 114, 117, 146, 147, 150, 152, 153, 154, 156, 157, 158, 159, 161, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191], "how": [4, 85, 96, 98, 117, 138, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 165, 166, 168, 186, 187, 188, 189, 190, 191], "size": [4, 7, 42, 43, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 90, 92, 98, 99, 108, 109, 110, 112, 113, 117, 118, 134, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 166, 167, 168, 186, 187, 188, 189, 190, 191], "run_sim": [4, 53, 112, 117, 133, 144, 148, 149, 150, 151, 152, 153, 156, 157, 167, 186, 187, 191], "proj": [4, 21, 46, 47, 48, 49, 51, 117, 131, 150, 153, 162], "progset": [4, 47, 58, 60, 61, 68, 71, 76, 85, 86, 87, 88, 89, 90, 93, 110, 111, 112, 115, 117, 118, 121, 122, 123, 124, 125, 144, 146, 148, 149, 150, 153, 157, 161, 191], "progset_instruct": [4, 112, 117, 144, 148, 153, 157, 191], "1": [4, 11, 13, 33, 37, 42, 43, 49, 51, 55, 58, 60, 62, 64, 65, 80, 81, 83, 88, 90, 98, 102, 104, 110, 112, 115, 117, 118, 131, 135, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "parallel": [4, 93, 112, 117, 139, 141, 153, 160], "max_attempt": [4, 112, 117], "insuffici": [4, 117, 151, 153, 158, 187], "memori": [4, 117], "avail": [4, 14, 23, 24, 37, 49, 64, 90, 95, 99, 107, 110, 117, 118, 144, 146, 148, 150, 154, 156, 158, 159, 162, 165, 166, 186, 187, 188, 189, 191], "prior": [4, 18, 58, 85, 98, 99, 107, 110, 117, 144, 146, 148, 150, 153, 158, 161, 162, 166, 168], "insert": [4, 33, 95, 96, 110, 117, 131, 134, 152, 153, 154, 156, 161, 162, 165, 186], "never": [4, 56, 62, 72, 73, 117, 146, 152, 161, 165, 166, 168], "taken": [4, 98, 117, 151, 161, 162, 188], "typic": [4, 18, 23, 24, 37, 49, 55, 57, 60, 64, 67, 72, 73, 90, 108, 110, 117, 141, 144, 145, 146, 148, 150, 151, 152, 153, 158, 159, 160, 161, 166, 168, 186, 187, 188, 189, 191], "budget": [4, 21, 86, 90, 109, 110, 112, 117, 118, 120, 122, 124, 147, 148, 152, 153, 161, 166, 191], "separ": [4, 13, 37, 49, 56, 62, 87, 101, 102, 105, 112, 117, 119, 131, 144, 145, 146, 147, 148, 153, 156, 158, 159, 161, 165, 166, 186, 189], "_sample_and_map": [4, 117], "doe": [4, 15, 18, 27, 28, 37, 49, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 73, 89, 90, 98, 99, 107, 112, 117, 131, 145, 148, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191], "reduct": [4, 117, 149, 153, 161], "worker": [4, 112, 117, 141, 160, 161], "multiprocess": [4, 117], "accumul": [4, 85, 98, 99, 113, 117, 118, 149, 162], "integ": [4, 6, 13, 60, 112, 113, 117, 119, 131, 139, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "programset": [4, 49, 60, 61, 68, 71, 76, 85, 86, 87, 88, 89, 93, 106, 107, 108, 109, 112, 114, 115, 117, 118, 121, 122, 123, 124, 125, 144, 153, 157, 161, 166, 191], "instruct": [4, 53, 68, 69, 70, 71, 74, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 93, 108, 109, 110, 112, 117, 118, 121, 122, 123, 124, 125, 144, 146, 148, 153, 161, 165, 191], "common": [4, 9, 22, 40, 67, 88, 112, 117, 124, 145, 146, 148, 150, 152, 153, 154, 157, 160, 161, 162, 168, 186, 188], "program": [4, 20, 22, 24, 58, 60, 61, 68, 69, 70, 71, 75, 78, 83, 85, 86, 87, 88, 89, 90, 91, 98, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 146, 147, 153, 155, 157, 159, 161, 162, 163, 167, 168, 186, 187, 192], "length": [4, 11, 33, 85, 87, 88, 101, 103, 107, 112, 117, 131, 134, 138, 150, 158], "element": [4, 60, 112, 117, 131, 134, 145, 146, 148, 154, 161], "window": [4, 112, 117, 153], "__name__": [4, 112, 117, 153], "__main__": [4, 112, 117, 153], "gate": [4, 112, 117, 141, 160], "retri": [4, 112, 117], "bad": [4, 53, 112, 117, 153, 161], "set_baselin": [4, 117, 153], "assign": [4, 13, 18, 37, 51, 55, 57, 60, 62, 64, 67, 68, 90, 98, 109, 112, 117, 134, 146, 148, 150, 154, 156, 162, 164, 165, 186, 189, 190], "unsampl": [4, 117], "wai": [4, 12, 18, 49, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 99, 117, 124, 131, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 161, 162, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191], "exampl": [4, 5, 12, 13, 18, 22, 24, 26, 37, 40, 42, 43, 47, 48, 51, 53, 54, 57, 66, 67, 68, 73, 74, 75, 76, 78, 85, 86, 88, 89, 91, 95, 96, 98, 99, 100, 104, 108, 109, 110, 115, 117, 119, 124, 128, 129, 131, 133, 134, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 169, 183, 184, 186, 187, 188, 189, 190, 191], "vertic": [4, 100, 117, 150, 153, 165], "solid": [4, 117, 153, 156], "vector": [4, 18, 24, 58, 60, 61, 63, 98, 99, 108, 112, 113, 117, 118, 146, 150, 154, 157, 158, 161, 162, 165, 168], "updat": [4, 18, 37, 44, 49, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 85, 107, 110, 112, 113, 117, 131, 134, 145, 146, 149, 150, 153, 154, 159, 161, 162, 165, 189, 190], "result_list": [4, 117], "v": [4, 117, 131, 134, 144, 148, 152, 154, 165, 173, 174, 186], "meth": [4, 18, 110, 117], "behaviour": [4, 90, 117, 134, 150, 151, 165, 187], "python": [4, 16, 35, 39, 40, 109, 117, 131, 136, 144, 145, 150, 153, 154, 157, 162, 186], "built": [4, 68, 117, 153, 158, 161], "want": [4, 18, 60, 117, 118, 134, 144, 145, 147, 148, 150, 152, 153, 157, 158, 161, 162, 165, 186, 187, 188, 189], "dynam": [4, 37, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 98, 117, 146, 150, 151, 159, 162, 165, 168, 170, 171, 175, 177, 180, 181, 185, 186, 188, 189], "construct": [4, 18, 29, 40, 51, 55, 56, 61, 62, 63, 64, 65, 96, 98, 110, 112, 117, 144, 145, 146, 147, 148, 150, 152, 153, 154, 161, 162, 165], "after": [4, 24, 56, 58, 60, 65, 66, 68, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 90, 98, 108, 110, 115, 117, 118, 124, 144, 145, 146, 148, 150, 151, 152, 158, 159, 160, 161, 162, 165, 166, 167, 168, 186, 191], "everi": [4, 10, 18, 60, 90, 94, 107, 108, 117, 118, 119, 145, 146, 148, 149, 150, 151, 153, 154, 157, 161, 165, 166, 168, 186, 187, 188], "up": [4, 7, 23, 37, 54, 55, 56, 57, 58, 61, 62, 66, 67, 90, 98, 99, 109, 112, 114, 117, 119, 134, 144, 145, 146, 147, 148, 150, 151, 152, 153, 161, 162, 165, 168, 187, 188, 189, 190, 191], "individu": [4, 66, 91, 98, 117, 146, 148, 150, 152, 153, 154, 157, 158, 159, 161, 165, 166, 168, 186, 187, 191], "thrown": [5, 79, 91, 128, 145], "fail": [5, 90, 145, 165, 187], "request": [5, 7, 37, 74, 95, 98, 99, 112, 118, 134, 150, 153, 160, 161, 165], "correctli": [5, 26, 60, 61, 99, 109, 151, 157, 162, 166, 189], "source_data": 6, "0": [6, 18, 33, 41, 43, 49, 51, 61, 63, 72, 73, 74, 75, 78, 80, 81, 83, 87, 88, 90, 98, 99, 100, 104, 107, 112, 113, 115, 118, 119, 124, 131, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "print": [6, 7, 15, 24, 118, 131, 141, 145, 149, 150, 151, 153, 154, 160, 187, 188, 189, 191], "summari": [6, 153, 166], "cascadeensembl": [6, 153], "scalar": [6, 7, 8, 9, 10, 11, 18, 26, 42, 43, 56, 61, 62, 72, 73, 75, 78, 80, 81, 82, 83, 84, 87, 90, 95, 98, 107, 108, 109, 110, 117, 118, 124, 134, 148, 150, 157, 161, 162], "ignor": [6, 24, 28, 34, 48, 118, 144, 145, 161, 186, 187, 188, 191], "uniqu": [6, 37, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 112, 118, 145, 150, 158, 159, 161, 165], "pretti": 6, "absolut": [6, 70, 74, 75, 78, 87, 90, 92, 112, 129, 140, 144, 161, 191], "round": [6, 157], "percentag": [6, 75, 78, 166], "2": [6, 13, 33, 40, 42, 43, 49, 98, 104, 112, 115, 117, 131, 137, 138, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 161, 166, 167, 168, 172, 173, 174, 175, 176, 181, 182, 186, 187, 188, 189, 190, 191], "sig": 6, "counterpart": 7, "slightli": [7, 156, 166, 190], "still": [7, 37, 66, 145, 150, 157, 158, 161, 164, 165, 166, 167, 168, 189, 190], "guarante": [7, 9, 26, 28, 37, 161, 166, 168, 190, 191], "wherea": [7, 23, 85, 96, 98, 110, 112, 150, 151, 152, 153, 158, 162, 188], "omit": [7, 105, 119, 131, 147, 156, 162, 165], "explicitli": [7, 37, 87, 90, 98, 134, 150, 152, 153, 162, 164, 165, 166, 186, 189, 191], "ensur": [7, 37, 49, 73, 85, 99, 109, 145, 146, 153, 157, 161, 162, 187], "nb": [7, 157], "In": [7, 18, 23, 28, 37, 49, 56, 57, 60, 66, 68, 72, 73, 75, 78, 80, 81, 82, 83, 84, 88, 90, 99, 108, 109, 111, 114, 118, 131, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 191], "NOT": [7, 28, 87, 98, 141, 160, 191], "log": [7, 141, 142, 163], "level": [7, 61, 100, 110, 127, 131, 133, 138, 139, 141, 146, 153, 154, 160, 162, 168, 188, 191], "debug": [7, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 147, 150, 158, 160], "messag": [7, 15, 34, 141, 160], "regard": [7, 18, 145, 150], "cascade_v": [7, 8], "param": [8, 98, 105, 124, 157], "sanitize_pop": [8, 9, 10, 11, 12], "show_tabl": [9, 10], "own": [9, 85, 160, 161, 162], "fe": [9, 14, 18], "decid": [9, 23, 150, 166, 189], "bool": [9, 15, 18, 20, 24, 37, 88, 95, 108, 110, 112, 118, 121, 122, 123, 124, 125, 131, 134], "loss": [9, 10, 12, 150, 153, 162, 172], "tabl": [9, 10, 18, 22, 23, 24, 28, 30, 119, 145, 147, 150, 153, 165, 166, 186, 188, 189, 191], "also": [9, 13, 15, 18, 24, 37, 45, 52, 56, 57, 58, 60, 61, 62, 66, 85, 90, 95, 96, 98, 99, 105, 109, 110, 112, 119, 122, 124, 125, 129, 131, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 186, 187, 188, 189, 190, 191], "shown": [9, 29, 38, 100, 139, 144, 145, 147, 148, 149, 150, 152, 153, 154, 157, 162, 164, 165, 166, 168, 186, 187, 188, 190, 191], "produc": [9, 11, 18, 37, 45, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 85, 100, 102, 118, 121, 122, 123, 124, 125, 144, 147, 150, 152, 153, 154, 161, 162, 166, 167, 168, 187, 190, 191], "fanci": 11, "overrid": [11, 93, 100, 102, 110, 115, 144, 152, 154, 155, 162], "timeseri": [12, 18, 23, 24, 95, 99, 108, 109, 124, 148, 152, 153, 161, 162], "overal": [12, 80, 150, 154, 158, 166, 168, 187, 190, 191], "height": [12, 150], "peopl": [12, 14, 56, 61, 65, 66, 78, 98, 108, 109, 110, 118, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 162, 164, 165, 166, 168, 186, 187, 188, 189, 190, 191], "progress": [12, 139, 141, 145, 147, 153, 159, 168], "left": [12, 18, 26, 60, 146, 147, 150, 152, 154, 158, 165, 166, 168, 186], "right": [12, 146, 150, 158, 166, 186, 187], "top": [12, 150, 154, 164, 165, 168, 188], "bottom": [12, 150, 168, 188], "chang": [12, 18, 45, 49, 51, 60, 61, 68, 70, 71, 74, 85, 86, 88, 99, 103, 104, 105, 107, 108, 110, 115, 124, 131, 139, 144, 145, 146, 147, 148, 150, 151, 153, 155, 157, 161, 162, 165, 168, 186, 187, 188, 191], "flow": [12, 56, 58, 61, 66, 98, 119, 136, 146, 147, 148, 149, 156, 162, 164, 166, 168, 180, 186, 187, 188, 190, 191], "over": [12, 18, 42, 43, 46, 47, 48, 58, 60, 65, 66, 75, 78, 80, 83, 96, 98, 107, 112, 115, 117, 122, 131, 138, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 161, 162, 165, 166, 167, 168, 186, 187, 188, 191], "fallback_us": [13, 15], "conveni": [13, 55, 57, 60, 64, 67, 99, 109, 110, 116, 147, 150, 161], "sever": [13, 76, 85, 88, 98, 112, 147, 150, 152, 154, 157, 161, 165, 168, 187], "backend": [13, 159, 186], "As": [13, 57, 61, 65, 95, 122, 131, 145, 146, 148, 150, 151, 152, 153, 154, 158, 159, 161, 162, 164, 165, 166, 168, 186, 187, 188, 191], "suppos": [13, 112, 118, 145, 150, 151, 152, 154, 156, 157, 158, 161, 162, 166, 168, 186, 189, 191], "spreadsheet": [13, 18, 22, 23, 24, 28, 30, 31, 32, 37, 96, 110, 111, 112, 144, 145, 147, 153, 166, 189], "had": [13, 18, 26, 65, 146, 150, 151, 158, 161, 165, 166, 168, 186, 189, 191], "su": [13, 98, 101, 145, 146, 147, 149, 150, 154, 158, 162, 166, 168, 170, 171, 174, 176, 179, 180, 182, 186, 187, 188, 189, 190, 191], "vac": [13, 98, 101, 145, 146, 147, 150, 154, 158, 162, 168, 180, 182], "inf": [13, 70, 72, 73, 74, 75, 78, 87, 90, 98, 118, 149, 152, 161, 179, 186, 187, 188, 189, 190, 191], "Then": [13, 98, 119, 146, 148, 150, 153, 154, 157, 161, 165, 166, 186, 187, 188, 191], "main": [13, 28, 93, 94, 112, 120, 141, 146, 147, 153, 165, 168, 186, 189, 191], "necessari": [13, 28, 37, 49, 51, 68, 74, 85, 96, 98, 144, 145, 146, 147, 150, 153, 156, 157, 158, 161, 162, 167, 187], "validate_cascad": 13, "namep": 13, "three": [13, 21, 23, 144, 145, 147, 150, 154, 156, 157, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 191], "format": [13, 22, 23, 24, 28, 31, 32, 96, 105, 137, 145, 148, 154, 162, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 188], "cascade_nam": [13, 15, 80, 81], "cascade_dict": [13, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "pop_sourc": 14, "pop_typ": [14, 18, 23, 24, 37, 61, 110, 154, 186], "full": [14, 18, 23, 37, 40, 58, 61, 108, 110, 112, 118, 131, 144, 147, 154, 161, 168, 177, 188, 191], "total": [14, 66, 74, 85, 88, 90, 91, 98, 108, 109, 144, 145, 146, 147, 150, 156, 158, 164, 165, 166, 168, 180, 186, 188, 189, 191], "shorthand": [14, 145], "purpos": [14, 51, 61, 65, 108, 146, 150, 161, 165, 186], "That": [14, 24, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 134, 145, 150, 151, 153, 157, 158, 161, 162, 164, 165, 166, 191], "draw": [14, 57, 102, 146, 150], "check": [15, 18, 24, 27, 34, 85, 95, 98, 99, 110, 118, 134, 145, 150, 153, 158, 161, 165, 186, 187, 188, 189], "invalid": [15, 37, 53, 79, 110, 158, 168], "subsequ": [15, 57, 72, 73, 75, 78, 80, 81, 82, 83, 84, 87, 110, 144, 150, 152, 153, 159, 162, 168, 186], "intrins": [15, 85, 109, 146, 150], "span": [15, 68, 98, 144, 146, 150, 165], "event": [15, 151], "reflect": [15, 74, 85, 96, 110, 145, 150, 153, 156, 161, 162, 165, 166, 168, 187, 188, 189, 191], "str": [15, 18, 20, 23, 24, 27, 28, 33, 37, 40, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 85, 88, 95, 96, 99, 107, 110, 112, 117, 118, 122, 124, 125, 131, 132, 134, 136, 137, 141], "rais": [15, 18, 26, 27, 34, 53, 59, 63, 74, 77, 87, 91, 92, 110, 131, 134, 142, 153, 162, 166], "invalidcascad": 15, "databook": [16, 18, 22, 24, 28, 29, 37, 38, 58, 61, 94, 95, 96, 98, 107, 109, 110, 112, 144, 145, 146, 149, 150, 153, 155, 156, 157, 158, 159, 162, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191], "serv": [16, 56, 68, 69, 111, 118, 146, 150, 153, 166], "well": [16, 42, 43, 90, 104, 110, 118, 144, 145, 146, 147, 150, 151, 154, 159, 161, 162, 165, 186, 187, 188, 189, 190], "read": [16, 18, 23, 24, 28, 29, 30, 65, 96, 110, 145, 150, 154, 158, 161, 162, 186, 189, 191], "save": [16, 18, 37, 68, 96, 105, 112, 118, 144, 145, 146, 148, 153, 154, 156, 161, 186, 188, 191], "back": [16, 18, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 109, 110, 145, 146, 150, 152, 154, 161, 162, 166, 168, 187, 188], "excel": [16, 18, 37, 68, 112, 118, 119, 144, 145, 147, 154, 166, 186], "file": [16, 18, 22, 28, 35, 37, 38, 39, 96, 105, 110, 112, 118, 119, 129, 136, 140, 141, 142, 143, 144, 145, 146, 147, 150, 154, 156, 157, 161, 164, 166, 168, 186, 188, 189, 190, 191], "prettyobj": 18, "equival": [18, 61, 98, 110, 135, 139, 144, 150, 152, 156, 160, 168, 187, 191], "enter": [18, 23, 24, 26, 39, 107, 109, 110, 115, 134, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 162, 164, 165, 166, 168, 180, 186, 187, 188, 189, 190, 191], "interfac": [18, 67, 71, 110, 111, 116, 161, 165, 187], "modifi": [18, 37, 58, 95, 98, 99, 107, 110, 112, 115, 120, 121, 122, 123, 124, 125, 144, 145, 148, 150, 153, 157, 161, 162, 165, 168, 186, 187, 188], "ad": [18, 21, 24, 26, 28, 32, 37, 45, 49, 54, 60, 61, 67, 75, 78, 83, 95, 105, 108, 112, 131, 146, 150, 152, 153, 159, 161, 162, 165, 166, 167, 168, 186, 188], "remov": [18, 66, 95, 104, 110, 131, 134, 144, 150, 152, 153, 165, 168, 186, 188, 189, 191], "etc": [18, 28, 37, 98, 111, 115, 131, 139, 145, 147, 150, 162, 165], "write": [18, 23, 24, 28, 32, 37, 38, 110, 118, 119, 141, 144, 146, 147, 150, 153, 154, 156, 158, 160, 161, 165, 186, 189, 190], "instanti": [18, 23, 24, 45, 57, 61, 65, 66, 108, 110, 117, 145, 146, 150, 153, 161, 186, 188, 191], "static": [18, 23, 24, 98, 110, 112, 148], "given": [18, 24, 37, 54, 56, 61, 62, 67, 77, 95, 98, 107, 110, 112, 114, 118, 131, 134, 138, 144, 145, 146, 147, 150, 151, 153, 154, 158, 159, 161, 165, 166, 186, 187, 191], "from_spreadsheet": [18, 110, 144, 153, 154, 188, 191], "simpl": [18, 28, 61, 98, 145, 148, 156, 157, 158, 161, 165, 166, 168, 172, 177, 186, 187, 189, 190, 191], "add_interact": [18, 154, 188], "code_nam": [18, 23, 37, 110, 154], "full_nam": [18, 23, 110, 154], "from_pop_typ": [18, 23], "to_pop_typ": [18, 23], "interact": [18, 23, 37, 60, 61, 68, 96, 98, 107, 110, 124, 134, 145, 146, 147, 148, 150, 155, 165, 186, 191], "manual": [18, 28, 37, 49, 93, 98, 124, 150, 152, 154, 156, 158, 165, 187, 188, 189, 191], "identifi": [18, 23, 37, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 96, 99, 112, 122, 124, 125, 145, 147, 150, 161, 189], "timedependentconnect": [18, 96], "newli": [18, 57, 66, 100, 102, 112, 144], "interpop": 18, "add_pop": [18, 23, 110, 144, 154, 188], "label": [18, 37, 61, 98, 99, 100, 101, 102, 103, 104, 105, 108, 118, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 157, 161, 162, 165, 186, 187, 189, 191], "add_transf": [18, 144, 154, 188], "transfer": [18, 23, 57, 61, 65, 66, 96, 124, 144, 146, 147, 151, 161, 165, 186, 190, 191], "change_tvec": [18, 154], "tdve": [18, 24, 99, 150, 153, 154], "tdc": [18, 23, 154], "directli": [18, 56, 62, 70, 74, 90, 95, 98, 125, 136, 144, 145, 146, 150, 151, 152, 153, 156, 157, 158, 161, 162, 164, 166, 168, 186, 187, 189, 191], "affect": [18, 110, 119, 150, 152, 157, 159, 161, 162, 165, 166, 168, 188, 191], "keep": [18, 33, 98, 131, 144, 146, 150, 152, 153, 154, 158, 161, 168, 186], "pair": [18, 23, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 110, 131, 146, 150], "spars": [18, 95, 134, 154, 158, 162], "won": [18, 55, 64, 145, 150, 152, 157, 161, 186, 187], "next": [18, 23, 24, 77, 134, 144, 145, 146, 147, 150, 151, 152, 153, 156, 159, 162, 165, 166, 168, 186, 188, 190], "written": [18, 23, 24, 51, 118, 119, 145, 147, 151, 153, 154, 158, 161, 164, 191], "prepar": [18, 161], "end_year": 18, "start": [18, 30, 34, 51, 58, 60, 61, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 89, 98, 109, 112, 113, 118, 134, 141, 142, 145, 146, 148, 150, 151, 153, 154, 158, 160, 161, 168, 186, 187, 188, 191, 192], "end": [18, 60, 61, 112, 113, 133, 144, 146, 150, 151, 156, 161, 162, 164, 165, 168, 188, 190], "latest": [18, 49], "desir": [18, 37, 68, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 90, 95, 110, 134, 144, 150, 152, 153, 157, 162, 165, 186], "unit": [18, 23, 24, 37, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 98, 99, 108, 109, 110, 115, 118, 134, 137, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 162, 164, 167, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191], "associ": [18, 23, 24, 55, 56, 57, 58, 62, 63, 64, 65, 74, 99, 107, 110, 111, 136, 145, 146, 147, 148, 150, 154, 159, 161, 162, 165, 166, 168, 186, 190, 191], "sc": [18, 28, 37, 110, 112, 131, 148, 149, 150, 152, 153, 154, 156, 157, 161], "get_tdve_pag": 18, "page": [18, 144, 145, 146, 147, 151, 152, 154, 155, 162, 164, 165, 167, 186, 189], "sheet": [18, 23, 28, 29, 30, 32, 37, 60, 108, 110, 119, 145, 146, 147, 153, 154, 156, 162, 164, 165, 166, 186, 187, 188, 189, 191], "get_t": [18, 154], "build": [18, 58, 61, 68, 145, 148, 150, 189, 190, 192], "age_0": [18, 147, 150], "4_to_5": [18, 147, 150], "14": [18, 49, 80, 100, 144, 145, 146, 147, 148, 150, 151, 153, 154, 165, 168, 187, 188, 191], "mainli": [18, 37, 40, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 110, 137, 145, 146, 147, 150, 168], "variabl": [18, 37, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 93, 108, 118, 125, 127, 128, 131, 136, 144, 145, 146, 147, 150, 153, 156, 157, 161, 165, 167, 187, 188, 189], "organ": [18, 37, 146], "accord": [18, 134, 161], "par": [18, 37, 55, 56, 61, 62, 63, 64, 65, 96, 107, 110, 144, 145, 146, 147, 150, 152, 153, 186, 187, 191], "from_pop": [18, 23, 124], "to_pop": [18, 23, 124], "ag": [18, 23, 124, 144, 146, 154, 159, 165, 168, 186, 187, 188], "4": [18, 40, 49, 80, 98, 100, 131, 134, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165, 166, 168, 170, 185, 186, 187, 188, 189, 191], "5": [18, 40, 42, 49, 75, 78, 80, 98, 100, 111, 131, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 164, 165, 166, 168, 171, 179, 180, 186, 187, 188, 190, 191], "former": [18, 91, 108, 112, 153, 165, 166, 186], "calibr": [18, 53, 94, 96, 112, 114, 145, 146, 152, 159, 162, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 191, 192], "latter": [18, 91, 112, 151, 153, 165, 186, 191], "encount": [18, 151, 152, 153, 157], "standard": [18, 88, 98, 107, 133, 134, 143, 145, 147, 148, 150, 153, 154, 156, 157, 158, 161, 162, 165, 166, 167, 168, 188], "numpi": [18, 60, 61, 65, 66, 107, 134, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 167], "arang": [18, 24, 113, 144, 148, 150, 151, 152, 154, 156], "place": [18, 21, 28, 49, 56, 58, 65, 74, 85, 95, 98, 107, 108, 112, 118, 146, 147, 150, 151, 152, 153, 157, 161, 162, 165, 166, 168, 186, 187, 188], "odict": [18, 24, 37, 98, 110, 111, 131, 145, 150, 154, 161, 186], "remove_interact": [18, 154], "remove_transf": [18, 154], "rename_pop": [18, 154], "existing_code_nam": 18, "new_code_nam": [18, 154], "new_full_nam": [18, 154], "renam": [18, 131, 150, 154], "rename_transf": [18, 154], "fname": [18, 37, 38, 96, 105, 141, 150], "disk": [18, 37, 105, 112, 140, 150, 154, 190], "shortcut": [18, 64, 109, 112, 118, 131, 165], "immedi": [18, 63, 77, 105, 112, 134, 150, 151, 162, 168, 186, 188, 190], "start_year": [18, 109, 121, 123, 144, 148, 149, 153, 157, 161, 191], "earliest": 18, "timedependentvaluesentri": [18, 96], "tdve_pag": [18, 154], "worksheet": [18, 23, 24, 25, 29, 30, 145, 154, 165], "to_spreadsheet": [18, 37, 110, 144, 154, 190], "sciri": [18, 37, 95, 110, 148, 149, 150, 152, 153, 154, 156, 157], "to_workbook": [18, 28, 110, 144, 154], "open": [18, 23, 24, 110, 141, 142, 153, 154, 155, 167, 186, 188], "workbook": [18, 23, 24, 28, 31, 32, 34, 61, 110, 146, 147, 154], "xlsxwriter": [18, 23, 24, 110, 154], "manipul": [18, 110, 166], "close": [18, 110, 142, 150, 152, 154, 158, 160, 187, 191], "filestream": [18, 110], "append": [18, 105, 110, 112, 129, 131, 144, 146, 148, 150, 151, 153, 161, 162], "extra": [18, 24, 28, 60, 110, 131, 145, 146, 147, 152, 153, 154, 160, 186, 188], "issu": [18, 110, 151, 153, 154, 158, 162, 168], "cach": [18, 72, 73, 75, 78, 80, 81, 82, 83, 84, 107, 110, 146, 166], "reload": [18, 110], "warn": [18, 28, 110, 133, 139, 144, 145, 147, 148, 150, 152, 153, 154, 160, 186, 189, 191], "bytesio": [18, 110, 154], "see": [18, 110, 122, 131, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 158, 160, 161, 162, 166, 168, 186, 187, 188, 189, 190, 191], "byte": [18, 110], "Not": [18, 77, 93], "_guaranteed_": 18, "sens": [18, 60, 72, 73, 74, 98, 148, 150, 151, 161], "adher": 18, "correct": [18, 26, 58, 107, 150, 151, 153, 157, 161, 168, 188], "syntax": [18, 49, 61, 146, 147, 150, 161, 162, 164, 188], "pars": [18, 28, 34, 40, 60, 145, 150], "suffici": [18, 151, 153, 158, 161, 168, 186], "inform": [18, 27, 35, 37, 57, 60, 69, 85, 99, 109, 144, 145, 146, 147, 150, 153, 154, 158, 160, 161, 166, 186, 189, 190, 191], "sometim": [18, 68, 72, 73, 75, 78, 80, 81, 82, 83, 84, 95, 145, 147, 154, 156, 162, 186, 187, 191], "least": [18, 72, 73, 75, 78, 80, 81, 82, 83, 84, 95, 107, 151, 158, 161, 165, 168, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186], "_not_": [18, 66, 98, 107], "anoth": [18, 32, 44, 53, 69, 73, 85, 96, 109, 115, 131, 144, 146, 150, 151, 153, 154, 156, 161, 162, 165, 166, 168, 186, 187, 188], "access": [18, 37, 109, 110, 111, 116, 118, 144, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 187, 188, 189, 191], "hand": [18, 151, 152, 158, 161, 167, 186, 188, 191], "_contents_": 18, "satisfi": [18, 74, 91, 144, 153, 158, 161, 164, 168, 189], "variou": [18, 69, 97, 107, 111, 150, 151, 152, 154, 191], "condit": [18, 53, 72, 73, 74, 75, 78, 79, 85, 95, 151, 153, 158, 159, 161, 162, 165, 166, 168, 187, 191], "These": [18, 29, 37, 40, 57, 58, 64, 95, 112, 125, 141, 145, 146, 147, 148, 149, 150, 153, 154, 157, 159, 161, 162, 165, 166, 168, 186, 187, 191, 192], "test": [18, 109, 138, 144, 149, 150, 151, 153, 162, 166, 167, 168, 186, 188], "workflow": [18, 56, 146, 148, 154, 155, 157, 159, 162, 166, 191], "go": [18, 29, 55, 61, 64, 65, 137, 146, 150, 153, 156, 157, 159, 166, 168, 186, 187, 188, 189, 190, 191], "load_databook": [18, 112, 167], "might": [18, 23, 24, 28, 45, 56, 62, 72, 73, 75, 78, 80, 81, 82, 83, 84, 91, 98, 99, 110, 117, 144, 145, 146, 150, 151, 153, 154, 161, 165, 166, 168, 186, 187, 188], "expos": [18, 108, 166, 167], "throw": [18, 98], "problem": [18, 85, 144, 150, 151, 153, 156, 161, 168], "against": [18, 26, 110, 168], "some": [19, 28, 57, 64, 68, 72, 73, 74, 95, 134, 144, 145, 146, 147, 149, 150, 151, 153, 154, 157, 158, 161, 162, 165, 166, 167, 168, 186, 187, 188, 189, 191], "version": [19, 37, 44, 49, 51, 121, 122, 123, 124, 125, 131, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 187, 189, 191], "2018sep24": 19, "do_run": [20, 112, 151, 156, 157, 167, 187, 191], "addprog": 20, "sir": [20, 156, 157, 165, 177, 186, 188, 190, 191], "tb": [20, 136, 145, 147, 148, 150, 151, 152, 158, 165, 168, 177, 187, 191], "progbook": [20, 108, 110, 112, 144, 148, 157, 161, 191], "zero": [21, 41, 56, 62, 107, 134, 139, 146, 147, 151, 156, 166, 167, 168, 189, 190, 191], "miscellan": 22, "kind": [22, 111, 120, 144, 149, 187, 191], "book": [22, 24, 108, 109, 110, 112, 144, 153, 157, 165, 166, 167, 186, 191], "vari": [22, 23, 24, 53, 86, 107, 110, 112, 115, 138, 148, 153, 154, 157, 161, 165, 166, 168, 187], "interpop_typ": 23, "structur": [23, 37, 68, 96, 111, 124, 136, 145, 154, 156, 162, 168, 186, 188, 190], "consist": [23, 70, 87, 90, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 162, 165, 187, 189, 191], "connect": [23, 55, 56, 61, 62, 63, 64, 65, 66, 168, 188], "matrix": [23, 61, 70, 145, 146, 154, 156, 158, 162, 165, 166, 168, 186, 188], "n": [23, 26, 37, 117, 145, 153, 154, 156, 166, 167], "pairwis": [23, 153, 154, 165], "diagon": [23, 153, 154, 168, 188], "cannot": [23, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 91, 98, 145, 150, 153, 154, 157, 158, 161, 162, 165, 166, 168, 186, 187, 188, 189], "infect": [23, 144, 145, 146, 147, 154, 156, 158, 159, 161, 162, 168, 173, 186, 187, 188, 189, 190, 191], "itself": [23, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 85, 90, 144, 147, 153, 158, 159, 161, 162, 165, 167, 168, 186, 187, 188], "row": [23, 24, 29, 30, 37, 119, 145, 147, 148, 150, 154, 165, 166, 186, 188, 191], "column": [23, 24, 33, 37, 119, 145, 146, 147, 153, 154, 158, 162, 165, 166, 168, 186, 188, 189, 190, 191], "non": [23, 98, 108, 117, 128, 146, 150, 161, 162, 165, 166], "clariti": [23, 147, 187], "mark": [23, 60, 148, 162, 166, 168, 186, 191], "assumption_head": [23, 24, 154], "head": [23, 24, 49, 144, 145, 147, 153], "from_tabl": [23, 154], "interaction_typ": 23, "read_tabl": [23, 29], "parent": [23, 24, 55, 57, 60, 64, 66, 67, 74, 90, 129, 140], "respons": [23, 24, 95, 107], "them": [23, 56, 58, 61, 62, 65, 66, 83, 85, 96, 98, 99, 118, 121, 122, 123, 124, 125, 144, 145, 146, 147, 148, 150, 153, 155, 156, 159, 161, 162, 164, 165, 166, 168, 186, 187, 188, 189, 190, 191], "split": [23, 29, 68, 119, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 166, 168, 187, 188, 189, 191], "those": [23, 24, 32, 55, 57, 60, 64, 67, 105, 145, 146, 147, 150, 152, 153, 154, 158, 161, 162, 165, 166, 168, 187, 188, 189, 190, 191], "expect": [23, 34, 53, 107, 112, 117, 145, 146, 150, 151, 153, 157, 161, 166, 168, 186, 187, 188, 189, 191], "cell": [23, 24, 26, 27, 29, 32, 145, 153, 154, 165, 166, 186, 188, 191], "ts_attribut": [23, 24, 154], "start_row": [23, 24], "width": [23, 24, 33, 102, 150], "standard_format": [23, 24], "write_assumpt": [23, 24, 154], "write_uncertainti": [23, 24, 153, 154], "write_unit": [23, 24, 154], "allowed_unit": [24, 154], "comment": [24, 28, 32, 150, 154, 166, 186, 188], "potenti": [24, 108, 141, 150, 153, 157], "underli": [24, 95, 98, 109, 134, 146, 147, 149, 150, 151, 153, 189], "mean": [24, 26, 57, 58, 60, 98, 105, 108, 115, 119, 141, 145, 146, 147, 150, 151, 153, 154, 157, 158, 160, 161, 162, 164, 166, 167, 168, 186, 189, 191], "abl": [24, 29, 146, 150, 153, 156, 158, 161, 165, 168, 188, 191], "dropdown": 24, "descript": [24, 45, 51, 165, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "text": [24, 150], "from_row": [24, 154], "openpyxl": [24, 26, 27, 29, 30, 34], "skip": [24, 85, 91, 96, 146, 162, 165, 186], "unpars": 24, "constant": [24, 65, 95, 96, 107, 108, 109, 110, 115, 126, 134, 146, 151, 154, 156, 157, 168, 186, 191], "has_data": [24, 134, 152, 153, 154], "th": [24, 99, 146], "along": [24, 153, 187, 188], "2000": [24, 112, 113, 144, 147, 149, 150, 152, 154, 157, 158, 159, 166, 187], "2019": [24, 121, 123, 147], "exactli": [24, 113, 150, 151, 152, 153, 154, 156, 158, 161, 165, 166, 168, 187, 188, 191], "drawn": [24, 70, 87, 90, 102, 108, 119, 150, 158, 161, 162, 165, 186], "suppress": [24, 133, 141, 150, 154], "width_dict": [25, 33], "dtype": [26, 145], "numer": [26, 41, 52, 74, 85, 99, 113, 131, 147, 151, 162, 166], "guard": 26, "accident": 26, "treat": [26, 60, 61, 70, 131, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 162, 165, 166, 168, 177, 180, 187, 189, 191], "though": [26, 28, 65, 112, 150, 153, 154, 158, 165, 166, 191], "cast": 26, "allow_empti": 27, "strip": [27, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "sheet_nam": 28, "copi": [28, 32, 49, 68, 95, 96, 108, 109, 121, 122, 123, 124, 125, 131, 134, 144, 145, 146, 152, 153, 154, 159, 186, 187, 188], "retain": [28, 32, 49, 146, 151, 152, 153, 168], "particular": [28, 34, 85, 87, 90, 98, 109, 114, 119, 134, 144, 145, 146, 147, 150, 154, 157, 161, 162, 165, 168, 187, 191], "about": [28, 37, 74, 95, 145, 147, 150, 152, 153, 158, 165, 166, 186, 187, 188, 189, 191], "formula": [28, 98, 146, 151, 162, 186, 189], "lost": [28, 153], "edit": [28, 144, 153, 154, 186, 187, 188, 191], "preserv": [28, 66, 150, 154, 168, 186, 188], "whatev": [28, 49, 85, 90, 119, 141, 150], "extrem": [28, 98, 147, 153, 168, 187], "just": [28, 34, 49, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 90, 94, 98, 99, 131, 136, 144, 145, 151, 153, 157, 158, 160, 161, 165, 166, 168, 186, 187, 188, 190], "helper": [28, 41, 46, 47, 48, 137, 146, 150], "merg": [29, 131], "datafram": [29, 37, 115, 118, 119, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "similarli": [29, 37, 148, 150, 151, 152, 153, 158, 161, 162, 165, 166, 168, 186, 191], "enabl": [29, 98, 99, 146, 159, 166], "quickli": [29, 168, 191], "expens": [29, 145, 166, 168, 186, 188], "track": [29, 33, 144, 146, 150, 153, 154, 162, 165, 168, 186, 187], "via": [29, 46, 47, 48, 56, 60, 62, 68, 95, 98, 110, 111, 118, 121, 122, 123, 124, 125, 134, 145, 146, 150, 152, 153, 158, 159, 160, 164, 165, 166, 167, 168, 186, 187, 188, 190, 191], "blank": [29, 110, 112, 145, 165, 186], "termin": [30, 145], "origin": [30, 37, 40, 49, 66, 75, 78, 85, 99, 104, 108, 136, 147, 150, 151, 153, 154, 158, 161, 168, 186, 187, 189, 190, 191], "comment_sourc": 32, "under": [32, 95, 147, 149, 150, 151, 152, 153, 154, 165, 168, 186, 187, 188, 189, 191], "hood": [32, 152, 153, 165, 189], "wise": 32, "drop": [32, 167, 188, 191], "column_index": 33, "longest": 33, "seen": [33, 150, 153, 166, 168, 187, 191], "expected_categori": 34, "sure": [34, 49, 152, 188], "categori": [34, 119, 187], "appropri": [34, 49, 53, 95, 101, 107, 110, 112, 119, 134, 149, 150, 151, 152, 153, 154, 161, 165, 168, 187, 191], "isn": [34, 119, 153, 161], "robust": 34, "transit": [37, 52, 56, 57, 58, 60, 61, 62, 66, 98, 108, 145, 146, 147, 151, 156, 157, 159, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190], "network": [37, 55, 146, 188], "readi": [37, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67], "upon": [37, 112, 153, 188], "overridden": 37, "partial": [37, 104, 131, 150], "befor": [37, 55, 57, 58, 60, 64, 65, 67, 68, 98, 105, 124, 146, 150, 151, 152, 154, 158, 161, 162, 166, 168, 187, 188, 190, 191], "cascad": [37, 55, 60, 61, 80, 119, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 165, 169, 186, 187, 189, 191], "fallback": [37, 95], "downstream": [37, 56, 58, 62, 65, 146, 168, 190], "differenti": [37, 157, 166], "pd": [37, 96, 145, 153, 154], "definit": [37, 85, 153, 154, 156, 159, 165, 180, 186], "creation": [37, 111, 150], "get_charac": [37, 61, 145, 146, 147], "charac_nam": [37, 61, 118, 153], "get_charac_includ": 37, "eventu": [37, 191], "repres": [37, 52, 54, 60, 70, 71, 74, 87, 93, 99, 112, 120, 125, 145, 146, 150, 153, 156, 159, 161, 162, 165, 166, 168, 186, 187, 188, 191], "collect": [37, 96, 108, 109, 110, 139, 144, 153, 154, 166, 167], "goe": [37, 65, 95, 146, 150], "through": [37, 58, 95, 98, 146, 147, 150, 151, 153, 159, 166, 186, 187, 192], "recurs": [37, 146], "replac": [37, 49, 58, 109, 146, 150, 152, 153, 154, 157, 161, 162, 191], "final": [37, 55, 56, 57, 60, 64, 67, 109, 124, 134, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 165, 166, 168, 186, 188, 189, 191], "aliv": [37, 78, 144, 145, 147, 148, 150, 158, 170, 171, 174, 176, 180, 182, 187, 189], "codenam": 37, "get_comp": [37, 61, 145, 146, 147], "comp_nam": [37, 61, 118, 145, 153], "get_databook_unit": 37, "face": 37, "fraction": [37, 57, 65, 66, 75, 78, 88, 98, 108, 109, 110, 112, 115, 118, 146, 148, 150, 151, 154, 157, 161, 162, 166, 191], "denomin": [37, 41, 60, 99, 108, 110, 118, 137, 146, 147, 150, 157, 165, 166, 171, 178, 179, 180, 189, 191], "plu": [37, 146, 190, 191], "timescal": [37, 60, 98, 99, 149, 150], "inapplic": 37, "stai": [37, 168], "sync": [37, 131, 162], "programat": [37, 53, 145, 154, 165, 186, 188], "don": [37, 49, 96, 98, 107, 112, 118, 119, 145, 147, 150, 152, 153, 154, 162, 165, 166, 187, 188, 189, 191], "manag": [37, 44, 67, 117, 148, 154, 168], "technic": [37, 60, 145, 151, 165, 166], "dimensionless": [37, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 107, 109, 110, 118, 148, 150, 162], "report": [37, 150, 153, 187], "365": [37, 60, 137, 162, 180], "per": [37, 56, 61, 62, 96, 99, 108, 109, 148, 149, 150, 151, 152, 153, 154, 156, 157, 162, 166, 168, 186, 187, 188, 190, 191], "dai": [37, 60, 98, 99, 137, 149, 162, 180, 187], "get_vari": [37, 61, 75, 78, 83, 110, 118, 145, 146, 147, 150, 153, 157, 161, 188, 189], "get_interact": [37, 145], "interaction_nam": 37, "get_label": 37, "convert": [37, 39, 55, 56, 57, 62, 64, 65, 66, 98, 99, 109, 131, 135, 145, 146, 149, 150, 151, 153, 154, 157, 161, 162, 166, 168, 186, 189], "unchang": [37, 60, 157, 165], "b_rate": [37, 144, 145, 150, 152, 180, 184, 187], "birth": [37, 61, 144, 146, 150, 152, 159, 186, 187, 188], "get_par": [37, 61, 96, 145, 146, 147, 150, 186], "entir": [37, 49, 56, 57, 60, 62, 66, 109, 110, 112, 144, 150, 152, 153, 154, 158, 161, 164, 166, 168, 186, 188, 189], "you": [37, 105, 131, 134, 144, 145, 147, 148, 150, 152, 153, 154, 155, 157, 160, 161, 162, 165, 167, 186, 187, 189, 190], "know": [37, 145, 147, 150, 158, 161, 168, 186, 189, 190, 191], "happi": [37, 150], "look": [37, 56, 98, 99, 145, 146, 147, 150, 151, 153, 156, 158, 162, 168, 186, 187, 188, 191], "faster": [37, 134, 162], "panda": [37, 118, 145, 147, 154], "f": [37, 38, 131, 144, 145, 150, 151, 154, 156, 157, 162, 167, 186, 187, 188, 190, 191], "key_compart": 37, "gitinfo": [37, 49, 144, 153], "git": 37, "repositori": [37, 155, 186, 188, 189], "programmat": [37, 154], "modif": [37, 61, 152, 162, 190], "view": [37, 98, 147, 150], "rtype": [37, 58, 107], "uid": [37, 48, 153], "databook_onli": 38, "document": [38, 131, 144, 145, 146, 147, 148, 154, 155, 157, 162, 167, 186, 188, 189, 191], "templat": [38, 110, 144, 145, 165, 186], "markdown": 38, "filenam": [38, 112, 118, 119, 147, 150, 160], "parser": 39, "execut": [39, 56, 62, 115, 139, 150, 153, 155, 162], "fcn_str": [40, 60, 146], "x": [40, 55, 64, 92, 131, 136, 140, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 166, 167, 187, 189, 191], "fcn": [40, 45, 139], "dep": [40, 60, 146, 147], "local": [40, 131], "3": [40, 49, 66, 131, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165, 166, 168, 180, 186, 187, 188, 189, 191], "secur": 40, "mathemat": [40, 153], "max": [40, 60, 70, 134, 153, 162, 164, 170, 171, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185], "exp": [40, 151, 162, 166], "found": [40, 128, 162, 187], "py": [40, 60, 61, 136, 140, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 162, 166, 187, 189, 191], "pattern": [40, 131, 187, 191], "argdict": 40, "fromkei": [40, 131], "express": [40, 68, 136, 152, 158, 168, 188, 189], "safe": [41, 136, 186], "divis": [41, 110, 153], "nan": [41, 95, 98, 99, 118, 134, 145, 146, 147, 150, 153, 154], "arg": [42, 43, 50, 131], "repeat": [42, 43, 146, 162, 187], "elementwis": [42, 43], "repeatedli": [42, 43, 150], "10": [42, 49, 107, 115, 131, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 164, 166, 168, 187, 188, 191], "minimum": [43, 70, 75, 78, 88, 95, 109, 151, 157, 158, 161, 167, 189], "old": [44, 104, 131, 141, 154, 165, 168], "recent": [44, 112, 152], "transform": [44, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 112, 150, 151, 161, 166, 167], "sequenti": 44, "classnam": [45, 51, 131], "original_vers": [45, 51], "new_vers": [45, 51], "date": [45, 49, 51, 111, 143, 144, 150, 152, 153], "update_requir": [45, 51], "togeth": [45, 68, 83, 93, 98, 101, 105, 118, 146, 147, 148, 150, 153, 154, 161, 165, 166, 187, 191], "metadata": [45, 111, 146, 154], "decor": [45, 51], "regist": [45, 51], "flag": [45, 51, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 107, 108, 118, 121, 122, 123, 124, 125, 146, 150, 152, 154, 160, 162], "redo": 45, "calcul": [45, 57, 58, 60, 65, 107, 108, 109, 112, 114, 118, 144, 146, 150, 151, 153, 155, 156, 158, 161, 162, 166, 186, 187, 188, 189, 190, 191], "standalon": [46, 47, 48], "yield": [46, 47, 48, 79, 138, 150, 151, 153, 162, 191], "do_stuff": [47, 48], "obj": [49, 131], "registri": [49, 51], "8": [49, 115, 131, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 186, 187, 188, 191], "9": [49, 131, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 158, 187, 188, 191], "16": [49, 131, 144, 145, 147, 148, 150, 151, 153, 154, 166, 173, 174, 175, 176, 180, 181, 182, 191], "17": [49, 144, 145, 147, 148, 150, 151, 153, 154, 191], "23": [49, 144, 145, 147, 150, 153, 154], "6": [49, 131, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 164, 166, 168, 186, 187, 188, 191], "7": [49, 60, 131, 135, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 162, 186, 187, 188, 191], "11": [49, 144, 145, 147, 148, 150, 151, 152, 153, 154, 168, 186, 188, 191], "12": [49, 131, 137, 144, 145, 147, 148, 150, 151, 152, 153, 154, 180, 182, 186, 188, 191], "13": [49, 144, 145, 147, 148, 150, 151, 152, 153, 154, 191], "15": [49, 100, 144, 145, 147, 148, 150, 151, 153, 154, 159, 165, 166, 168, 187, 188, 191], "30": [49, 144, 150, 153, 164, 180, 191], "18": [49, 144, 145, 147, 148, 150, 151, 153, 154, 191], "19": [49, 144, 145, 147, 150, 151, 153, 154, 191], "20": [49, 107, 131, 144, 145, 147, 150, 151, 153, 154, 158, 164, 166, 168, 190, 191], "24": [49, 144, 145, 147, 150, 153, 154, 166], "27": [49, 144, 147, 150, 153, 154, 191], "28": [49, 144, 147, 150, 153, 154, 180], "26": [49, 144, 147, 150, 153, 154], "branch": [49, 144, 153], "detach": [49, 144, 153], "2023": [49, 144, 147, 153, 154, 186], "06t13": 49, "46": [49, 144, 150, 153, 158, 191], "00": [49, 144, 153, 189, 191], "hash": [49, 144, 153], "d46a3e": [49, 144, 153], "ascend": [49, 131], "long": [49, 150, 151, 158, 162, 166, 168, 186, 187], "introduc": [49, 146, 157, 159, 162, 166, 168, 186, 188, 191], "behav": [49, 60, 70, 98, 148, 151, 161, 166], "sensibli": 49, "futur": [49, 109, 134, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 161, 166, 187, 189, 191], "reli": [49, 98, 145, 152, 189], "principl": [49, 158, 191], "dcp": [49, 152], "worth": [49, 151], "overhead": [49, 146], "moment": [49, 61, 145, 147, 161], "reus": [49, 150, 161], "whose": [51, 146, 189, 191], "brief": 51, "overview": [51, 146, 147, 150, 154, 163, 191], "_update_requir": 51, "plan": [51, 186], "upgrad": 51, "def": [51, 131, 150, 151, 153, 156, 157], "_update_project": 51, "update_project": 51, "graph": [52, 56, 58, 62, 146, 159, 165], "fundament": [52, 145, 148, 150, 153, 156, 157, 161, 166, 168], "node": [52, 146, 159], "edg": [52, 98, 146, 148, 150, 159, 166], "link": [52, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 98, 99, 108, 118, 145, 147, 148, 150, 151, 153, 154, 157, 162, 165, 166, 168, 186, 187, 188, 190], "integr": [52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 75, 78, 80, 81, 82, 83, 84, 85, 98, 99, 110, 118, 147, 148, 149, 150, 151, 152, 153, 156, 158, 161, 162, 165, 166], "exit": [53, 165], "due": [53, 61, 96, 98, 99, 110, 144, 148, 151, 161, 168, 186, 187, 190, 191], "neg": [53, 55, 64, 146, 147, 153, 156, 162, 166, 168, 189, 190, 191], "popsiz": [53, 61, 146, 150, 153, 166, 188], "excess": 53, "residu": [53, 57, 62, 158], "commonli": [53, 68, 70, 150, 161, 191], "caught": 53, "dealt": [53, 146], "catch": [53, 153], "reject": [53, 85, 161], "propos": [53, 85, 92, 146, 161, 166], "tri": 53, "id": [54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 146], "portion": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 166, 168], "duplic": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 98, 118, 150, 188, 190], "quick": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67], "basic": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 110, 150, 151, 152, 154, 155, 161, 186], "product": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 150, 166], "librari": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 97, 144, 148, 150, 153, 165, 169, 186, 191], "prealloc": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67], "dt": [54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 98, 99, 108, 110, 113, 118, 119, 135, 146, 151, 153, 156, 157, 162, 172, 191], "set_dynam": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67], "noth": [54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 146, 157], "constraint": [54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 70, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 108, 110, 115, 144, 146, 151, 157, 165, 166, 191], "enforc": [54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 72, 73, 150, 151, 157, 186], "overload": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 161], "deriv": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 98, 121, 122, 123, 124, 125, 146, 150, 151, 153, 161], "unknown": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 146, 150, 187, 189], "distinct": [54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 74, 150, 157, 161, 166], "ti": [54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 146, 162], "wrap": [55, 58, 61, 146, 147, 148, 150, 153, 154, 161], "dest": [55, 56, 57, 61, 62, 63, 64, 65, 66, 146, 147, 150], "outflow": [55, 56, 57, 62, 63, 64, 65, 66, 146, 150, 151, 156, 164, 168, 186, 190], "outgo": [55, 56, 58, 62, 63, 64, 65, 146, 188, 190], "known": [55, 57, 60, 64, 67, 90, 118, 151, 159, 166, 168, 187], "improv": [55, 57, 60, 64, 67, 144, 146, 151, 153, 165, 166, 187, 191], "resolve_outflow": [55, 56, 58, 62, 63, 64, 65], "resolv": [55, 56, 62, 63, 64, 65, 66, 146, 161, 162, 168, 189, 191], "rescal": [55, 64, 74, 146, 155, 161, 162, 164, 190], "inflow": [55, 56, 57, 62, 64, 146, 151, 168, 190], "junction": [55, 56, 57, 58, 62, 64, 65, 145, 146, 147, 163, 186, 192], "flush": [55, 56, 57, 58, 62, 64, 65, 146, 154, 164, 168], "duration_group": [56, 62], "timedcompart": [56, 57, 62, 66, 168], "durat": [56, 57, 60, 62, 65, 66, 99, 137, 145, 149, 156, 171, 173, 174, 175, 176, 181, 182, 186, 187], "virtu": [56, 62], "belong": [56, 61, 62, 65, 96, 150, 159, 165, 166, 168], "exclus": [56, 62, 151, 159, 162], "attach": [56, 62, 112, 153], "upstream": [56, 62], "membership": [56, 62, 158], "indirect": [56, 62, 168], "member": [56, 62, 145, 146, 154, 161], "balanc": [56, 57, 58, 62, 164, 190], "primari": [56, 58, 110, 111, 118, 146, 150], "adjust": [56, 74, 76, 85, 86, 87, 88, 89, 90, 98, 108, 110, 112, 114, 144, 151, 159, 187, 191], "equal": [56, 85, 88, 96, 107, 148, 151, 152, 162, 164, 166, 168, 186, 187, 189, 190, 191], "analog": [56, 151, 157, 191], "timestep": [56, 57, 62, 63, 66, 98, 99, 108, 109, 110, 111, 118, 146, 147, 148, 149, 150, 151, 153, 157, 162, 164, 166, 168, 186, 187, 189, 190, 191], "proport": [56, 88, 98, 102, 108, 109, 110, 145, 146, 150, 157, 164, 166, 168, 176, 186, 187, 188, 189, 190, 191], "dure": [56, 59, 60, 62, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 109, 110, 118, 145, 146, 151, 152, 161, 162, 164, 166, 168, 187, 191], "unless": [56, 62, 98, 145, 150, 152, 153, 165, 189], "timedlink": [56, 62, 65, 168], "initial_flush": [56, 62], "nonzero": [56, 58, 146, 158, 168, 189], "incom": [56, 146, 168, 188], "rebalanc": 56, "fill": [56, 61, 62, 110, 144, 145, 157, 159, 165, 186, 188, 189, 190], "logic": [56, 61, 62, 85, 98, 109, 145, 150, 151, 161, 165, 168, 186], "come": [56, 62, 65, 110, 147, 156, 162, 164, 186, 188], "subgraph": [56, 62], "acycl": [56, 62], "system": [56, 62, 110, 144, 148, 151, 156, 161, 163, 186, 189, 191], "cycl": [56, 62, 146, 187], "topolog": [56, 62], "solvabl": [56, 62], "But": [56, 60, 62, 98, 139, 151, 161, 165, 188], "regardless": [56, 62, 74, 134, 146, 150, 151, 154, 158, 162, 165, 166, 168, 191], "forward": [56, 62, 146, 168], "destin": [57, 61, 66, 146, 147, 150, 166, 168], "classmethod": [57, 66, 110, 131], "wire": [57, 66, 146], "infrastructur": [57, 66], "suppli": [57, 65, 66, 77, 108, 110, 146, 147, 150, 157, 162, 164, 166, 186, 191], "converted_frac": [57, 66], "move": [57, 66, 146, 151, 153, 154, 156, 162, 164, 165, 168, 186, 188, 190, 191], "accordingli": [57, 98, 136, 144, 145, 150, 151, 160, 162, 191], "update_link": [57, 58, 146], "deleg": [57, 85], "program_instruct": [58, 68, 146], "cross": [58, 61, 68, 72, 73, 146, 153, 154, 165, 186, 188], "flush_junct": 58, "mcv1": 58, "junctioncompart": [58, 62, 147], "loop": [58, 145, 146, 153], "import": [58, 66, 88, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 166, 168, 186, 187, 188, 189, 190, 191], "get_pop": [58, 147], "process": [58, 68, 98, 139, 141, 146, 150, 151, 158, 160, 161, 162, 166, 167, 168, 186, 187, 191], "relink": [58, 146], "revers": [58, 104, 131, 138, 146, 150, 188], "unlink": [58, 178], "brand": 58, "circular": [58, 162], "pickl": [58, 60, 85, 145, 146], "unpickl": [58, 146], "remain": [58, 66, 108, 134, 146, 150, 151, 153, 161, 164, 166, 168, 186, 191], "scope": 58, "update_comp": [58, 146], "_t_index": [58, 146], "rate": [58, 60, 66, 80, 86, 98, 99, 110, 119, 144, 145, 146, 147, 148, 151, 152, 153, 156, 157, 159, 161, 162, 165, 166, 168, 186, 187, 188, 190, 191], "update_par": [58, 110, 146], "overwritten": [58, 60, 85, 98, 107, 109, 115, 134, 144, 146, 150, 152, 157, 166, 191], "constrain": [58, 60, 74, 88, 90, 92, 158, 161, 164, 166, 187], "carri": [58, 60, 61, 68, 105, 150, 153, 156, 157, 166], "pure": [58, 166], "aris": [59, 161], "xlsx": [60, 119, 144, 145, 147, 149, 153, 154, 156, 157, 159, 162, 165, 167, 186, 187, 188, 189, 190, 191], "doth_rat": [60, 145, 147, 150, 180, 186, 187], "rang": [60, 99, 115, 134, 145, 146, 150, 151, 152, 153, 154, 156, 161, 166, 186, 187, 188], "clip": [60, 87, 146, 166], "min": [60, 70, 134, 153, 162], "pop_aggreg": [60, 98, 146, 150], "scale_factor": [60, 109, 146], "y_factor": [60, 96, 144, 186, 187], "meta_y_factor": [60, 144], "drive": [60, 156, 157, 162, 166, 168, 188], "context": [60, 74, 133, 148, 150, 153, 166], "indirectli": [60, 157, 162, 186], "advantag": [60, 145, 157], "its": [60, 61, 72, 73, 75, 78, 80, 81, 82, 83, 84, 105, 112, 124, 144, 146, 147, 150, 151, 154, 157, 161, 162, 165, 166, 168, 187], "bear": 60, "re": [60, 133, 144, 146, 149, 151, 152, 153, 154, 156, 157, 164, 188, 191], "simpler": [60, 145, 157, 161], "gain": 60, "aren": [60, 61, 150], "larg": [60, 150, 151, 153, 156, 168, 186, 187, 188], "enough": [60, 153, 161, 187], "justifi": 60, "complex": [60, 109, 145, 146, 148, 150, 153, 161, 162, 165, 166, 168, 187, 190], "set_fcn": 60, "follow": [60, 108, 131, 134, 146, 147, 150, 151, 152, 154, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 186, 187, 188, 190, 191], "_fcn": 60, "until": [60, 66, 134, 146, 152, 153, 166, 168, 190], "increas": [60, 75, 78, 144, 150, 151, 165, 166, 167, 187, 188, 190, 191], "skip_funct": [60, 152, 162], "stop": [60, 75, 78, 83, 98, 109, 118, 142, 152, 160], "period": [60, 98, 148, 149, 150, 151, 161, 162, 166, 168, 187], "52": [60, 137, 144, 150, 153, 162], "25": [60, 99, 113, 144, 145, 147, 150, 151, 152, 153, 154, 156, 166, 168, 188, 191], "entail": 60, "precomput": [60, 65], "postcomput": 60, "asid": [61, 159, 167], "transcend": 61, "higher": [61, 150, 151, 191], "compartment": [61, 169], "maintain": [61, 96, 134, 150, 165, 187], "crucial": [61, 147, 150, 168], "referenc": 61, "overwrit": [61, 70, 76, 85, 86, 87, 95, 98, 108, 109, 110, 118, 122, 124, 141, 144, 147, 150, 161, 162, 165, 166, 186, 191], "charac_lookup": 61, "comp_lookup": 61, "get_link": [61, 146, 147], "At": [61, 65, 109, 110, 145, 146, 147, 153, 161, 166, 168, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 188, 191], "source_nam": [61, 146, 188], "dest_nam": [61, 146, 188], "less": [61, 62, 88, 158, 161, 166, 168, 186, 188, 191], "effici": [61, 110, 146, 161, 166], "search": [61, 131, 145, 150], "initialize_compart": [61, 146], "t_init": 61, "solv": [61, 151, 156, 158, 189], "linear": [61, 95, 98, 108, 122, 124, 134, 151, 152, 158, 161, 162, 166], "equat": [61, 156, 158, 189], "link_lookup": 61, "par_lookup": 61, "exclud": [61, 131, 165, 187], "death": [61, 72, 73, 75, 78, 80, 81, 82, 83, 84, 99, 146, 147, 150, 159, 162, 165, 168, 170, 178, 186, 187, 191], "scale": [62, 90, 94, 96, 99, 108, 109, 112, 144, 148, 150, 151, 161, 162, 167, 168, 186, 187, 191], "proportion": [62, 146, 164], "sink": [63, 145, 150, 157, 162, 170, 171, 174, 176, 178, 179, 182, 186], "unlimit": 64, "reservoir": [64, 186], "subject": [64, 151, 161], "No": [64, 165, 166, 188], "henc": [65, 156, 166], "flush_link": 65, "extern": [65, 110, 157, 166, 186, 187], "_cach": 65, "account": [65, 161, 162, 165, 166, 168, 186, 187, 188], "subcompart": [65, 168], "elig": [65, 108, 110, 118, 146, 148, 151, 157, 165, 166, 168, 190, 191], "count": [65, 150, 158, 186], "roll": [65, 112], "bin": [65, 66, 98, 148, 150], "forc": [66, 131, 144, 154, 156, 162, 168, 186, 187, 188, 190], "vaccin": [66, 144, 145, 147, 150, 154, 158, 162, 166, 168, 190], "protect": [66, 162, 168], "latent": [66, 145, 147, 150, 158, 168, 186], "state": [66, 146, 150, 151, 153, 154, 158, 159, 162, 165, 166, 168, 186, 190, 191], "mismatch": 66, "endpoint": [66, 134], "lightweight": [67, 118], "abstract": 67, "accomplish": [68, 110, 150, 160], "optim": [68, 109, 111, 112, 115, 131, 147, 153, 159, 163, 187], "deep": [68, 152], "exot": 68, "programinstruct": [68, 71, 74, 76, 85, 86, 87, 88, 89, 90, 93, 112, 118, 120, 121, 122, 123, 124, 125, 144, 146, 148, 149, 153, 157, 161, 191], "limit_typ": [70, 87], "ab": [70, 75, 78, 87, 161, 188], "lower_bound": 70, "upper_bound": 70, "initial_valu": 70, "optimiz": [70, 90], "bound": [70, 87, 90, 91, 92, 93, 98, 115, 146, 150, 161, 187], "get_hard_bound": 70, "x0": [70, 85, 93], "hard": [70, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 90, 93, 146, 157, 161, 166, 187], "parametr": [70, 74, 76, 85, 86, 90, 161, 164, 191], "alon": [70, 151, 165], "govern": [71, 145, 146, 147, 150, 151, 162, 164, 166, 186], "get_initi": [71, 76, 85, 86, 87, 88, 89, 161], "measurable_nam": [72, 73, 75, 78, 82, 83, 84], "threshold": [72, 73, 161], "measur": [72, 73, 75, 78, 80, 81, 82, 84, 85, 93, 112, 144, 159, 187], "exce": [72, 146, 161, 166], "impos": [72, 73, 151, 165], "penalti": [72, 73, 74, 85, 161], "smaller": [72, 151, 153, 156, 166, 168, 189], "monei": [72, 159, 161, 166, 191], "minim": [72, 74, 118, 146, 150, 158, 166, 186], "conjunct": [72, 73, 99, 124, 161, 162, 168, 187], "aim": [72, 110, 114, 144, 158, 166], "spend": [72, 74, 75, 76, 78, 83, 85, 87, 88, 89, 90, 91, 98, 108, 109, 110, 115, 118, 144, 151, 153, 157, 159, 165, 166, 168, 186, 191], "violat": [72, 73, 75, 78, 161, 168], "get_baselin": [72, 73, 75, 78, 80, 81, 82, 83, 84, 85], "get_hard_constraint": [72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 90, 161], "50": [72, 73, 75, 78, 80, 81, 82, 83, 84, 144, 150, 153, 158, 161, 164, 166, 187, 190, 191], "procedur": [72, 73, 75, 78, 80, 81, 82, 83, 84, 153], "receiv": [72, 73, 75, 78, 80, 81, 82, 83, 84, 158, 161, 166, 191], "get_objective_v": [72, 73, 75, 78, 80, 81, 82, 83, 84], "_unweighted_": [72, 73, 75, 78, 80, 81, 82, 83, 84], "below": [73, 139, 144, 145, 147, 150, 151, 152, 153, 155, 157, 161, 162, 164, 165, 166, 168, 186, 187, 188, 191], "larger": [73, 156, 162, 166, 187, 188, 191], "although": [74, 88, 96, 108, 145, 150, 151, 153, 161, 162, 165, 168, 186, 191], "realli": [74, 168], "constrain_instruct": [74, 85, 90, 161], "hard_constraint": [74, 85, 90, 93, 161], "penal": [74, 158], "perhap": [74, 187], "qualiti": [74, 187, 191], "totalspendconstraint": [74, 144, 161], "distanc": [74, 90, 161], "failedconstraint": [74, 92], "often": [74, 83, 96, 144, 146, 147, 150, 151, 153, 158, 159, 168, 187, 191], "fix": [74, 88, 90, 112, 144, 148, 151, 157, 161, 186, 189, 190, 191], "what": [74, 98, 131, 134, 144, 145, 146, 150, 151, 152, 161, 168, 186, 187, 188, 189, 190, 191], "examin": [74, 110, 144, 150, 152, 153, 161, 186, 188, 190, 191], "consid": [74, 90, 118, 145, 146, 149, 150, 151, 152, 154, 156, 158, 161, 164, 165, 166, 168, 187, 188, 189, 190, 191], "subclass": [74, 161], "decreas": [75, 144, 152, 165, 166, 168, 190, 191], "target_typ": [75, 78], "frac": [75, 78, 151, 156, 166], "2030": [75, 78, 147, 148, 150, 152, 154, 156, 159, 161, 191], "05": [75, 78, 124, 144, 151, 170], "accept": [75, 77, 78, 83, 139, 158], "amount": [75, 78, 85, 90, 144, 148, 153, 159, 161, 166, 168, 191], "prog_nam": [76, 86, 87, 88, 107, 110, 118], "t_0": 76, "t_end": 76, "p1": 76, "a1": [76, 165], "a2": 76, "unabl": [77, 162], "signal": 77, "algorithm": [77, 85, 91, 93, 114, 144, 158, 166, 187], "proce": [77, 109, 144, 146, 166, 187, 190], "maxim": [80, 144, 145, 150, 153, 166], "2020": [80, 112, 144, 147, 148, 150, 153, 154, 156, 157, 161, 187, 191], "foo": [80, 129, 131, 140], "cascade_stag": 81, "multipli": [83, 90, 98, 108, 109, 151, 156, 162, 166, 186, 190, 191], "maxtim": [85, 112, 144], "maxit": [85, 112], "thought": [85, 144, 152, 157, 159, 166, 191], "hyperopt": 85, "particl": 85, "swarm": 85, "pyswarm": 85, "bayesian": 85, "compute_object": 85, "net": [85, 188], "get_adjust": 85, "pickled_model": 85, "script": [85, 144, 150, 154, 160, 162, 165], "choic": [85, 90, 144, 186, 191], "dictat": 85, "space": [85, 146, 150, 187, 189], "anyth": [85, 110, 134, 157, 158, 161, 188], "_before_": 85, "mani": [85, 119, 131, 146, 147, 150, 151, 154, 159, 161, 165, 166, 168, 169, 186, 187, 190, 191], "nontrivi": [85, 162], "low": [85, 153, 187, 191], "high": [85, 153, 161, 187, 191], "update_instruct": [85, 161], "asd_valu": 85, "demonstr": [86, 144, 147, 148, 149, 150, 152, 156, 161], "reach": [86, 87, 90, 98, 108, 134, 144, 146, 148, 153, 161, 162, 165, 166, 168, 191], "simultan": [86, 122, 153, 158, 161, 162, 166, 189], "act": [86, 145, 156, 162], "opposit": [86, 150], "direct": [86, 150, 157, 158, 159, 168, 187, 188], "By": [87, 88, 105, 115, 131, 145, 147, 150, 152, 153, 154, 156, 158, 161, 162, 165, 166, 186, 188], "interpret": [87, 90, 93, 99, 150, 162, 166, 168, 191], "package_nam": 88, "initial_spend": 88, "min_prop": 88, "max_prop": 88, "min_total_spend": 88, "max_total_spend": 88, "fix_prop": 88, "packag": 88, "mdr": [88, 147], "short": [88, 108, 131, 151, 158, 168, 186], "spent": [88, 151, 161, 166, 168, 186, 191], "practic": [88, 141, 150, 158, 165, 166, 168, 186, 189, 191], "usual": [88, 107, 112, 122, 134, 145, 148, 150, 153, 168, 186, 189, 190], "ratio": [88, 144, 151, 168, 190, 191], "b": [88, 104, 119, 131, 138, 150, 161, 164, 166, 187], "half": [88, 157, 161, 191], "fund": [88, 157, 161, 166, 191], "essenti": [88, 95, 98, 139, 145, 150, 153, 154, 157, 161, 165, 168, 189, 190, 191], "intervent": [88, 150, 159, 166, 168, 186], "adjust_total_spend": 88, "total_spend": 90, "budget_factor": 90, "initial_total_spend": 90, "alloc": [90, 93, 109, 110, 117, 118, 121, 144, 148, 153, 159, 161], "caus": [90, 150, 161, 162, 168, 187, 188], "agre": 90, "explicit": [90, 156, 187, 191], "sensibl": 90, "ask": [90, 151], "unresolv": [91, 145], "ill": 91, "pose": 91, "_impossible_": 91, "mode": [91, 100, 102, 105, 147, 150], "failur": 91, "imposs": [91, 157, 165, 166, 187], "inconsist": [91, 153, 189], "greater": [91, 150, 164, 166, 189, 190], "continu": [91, 108, 109, 148, 149, 151, 152, 153, 157, 161, 166, 191], "lb": 92, "ub": 92, "nearest": [92, 158], "toler": [92, 168], "len": [92, 145, 153, 156], "xmin": 93, "xmax": 93, "optim_arg": 93, "intermedi": [94, 95, 146, 153, 157], "role": [94, 134, 144, 145, 150, 161, 164, 166, 191], "hold": [95, 153, 190], "disaggreg": [95, 146, 188], "has_valu": 95, "usabl": [95, 145, 146, 168], "pchip": [95, 134, 152], "previou": [95, 98, 124, 134, 141, 145, 146, 151, 152, 154, 156, 157, 158, 164, 188, 190, 191], "strongli": [95, 150], "recommend": [95, 144, 162, 187], "smooth": 95, "perturb": [95, 96, 107, 108, 110, 134, 153, 167], "smoothinterp": [95, 152], "tempor": [95, 150, 161], "p": [95, 105, 133, 144, 147, 148, 149, 151, 152, 153, 156, 157, 161, 162, 167, 186, 187, 188, 189, 190, 191], "basi": [96, 148, 150, 153, 154, 162], "segreg": 96, "all_par": [96, 186], "trivial": [96, 153, 158, 166, 186], "calibration_spreadsheet": 96, "tabular": 96, "miss": [96, 110, 145, 150, 154, 158, 159, 162, 187, 189, 191], "isna": 96, "load_calibr": [96, 186], "save_calibr": [96, 186], "permiss": 96, "path": [96, 105, 110, 112, 129, 140, 144, 148, 150, 151, 153, 168], "locat": [96, 143, 146, 155, 186, 190], "output_aggreg": [98, 150], "time_aggreg": [98, 150, 153], "t_bin": [98, 148, 149, 150, 153], "plottabl": [98, 99, 147], "visual": [98, 148, 150, 153, 166], "colour": [98, 101, 148, 165], "facili": 98, "tractabl": 98, "rare": [98, 187], "insid": [98, 145, 150, 162, 165, 168, 186], "Or": [98, 150, 151], "combin": [98, 107, 112, 122, 131, 144, 147, 148, 153, 158, 161, 162, 166, 167], "averag": [98, 146, 148, 149, 150, 151, 168, 187, 188], "unweight": [98, 188], "keyerror": [98, 131], "annual": [98, 108, 119, 146, 149, 150, 162, 166, 186, 187, 191], "cumsum": [98, 151], "__getitem__": [98, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "easili": [98, 150, 160, 161, 168, 186], "d": [98, 131, 136, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 186, 187, 188, 190, 191], "accumulation_method": 98, "summat": [98, 99, 118, 150, 165], "dali": [98, 145, 150], "trapezoid": 98, "concept": [98, 145, 150], "uniform": [98, 167], "cumtrapz": 98, "new_tvec": [98, 99], "tval": [98, 134], "nan_outsid": 98, "coverag": [98, 107, 108, 109, 110, 112, 118, 120, 122, 123, 149, 153, 155, 191], "treatment": [98, 108, 145, 147, 148, 149, 151, 157, 161, 162, 165, 166, 168, 187], "tx": [98, 151, 153, 168, 170, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185], "permit": [98, 146, 150, 165], "modal": [98, 106, 107, 110, 148, 153, 166, 177, 186], "notic": [98, 138, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 165, 166, 168, 186, 187, 188, 190, 191], "coverage_numb": [98, 148, 149], "coverage_elig": [98, 148, 149], "coverage_fract": [98, 148], "outsid": [98, 99, 168, 187, 191], "set_color": [98, 150], "colormap": [98, 150, 153], "blue": [98, 101, 150, 168, 186], "interpolation_method": 98, "chain": [98, 147, 159, 168], "timepoint": [98, 134, 146, 150], "data_label": [99, 150], "data_pop": [99, 150], "extrapol": [99, 134, 154], "disabl": [99, 153, 162], "versatil": 99, "sophist": [99, 150, 161, 191], "rigor": 99, "unit_str": 99, "week": [99, 137, 162, 168], "stack_pop": [100, 150], "stack_output": [100, 144, 148, 150], "outer": [100, 138, 148, 150], "legend_mod": [100, 102, 144, 150], "show_all_label": 100, "64": [100, 144, 147, 150, 159, 165, 166, 168, 188], "second": [100, 119, 131, 134, 138, 145, 146, 150, 151, 160, 161, 166, 168, 186, 187, 188, 191], "unstack": [100, 150], "outermost": 100, "highest": [100, 191], "inner": [100, 112, 150, 153], "even": [100, 118, 131, 145, 148, 150, 151, 152, 153, 154, 161, 162, 165, 166, 167, 168, 186, 187, 190, 191], "plot_typ": [101, 102, 144, 150, 151, 188, 190, 191], "legendset": 101, "red": [101, 150, 166, 168, 186], "patch": [101, 150], "circl": 101, "param_entri": 101, "layout": [101, 164, 186], "lw": 102, "scatter": [102, 144, 150, 187], "wherev": 102, "c": [104, 131, 134, 150, 153, 164, 166], "prefix": [105, 150], "file_format": 105, "png": [105, 150], "graphic": 105, "deal": [105, 153, 162, 165, 168], "freeli": [105, 154, 168, 189], "prepend": [105, 150, 160], "pdf": 105, "svg": 105, "princip": [106, 166], "fsw": [106, 188], "respect": [106, 109, 146, 150, 157, 158, 161, 162, 165, 166, 186, 189, 191], "prog": [107, 110, 112, 144, 157, 191], "cov_interact": 107, "imp_interact": 107, "random": [107, 144, 151, 153, 166, 167, 191], "parsabl": 107, "prog1": 107, "prog2": 107, "prog3": 107, "deviat": [107, 134, 153, 167], "compute_impact_interact": 107, "delta": [107, 162], "boolean": [107, 131, 146], "activ": [107, 112, 118, 121, 122, 123, 124, 125, 136, 144, 145, 146, 147, 150, 162, 166, 186, 188], "get_outcom": [107, 110, 144, 157], "prop_cov": 107, "forget": [107, 150, 152, 162], "get_prop_coverag": [107, 110], "n_prog": 107, "update_outcom": 107, "whenev": [107, 154], "sort": [107, 131, 134, 161], "target_pop": 108, "target_comp": 108, "currenc": [108, 110, 144], "cost": [108, 109, 110, 115, 144, 157, 166, 191], "add_program": [108, 110, 144], "baseline_spend": 108, "capacity_constraint": [108, 110, 115], "capac": [108, 109, 110, 118, 120, 122, 157, 187, 191], "get_capac": [108, 110, 144, 157], "cover": [108, 110, 118, 148, 149, 157, 191], "off": [108, 109, 110, 149, 157, 162, 166, 168, 187], "person": [108, 150, 156, 165, 166, 187, 191], "get_prop_cov": [108, 157], "satur": [108, 110, 166, 191], "sensit": [108, 145, 191], "get_spend": 108, "is_one_off": 108, "incur": [108, 166, 168], "impact": [108, 109, 157, 187, 191], "longer": [108, 145, 151, 157, 158, 161, 168, 186], "contrast": [108, 109, 145, 150, 161, 165, 166, 168], "art": [108, 148, 166, 187, 191], "spend_data": [108, 149], "unit_cost": [108, 149, 191], "stop_year": 109, "histor": [109, 152, 166, 187, 191], "switch": [109, 151, 162, 191], "wide": [109, 168, 186, 188, 191], "later": [109, 147, 157, 162, 168, 186, 190], "preced": [109, 122, 161, 186], "simplic": [109, 165], "ramp": 109, "scale_alloc": [109, 153], "down": [109, 150, 168, 187], "add_comp": [110, 144], "add_par": [110, 144], "arbitrarili": [110, 157, 162], "_allow_missing_data": 110, "get_alloc": [110, 118, 144, 153], "fuse": 110, "inclus": [110, 146, 162], "incid": [110, 147, 180, 187], "prop_coverag": 110, "covout": [110, 144, 166], "prop": 110, "best": [110, 114, 144, 150, 158, 166, 186, 187, 189, 191], "screen": [110, 141, 153, 165, 166], "easiest": [110, 150, 154, 186, 191], "popnam": 110, "flat": 110, "num_elig": 110, "reconcili": [110, 152, 159], "get_coverag": [110, 118, 149, 153, 157], "straight": [110, 145, 150], "converag": 110, "cap": [110, 144, 161, 166], "remove_comp": [110, 144], "remove_par": [110, 144], "remove_pop": [110, 144, 154], "remove_program": [110, 144], "sigma": [110, 134, 152, 153, 154, 167], "almost": [111, 150, 165, 187, 191], "major": [111, 161, 187], "scen": [111, 112, 144, 150, 152], "central": 112, "importantli": [112, 165, 168, 190], "projectset": 112, "save_to_project": [112, 144], "new_nam": [112, 131, 144], "default_min_scal": 112, "default_max_scal": 112, "default_weight": 112, "default_metr": 112, "par_name_1": 112, "par_name_2": 112, "charac_name_1": 112, "pop_1": 112, "min_scale_1": 112, "max_scale_1": 112, "min_scale_2": 112, "max_scale_2": 112, "pop_2": 112, "min_scale_3": 112, "max_scale_3": 112, "charac_name_2": 112, "weight_1": 112, "weight_2": 112, "wape": 112, "fit": [112, 158, 159, 161, 187, 189], "meansquar": 112, "create_databook": 112, "databook_path": [112, 167], "num_pop": 112, "num_transf": 112, "data_start": [112, 144, 191], "data_end": [112, 144, 191], "data_dt": 112, "filepath": 112, "binari": 112, "migrat": [112, 186], "make_default_parset": [112, 167], "load_progbook": [112, 144, 149, 153, 157, 191], "progbook_path": [112, 144], "atomicaspreadsheet": 112, "make_parset": 112, "make_progbook": [112, 144, 191], "temporari": [112, 168], "make_scenario": [112, 144, 150], "verbos": [112, 118, 131, 160], "littl": [112, 158, 188], "run_optim": [112, 161], "optimnam": 112, "store_result": [112, 121, 122, 123, 124, 125], "run_sampled_sim": [112, 141, 153, 160], "num_work": [112, 139], "reason": [112, 146, 150, 162, 165, 168, 187, 191], "avoid": [112, 113, 146, 149, 152, 153, 161, 162, 166, 187, 188, 190, 191], "inadvertantli": 112, "blow": 112, "predict": [112, 150, 151, 153, 165, 187], "cpu": [112, 139], "run_scenario": [112, 121, 122, 123, 124, 125, 147], "folder": [112, 140, 144, 150, 153, 155, 162], "blob": 112, "update_set": 112, "sim_start": [112, 113], "sim_end": [112, 113], "sim_dt": [112, 113, 156], "2035": [113, 144, 147, 150, 152], "ndarrai": 113, "linspac": 113, "align": [113, 156, 191], "update_time_vector": [113, 151, 156, 191], "2018": [113, 144, 147, 148, 149, 152, 153, 154, 186, 188], "quarterli": [113, 151, 153, 168], "ideal": [114, 166, 187], "discontinu": [114, 156, 159], "gather": [114, 159, 187], "reconciliation_year": [115, 144, 191], "unit_cost_bound": [115, 144, 191], "baseline_bound": 115, "capacity_bound": 115, "outcome_bound": 115, "eval_par": 115, "eval_rang": 115, "unreconcil": 115, "export": [116, 118, 119, 131, 146, 154, 187], "r": [117, 144, 150, 156, 191], "m": [117, 161], "raw_result": 118, "optima": [118, 150, 158], "hiv": [118, 151, 165, 168, 177, 186, 187, 191], "relationship": [118, 146, 147, 157, 165, 187], "check_for_nan": [118, 153], "export_raw": [118, 147, 153], "raw": [118, 134, 146, 148, 150, 153, 154, 166], "queri": [118, 128, 146, 154], "caution": [118, 161], "get_equivalent_alloc": 118, "incorpor": [118, 146, 153, 158, 161, 162, 191], "lookup": [118, 146, 147, 161], "link_nam": [118, 153], "plot_nam": [118, 119], "plot_group": 118, "pop_label": [118, 153, 186], "used_program": [118, 153], "overlap": [118, 165, 166, 168], "took": 118, "output_ord": [119, 147], "cascade_ord": 119, "program_ord": 119, "instantan": 119, "2014": [119, 124, 144, 147, 154], "2015": [119, 124, 144, 147, 150, 154], "2016": [119, 144, 147, 153, 154, 159, 186, 188, 190], "divid": [119, 131, 146, 150, 157, 166, 186, 190, 191], "four": 120, "broadli": [120, 186], "involv": [120, 144, 146, 152, 161, 165, 166, 168, 188, 191], "parsetnam": [121, 122, 123, 124, 125], "progsetnam": [121, 122, 123, 124, 125], "get_instruct": [121, 122, 123, 124, 125], "get_parset": [121, 122, 123, 124, 125, 152], "get_progset": [121, 122, 123, 124, 125], "scenario_valu": [122, 124, 144, 150], "ovetoxr": 122, "parameterscenario": 122, "scvalu": [124, 144, 150], "birth_transit": 124, "pop1": 124, "3e6": 124, "1e4": 124, "2e6": [124, 150], "2003": [124, 147, 152], "2004": [124, 147, 152], "pscenario": 124, "examplep": 124, "parameter_label": 124, "pop_identifi": 124, "o": [124, 131], "smoothli": [124, 152, 162], "rec_rat": [124, 182, 187, 191], "pop2": 124, "06": [124, 144, 153, 180, 182], "readabl": [124, 161], "assembl": [124, 146, 148], "end_overwrit": 124, "revert": 124, "share": [125, 146, 150, 168, 187], "subdir": 129, "directori": [129, 140, 150], "windowspath": 129, "subdirectori": 129, "throughout": [130, 166, 187], "init": 131, "ordereddict": 131, "defaultdict": 131, "__add__": 131, "dict2": 131, "dict1": 131, "dict3": 131, "clear": [131, 141, 142, 153, 160, 187], "new_parset": [131, 144], "old_nam": 131, "dict_item": 131, "dict_kei": 131, "dict_valu": 131, "disp": 131, "maxlen": 131, "showmultilin": 131, "dividerthresh": 131, "numind": 131, "sigfig": 131, "numformat": 131, "maxitem": 131, "z": [131, 151], "293487": 131, "6f": 131, "enumitem": 131, "transpos": [131, 188], "enumkei": 131, "enumer": [131, 156], "enumv": 131, "enumvalu": 131, "alia": 131, "doprint": 131, "findkei": 131, "detail": [131, 144, 145, 146, 147, 150, 157, 160, 161, 162, 165, 166, 167, 168, 186, 188, 189, 190, 191], "filterv": 131, "findbykei": 131, "findbyv": 131, "strict": [131, 168], "exact": [131, 145, 152, 162], "dog": 131, "cat": [131, 186], "mongoos": 131, "regex": 131, "startswith": 131, "endswith": 131, "fromeach": 131, "ind": 131, "asdict": 131, "slice": [131, 161], "simplest": [131, 145, 153, 161, 186, 188], "pick": 131, "els": [131, 161, 187], "getnest": 131, "makenest": 131, "po": [131, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "computation": [131, 145, 186], "ineffici": 131, "1492": 131, "1604": 131, "gang": 131, "1444": 131, "mekong": 131, "1234": 131, "iteritem": 131, "iternest": 131, "keys2": 131, "keys3": 131, "coerc": 131, "arr": 131, "third": [131, 146, 153, 161, 166, 188], "34": [131, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 186, 187, 188, 189, 190, 191], "58": [131, 144, 150], "99": [131, 144, 150], "45": [131, 144, 150, 153, 191], "exis": 131, "h": [131, 157], "tripli": 131, "makefrom": 131, "keynam": 131, "l": 131, "monkei": 131, "musket": 131, "func": 131, "myfunc": 131, "mylist": 131, "popitem": 131, "lifo": 131, "promot": [131, 150], "promotetolist": 131, "od": [131, 151, 155], "oldkei": 131, "newkei": 131, "speed": 131, "setdefault": 131, "setitem": 131, "regular": [131, 164], "setnest": 131, "sortbi": 131, "alphabet": 131, "toeach": 131, "invers": [131, 156, 186], "reset": [131, 133, 141, 152, 160], "666": 131, "k": [131, 150, 151, 154], "lack": [131, 187], "valind": 131, "show_warn": [133, 154], "block": [133, 145, 147, 150], "temporarili": [133, 150, 154], "logger": [133, 139, 141, 151, 160], "captur": [133, 141, 151, 157, 160, 187, 191], "critic": [133, 145, 158, 162, 168, 187], "tend": [134, 166, 168, 186], "deprec": [134, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "interest": [134, 153, 168], "get_arrai": [134, 152, 153, 154], "has_time_data": [134, 152, 153, 154], "t2": [134, 151, 192], "gradient": [134, 161, 166], "legaci": [134, 162], "curvatur": 134, "t1": [134, 151, 192], "v1": [134, 188], "scipi": [134, 153, 156, 161], "pchipinterpol": 134, "anywai": [134, 141, 146], "callabl": 134, "remove_aft": [134, 152, 153, 154], "t_remov": 134, "remove_befor": [134, 152, 153, 154], "remove_between": [134, 152, 153, 154], "datetim": [135, 144, 153, 186], "decim": 135, "2010": [135, 147, 150, 152, 187], "approxim": [135, 146, 150, 151, 168, 191], "plot_str": 136, "pd_div": [136, 180], "nd_div": [136, 180], "token": 136, "plural": 137, "friendli": 137, "suffix": 137, "fortnight": 137, "month": [137, 149, 151, 162, 168], "loop_ord": 138, "zip": 138, "control": [138, 146, 152, 153, 154, 160, 162, 165], "theori": 138, "show_progress": 139, "hide": 139, "baz": 140, "upward": 141, "stdout": 141, "stderr": 141, "replic": [141, 156, 159, 160, 166, 168, 186], "statement": [141, 160], "info": [141, 160], "consol": 141, "corrupt": 141, "handler": 141, "atomica_file_handl": 142, "atomica": [144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 186, 187, 188, 189, 190, 191, 192], "notebook": [144, 148, 149, 150, 153, 155], "environ": [144, 165], "command": [144, 145, 150, 160, 187, 188, 190, 191], "load_ext": [144, 147, 148, 150, 152, 153], "autoreload": [144, 147, 148, 150, 152, 153], "inlin": [144, 147, 148, 149, 150, 151, 152, 153], "sy": [144, 148, 149, 150, 151, 153], "pyplot": [144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 191], "plt": [144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 191], "framework_templ": [144, 145, 186], "framework_template_advanc": [144, 186], "your": [144, 145, 150, 160, 165, 186, 187, 191], "guidanc": [144, 145, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "library_path": [144, 145, 154], "ship": 144, "tb_framework": [144, 145, 154], "new_databook": 144, "1006": [144, 145, 147, 148, 150, 152, 153], "lu_prog": [144, 145, 147, 148, 150, 152, 180], "lx_prog": [144, 145, 147, 148, 150, 152, 180], "leu_act": [144, 145, 147, 148, 150, 152, 180], "lex_act": [144, 145, 147, 148, 150, 152, 180], "llu_act": [144, 145, 147, 148, 150, 152, 180], "llx_act": [144, 145, 147, 148, 150, 152, 180], "l_inf": [144, 145, 147, 148, 150, 152, 180], "v_inf": [144, 145, 147, 148, 150, 152, 180], "lr_inf": [144, 145, 147, 148, 150, 152, 180], "ar_act": [144, 145, 147, 148, 150, 152, 180], "ar_rec": [144, 145, 147, 148, 150, 152, 180], "pd_rec": [144, 145, 147, 148, 150, 152, 180], "pm_rec": [144, 145, 147, 148, 150, 152, 180], "px_rec": [144, 145, 147, 148, 150, 152, 180], "nd_rec": [144, 145, 147, 148, 150, 152, 180], "nm_rec": [144, 145, 147, 148, 150, 152, 180], "nx_rec": [144, 145, 147, 148, 150, 152, 180], "pd_term": [144, 145, 147, 148, 150, 152, 180], "pm_term": [144, 145, 147, 148, 150, 152, 180], "px_term": [144, 145, 147, 148, 150, 152, 180], "nd_term": [144, 145, 147, 148, 150, 152, 180], "nm_term": [144, 145, 147, 148, 150, 152, 180], "nx_term": [144, 145, 147, 148, 150, 152, 180], "home": [144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 186, 187, 188, 189, 191], "vst": [144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 186, 187, 188, 189, 191], "186": [144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "futurewarn": [144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "behavior": [144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "ser": [144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "iloc": [144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "constitu": [144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 187, 189, 191], "doc": [144, 154, 155, 186, 188, 189, 190, 191], "let": [144, 150, 153, 154, 190], "pri": [144, 188], "prison": [144, 147, 166, 186, 188], "new_databook_2": 144, "analys": [144, 153], "tb_databook": [144, 154], "elaps": [144, 147, 148, 149, 150, 152, 153, 156, 157, 168, 186, 187, 188, 189, 190, 191], "642": 144, "850": 144, "39": [144, 145, 147, 150, 152, 153, 154, 186, 187, 191], "parset_default": [144, 147], "help": [144, 145, 156, 158, 162, 165, 186, 187, 189], "pleas": 144, "manually_calibr": 144, "foi_out": [144, 180, 188], "infecti": [144, 156, 186, 188], "foi_in": [144, 150, 152, 180, 188], "suscept": [144, 145, 146, 147, 150, 154, 156, 159, 162, 165, 166, 168, 186, 187, 188, 189, 190, 191], "young": [144, 165], "children": [144, 150, 154, 165, 166, 168, 186, 187, 188], "res_manually_calibr": 144, "ac_inf": [144, 145, 147, 180], "611": 144, "auto_calibr": 144, "launch": [144, 191], "seed": [144, 153, 191], "605": 144, "432": 144, "pm": [144, 153, 191], "origv": [144, 191], "newval": [144, 191], "orig": [144, 191], "diff": [144, 191], "001668": 144, "467": 144, "104": [144, 150], "425": [144, 147], "89": [144, 150], "934": 144, "2017": [144, 147, 153, 186, 188], "629": 144, "132": 144, "384": 144, "5503": 144, "430": 144, "194": 144, "000008965": 144, "447": 144, "241": 144, "111": [144, 150], "260": 144, "1243": 144, "440": 144, "209": 144, "79": [144, 150], "000003700": 144, "433": [144, 150], "103": [144, 150, 158], "954": 144, "3056": 144, "448": 144, "230": 144, "100": [144, 150, 151, 153, 158, 161, 164, 166, 167, 168, 188, 189, 190, 191], "436": 144, "210": 144, "80": [144, 150, 153, 156, 179], "420": 144, "5339": 144, "445": 144, "424": 144, "004086": 144, "426": [144, 152], "48": [144, 150, 153, 186], "417": 144, "003413": 144, "655": 144, "211": 144, "81": [144, 150], "367": 144, "05025": 144, "428": [144, 152], "227": 144, "97": [144, 150], "460": 144, "09289": 144, "576": 144, "435": [144, 152], "75": [144, 150, 189, 191], "687": 144, "6797": 144, "608": 144, "220": 144, "90": [144, 150, 168, 191], "705": 144, "01837": 144, "151": 144, "21": [144, 145, 147, 150, 151, 153, 154, 180], "683": 144, "003935": 144, "431": 144, "55": [144, 150, 191], "00008506": 144, "457": 144, "56": [144, 150, 158], "0004798": 144, "gt": [144, 149, 151, 152, 153, 154, 156, 186], "res_auto_calibr": 144, "599": 144, "example_progbook": 144, "tb_progbook": 144, "lt": [144, 149, 152, 153, 154, 156, 186, 191], "0x7f5d2851b6d0": 144, "_get_code_nam": 144, "_normalize_inpu": 144, "_read_effect": 144, "_read_spend": 144, "_read_target": 144, "_write_effect": 144, "_write_spend": 144, "_write_target": 144, "get_prop_covera": 144, "_book": 144, "_format": 144, "_pop_typ": 144, "_refer": 144, "initj": [144, 145, 147, 180], "de": 144, "v_num": [144, 145, 147, 150, 180], "49": [144, 150, 153, 158, 187], "727987": 144, "tzinfo": [144, 153, 186], "tzutc": [144, 153, 186], "157138": 144, "administ": [144, 166], "bcg": [144, 148, 166], "0x7f5d23748c10": 144, "atom": 144, "pcf": [144, 148, 166], "acf": [144, 148, 166], "hospd": [144, 148], "hospmdr": [144, 148], "hospxdr": [144, 148], "ambd": [144, 148], "ambmdr": [144, 148], "xdrnew": [144, 148], "prisd": [144, 148], "prisdr": [144, 148], "nov": 144, "02": [144, 180], "utc": 144, "piec": [144, 191], "our": [144, 148, 150, 151, 153, 157, 161, 166, 186, 188, 190, 191], "res_prog": 144, "becom": [144, 146, 150, 151, 153, 156, 158, 165, 166, 188, 190, 191], "reconcil": [144, 191], "aspect": [144, 150, 161, 189], "243": [144, 191], "fulli": [144, 151, 153, 157, 186, 191], "absenc": [144, 151, 159, 191], "4500": 144, "4725": 144, "61": [144, 150], "1000": [144, 151, 154, 156, 157, 166, 187, 189, 191], "950": 144, "004674": 144, "4275": 144, "22": [144, 145, 147, 150, 151, 153, 154, 180], "5500": 144, "5225": 144, "003359": 144, "4000": [144, 154], "3800": 144, "00002487": 144, "18000": 144, "18900": 144, "59": [144, 150], "01249": 144, "5775": 144, "004171": 144, "4200": 144, "00004738": 144, "10000": 144, "10500": 144, "02779": 144, "7500": 144, "7875": 144, "68": [144, 147, 150], "09877": 144, "8000": 144, "7600": 144, "4900": [144, 191], "5145": 144, "66": [144, 150, 158], "07815": 144, "625": [144, 191], "00004553": 144, "2500": 144, "2375": 144, "57": [144, 150], "005951": 144, "3900": 144, "00001275": 144, "4612": 144, "2625": 144, "01134": 144, "1050": 144, "009103": 144, "4655": 144, "06943": 144, "9500": 144, "47": [144, 145, 150, 153, 191], "02985": 144, "2700": 144, "2565": 144, "29": [144, 150, 153, 154], "004672": 144, "31": [144, 150, 153], "17100": 144, "01325": 144, "32": [144, 150, 153, 157, 158], "7125": 144, "38": [144, 150, 153], "08149": 144, "33": [144, 150, 153, 164, 166, 190], "375": [144, 191], "00002755": 144, "2835": [144, 151], "35": [144, 150, 153, 191], "17550": 144, "006771": 144, "36": [144, 150, 153], "37": [144, 150, 153], "8400": 144, "40": [144, 150, 151, 153, 157, 186, 187, 191], "41": [144, 150, 153], "5362": 144, "001209": 144, "42": [144, 150, 153, 191], "2632": 144, "43": [144, 150, 153, 191], "4375": 144, "00001114": 144, "44": [144, 150, 153, 191], "975": 144, "002367": 144, "9750": 144, "01499": 144, "5637": 144, "001094": 144, "5431": 144, "0002947": 144, "3850": 144, "000006460": 144, "7800": 144, "51": [144, 150], "53": [144, 150], "4777": 144, "03338": 144, "54": [144, 150], "2666": 144, "2767": 144, "4387": 144, "7312": 144, "03816": 144, "7218": 144, "962": 144, "001191": 144, "2437": 144, "003052": 144, "956": 144, "0005974": 144, "62": [144, 150], "9625": 144, "007562": 144, "63": [144, 150, 151], "3825": 144, "000003251": 144, "4556": 144, "65": [144, 147, 150, 188], "2733": 144, "5568": 144, "0002804": 144, "67": [144, 150, 166, 190], "5465": 144, "00007276": 144, "4528": 144, "125": 144, "69": [144, 147, 150], "8200": 144, "70": [144, 147, 150, 168, 191], "8100": 144, "71": [144, 150], "40625": 144, "000004857": 144, "72": [144, 150], "7900": 144, "73": [144, 150], "8050": 144, "74": [144, 150], "390625": 144, "000002243": 144, "4716": 144, "01632": 144, "76": [144, 150], "2406": 144, "001546": 144, "77": [144, 150, 153], "2716": 144, "875": 144, "78": [144, 150], "2390": 144, "0007779": 144, "2683": 144, "7171": 144, "009000": 144, "8025": 144, "82": [144, 150], "17325": 144, "003424": 144, "83": [144, 150, 180], "5482": 144, "8125": 144, "00001808": 144, "84": [144, 150], "17212": 144, "001722": 144, "85": [144, 150], "4443": 144, "86": [144, 149, 150], "9562": 144, "003798": 144, "87": [144, 150], "953": 144, "0002992": 144, "88": [144, 150], "5491": 144, "000004505": 144, "9531": 144, "001903": 144, "91": [144, 150], "3828125": 144, "000001074": 144, "92": [144, 150], "37890625": 144, "0000005250": 144, "93": [144, 150, 180], "4514": 144, "0625": [144, 151, 188], "94": [144, 150], "2691": 144, "5625": 144, "95": [144, 150], "2382": 144, "0003902": 144, "96": [144, 150], "4685": 144, "008065": 144, "4471": 144, "98": [144, 150], "4507": 144, "03125": 144, "5495": 144, "703125": 144, "000001124": 144, "7148": 144, "004453": 144, "101": [144, 150], "17156": 144, "0008633": 144, "102": [144, 150], "3812": [144, 147], "000001631": 144, "9515": 144, "0009528": 144, "105": [144, 150], "17128": 144, "0004323": 144, "106": [144, 150], "5534": 144, "00007096": 144, "107": [144, 150], "376953125": 144, "0000002595": 144, "108": [144, 150], "7136": 144, "71875": 144, "002214": 144, "109": [144, 150], "110": [144, 150, 158, 191], "8012": 144, "7950": 144, "112": [144, 150], "17114": 144, "0002163": 144, "113": [144, 150, 151], "2378": 144, "90625": 144, "0001954": 144, "114": [144, 150], "2695": 144, "78125": 144, "115": [144, 150], "8006": 144, "116": [144, 150], "4485": 144, "9375": 144, "117": [144, 150], "4670": 144, "3125": [144, 191], "004008": 144, "118": [144, 150], "4662": 144, "65625": 144, "001998": 144, "119": [144, 150], "4658": 144, "828125": 144, "0009972": 144, "120": [144, 150, 158], "2708": 144, "121": [144, 150], "122": [144, 150], "5517": 144, "1875": 144, "00001785": 144, "123": [144, 150], "4492": 144, "96875": 144, "124": [144, 150], "8003": 144, "126": 144, "5497": 144, "8515625": 144, "0000002809": 144, "127": 144, "128": 144, "129": [144, 180], "3806": 144, "0000008167": 144, "130": 144, "5498": 144, "92578125": 144, "00000007020": 144, "131": 144, "7975": 144, "133": 144, "2704": 144, "21875": 144, "134": 144, "4656": 144, "9140625": 144, "0004982": 144, "135": 144, "2376": 144, "953125": 144, "00009779": 144, "136": 144, "137": 144, "138": 144, "4496": 144, "484375": 144, "139": 144, "2702": 144, "109375": 144, "140": [144, 151], "7130": 144, "859375": 144, "001104": 144, "141": 144, "142": 144, "9507": 144, "0004767": 144, "143": 144, "2697": 144, "890625": 144, "144": 144, "5508": 144, "59375": 144, "000004477": 144, "145": 144, "7987": 144, "146": 144, "4498": 144, "2421875": 144, "147": [144, 180], "951": 144, "0001497": 144, "148": [144, 153], "149": 144, "3803": 144, "0000004087": 144, "150": [144, 150, 153], "8001": 144, "7127": 144, "9296875": 144, "0005513": 144, "152": 144, "4503": 144, "515625": 144, "too": [144, 152, 153, 161, 166, 168, 187, 191], "small": [144, 150, 151, 152, 153, 156, 162, 168, 188, 191], "0000002296": 144, "000001000": [144, 191], "wish": [144, 150, 158, 161, 162, 165, 187, 191], "reconciled_progset": 144, "irrespect": [144, 150, 166], "270000": 144, "220000": [144, 148], "res_par_scen": 144, "616": 144, "pathcollect": 144, "0x7f5d2efdc890": 144, "doubled_budget": [144, 153], "res_baselin": [144, 191], "res_budget_scen": 144, "853": 144, "combinedscenario": 144, "mix": [144, 150, 153, 165, 189], "res_combined_scen": 144, "872": 144, "With": [144, 151, 153, 156, 157, 186, 191], "care": [144, 146, 150, 169, 187], "did": [144, 150, 154, 158], "mind": [144, 152, 158, 168, 186], "better": [144, 145, 151, 152, 165, 168, 187, 191], "half_coverag": 144, "res_cov_scen": 144, "815": 144, "spendingadjust": [144, 161], "maximizecascadestag": 144, "optimized_instruct": 144, "345000": 144, "379500": 144, "11730": 144, "240000": 144, "216000": 144, "1246000": 144, "1370600": 144, "264000": 144, "310500": [144, 152], "8205000": 144, "9025500": 144, "1121400": 144, "25282133": 144, "33333333": 144, "22753919": 144, "999999996": 144, "25568000": 144, "23011200": 144, "109461100": 144, "120407210": 144, "961200": 144, "865080": 144, "24289600": 144, "res_optim": 144, "843": 144, "familiar": [145, 158], "framework_tb": 145, "develop": [145, 150, 153, 159, 161, 186], "goal": [145, 158, 159, 161], "accommod": 145, "extent": 145, "codebas": 145, "cours": [145, 150, 151, 153, 157, 158, 188, 191], "rectangular": 145, "lowercas": 145, "datasheet": 145, "sh_pop": 145, "demograph": [145, 147, 158], "sh_notif": 145, "notif": 145, "sh_treat": 145, "sh_ltreat": 145, "sh_init": 145, "sh_newinf": 145, "sh_opt": 145, "sh_inf": 145, "sh_untpro": 145, "untreat": [145, 147], "sh_dali": 145, "intuit": [145, 166, 190], "recov": [145, 150, 151, 156, 159, 166, 186, 187, 189, 191], "diagnos": [145, 147, 153, 158, 165, 166, 187, 189, 191], "known_inf": [145, 180], "num_treat": [145, 147, 178, 180], "sp": [145, 147, 150], "sp_inf": [145, 147, 180], "spdk_inf": [145, 180], "spmk_inf": [145, 180], "spxk_inf": [145, 180], "spdt": [145, 150, 180], "spmt": [145, 150, 180], "spxt": [145, 150, 180], "__init__": [145, 160], "blind": 145, "ident": [145, 168, 190], "ordinari": 145, "design": [145, 153, 161, 162, 186, 187, 189, 191], "abil": [145, 150, 166], "core": [145, 146, 166], "lot": [145, 150, 186], "autocomplet": 145, "outlin": [145, 166, 186], "guid": [145, 158, 161], "everyth": [145, 187], "sai": [145, 151, 168, 188, 191], "challeng": [145, 158, 165, 189], "someth": [145, 150, 161, 187], "solut": [145, 151, 156, 161, 187, 189], "complic": [145, 150, 161, 165], "_valid": 145, "unus": 145, "field": [145, 186], "sanitize_datafram": 145, "readili": [145, 158, 191], "foremost": 145, "frequent": [145, 150, 188], "lteu": [145, 147, 150, 180], "ltet": [145, 147, 150, 180], "ltetoj": [145, 147, 180], "ltlu": [145, 147, 150, 180], "ltlt": [145, 147, 150, 158, 180], "ltltoj": [145, 147, 180], "snxd": [145, 147, 150, 180], "snxt": [145, 150, 180], "snxtoj": [145, 147, 180], "acr": [145, 150, 180], "bir": [145, 180], "immi": [145, 180], "imj": [145, 180], "ddi": [145, 147, 180], "doth": [145, 147, 150, 180], "emi": [145, 147, 150, 180], "sus_idiv": [145, 180], "vac_idiv": [145, 180], "lteu_idiv": [145, 180], "ltet_idiv": [145, 180], "ltlu_idiv": [145, 180], "ltlt_idiv": [145, 180], "snxd_idiv": [145, 180], "snxt_idiv": [145, 180], "acr_idiv": [145, 180], "e_rat": [145, 147, 150, 180], "le_ntreat": [145, 147, 180], "ltt_dur": [145, 180], "susx": [145, 147, 180], "ltex": [145, 158, 180], "ltlx": [145, 151, 158, 180], "spdu": [145, 147, 150, 180], "spdd": [145, 147, 150, 180], "spmu": [145, 147, 150, 180], "spmd": [145, 147, 150, 180], "spxu": [145, 147, 150, 180], "spxd": [145, 147, 150, 180], "sndu": [145, 147, 150, 180], "sndd": [145, 147, 150, 180], "sndt": [145, 150, 180], "snmu": [145, 147, 150, 180], "snmd": [145, 147, 150, 180], "snmt": [145, 150, 180], "snxu": [145, 147, 150, 180], "illustr": [145, 148, 150, 161, 162, 165, 166, 186, 190, 191], "setup": [145, 151, 158, 166, 168], "earli": [145, 147, 158, 168], "loc": 145, "everywher": [145, 161], "give": [145, 151, 152, 190], "iterrow": 145, "_": [145, 153, 166, 187], "acj": [145, 180], "spj": [145, 180], "spdtoj": [145, 147, 180], "spmtoj": [145, 147, 180], "spxtoj": [145, 147, 180], "snj": [145, 180], "sndtoj": [145, 147, 180], "snmtoj": [145, 147, 180], "toward": [146, 168, 186], "manner": 146, "travers": 146, "featur": [146, 148, 150, 152, 154, 165, 166, 168, 186, 187], "tag_birth": 146, "tag_dead": 146, "is_junct": 146, "inlink": [146, 147], "outlink": [146, 147], "proxi": [146, 187], "arriv": [146, 151, 168], "expected_dur": 146, "steadi": [146, 151, 168], "expected_outflow": 146, "probabilist": 146, "diagnost": [146, 147, 187], "tag": [146, 150], "link_valu": 146, "subtract": [146, 153], "greatli": [146, 153], "matric": [146, 165], "preval": [146, 147, 150, 153, 154, 161, 165, 167, 175, 176, 186, 187, 188, 191], "infector": 146, "is_fract": 146, "_internal_v": 146, "diseas": [146, 153, 159, 165, 168, 169, 186, 187, 188, 190, 191], "transmiss": [146, 156, 186, 187, 188], "src_pop_avg": [146, 165, 180, 188], "tgt_pop_avg": [146, 165, 188], "source_pops": 146, "gen_cascad": 146, "Its": 146, "subdivid": 146, "inter": [146, 151, 154, 166], "par_list": 146, "programs_act": 146, "_vars_by_pop": 146, "_program_cach": 146, "run_model": 146, "post": [146, 150], "reorgan": 146, "update_junct": 146, "propag": [146, 150, 153, 154], "leav": [146, 151, 157, 164, 165, 168, 186, 189], "contribut": [146, 162, 165, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "infinit": [146, 186], "abort": 146, "tell": 146, "easi": [146, 147, 161, 186, 187], "trace": [146, 147, 158], "cyclic": [146, 187], "themselv": [146, 157, 161, 162, 165, 189], "whole": [146, 150, 161], "__getstate__": 146, "__setstate__": 146, "__deepcopy__": 146, "demo": [147, 148, 150, 151, 152], "discuss": [147, 150, 158, 161, 164, 165, 166, 167, 168, 186, 188, 189, 191], "focu": [147, 150, 161, 186, 187, 188, 191], "lt_inf": [147, 150, 180], "ds_inf": [147, 180], "smear": 147, "strain": [147, 190], "mdr_inf": [147, 180], "xdr": 147, "xdr_inf": [147, 180], "inc": [147, 166, 188], "relaps": 147, "immig": 147, "p_div": [147, 180], "n_div": [147, 180], "sn_inf": [147, 180], "lx_ntr": 147, "pd_ndiag": [147, 180], "pm_nd": 147, "ltt_inf": [147, 180], "lt_prev": [147, 150, 180], "ac_prev": [147, 150, 180], "dr": [147, 156], "dr_prev": [147, 180], "pm_ndiag": [147, 180], "px_ndiag": [147, 180], "sn": [147, 150], "nd_ndiag": [147, 180], "nm_ndiag": [147, 180], "nx_ndiag": [147, 180], "pd_ntre": 147, "pm_ntr": 147, "px_ntr": 147, "who": [147, 158, 166, 168, 187, 189, 191], "diagnosi": [147, 165, 166, 177, 187], "ac_diag_r": 147, "export_result": 147, "example1": 147, "1037": 147, "im_lat_div": [147, 180], "im_act_div": [147, 180], "monitor": [147, 161], "make_demo_scenario": 147, "scen_result": [147, 150], "example2": 147, "566": [147, 148], "577": 147, "684": 147, "question": [147, 153], "ran": 147, "example3": 147, "screenshot": [147, 165], "describ": [147, 148, 157, 158, 161, 166, 168, 189, 191], "example4": 147, "dump": [147, 158], "export5": 147, "hidden": [147, 150], "quit": [147, 150, 158, 161, 168], "df": [147, 153], "inc_prisoners_to_15": 147, "late": [147, 158, 168], "restrict": [147, 152, 162, 165, 170, 171, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185], "natur": [147, 150, 168, 187, 191], "recoveri": [147, 186, 187, 191], "840678": 147, "852600": 147, "608386": 147, "857900": 147, "36000": 147, "000000": [147, 153], "9000": 147, "207200": 147, "352800": 147, "680000": 147, "775900": 147, "044100": 147, "3598": 147, "009067": 147, "830137": 147, "145072": 147, "612643": 147, "944524": 147, "43212": 147, "161695": 147, "11053": 147, "800000": 147, "358": 147, "572375": 147, "824693": 147, "641336": 147, "000533": 147, "827254": 147, "152843": 147, "853087": 147, "080167": 147, "000067": 147, "357260": 147, "2001": [147, 150, 152], "818925": 147, "141017": 147, "617418": 147, "954147": 147, "49049": 147, "306398": 147, "13494": 147, "924602": 147, "628": 147, "981745": 147, "907551": 147, "767243": 147, "002471": 147, "331490": 147, "259608": 147, "000992": 147, "738444": 147, "095905": 147, "000309": 147, "4012": 147, "857000": 147, "807431": 147, "734081": 147, "622771": 147, "184132": 147, "53462": 147, "386307": 147, "16171": 147, "619035": 147, "820": 147, "729690": 147, "112786": 147, "888851": 147, "005615": 147, "307339": 147, "368140": 147, "002849": 147, "514098": 147, "111106": 147, "000702": 147, "4201": 147, "026805": 147, "2002": [147, 149, 152], "795936": 147, "179120": 147, "628390": 147, "185374": 147, "56732": 147, "528248": 147, "18943": 147, "495681": 147, "971": 147, "114360": 147, "724117": 147, "005611": 147, "009916": 147, "898043": 147, "478135": 147, "005572": 147, "215515": 147, "125701": 147, "001240": 147, "4377": 147, "593457": 147, "2540": 147, "hierarch": 147, "aci_idiv": [147, 180], "lti_idiv": [147, 180], "ltei_idiv": [147, 180], "lteti_idiv": [147, 180], "acdi_idiv": [147, 180], "2005": [147, 150], "2006": 147, "2007": 147, "2008": 147, "2009": 147, "2011": 147, "2012": 147, "2013": [147, 154], "2021": [147, 154, 191], "2022": [147, 154, 191], "2024": [147, 152, 154, 156], "2025": [147, 148, 150, 152, 154], "2026": [147, 148, 154], "2027": [147, 154], "2028": [147, 148, 154], "2029": 147, "2031": [147, 154], "2032": [147, 152], "2033": 147, "2034": 147, "8526": 147, "14507161": 147, "1410167": 147, "73408111": 147, "17911973": 147, "784438": 147, "64189761": 147, "772962": 147, "54615262": 147, "761479": 147, "55042216": 147, "750731": 147, "49264522": 147, "740718": 147, "56456972": 147, "731442": 147, "87432715": 147, "722866": 147, "7633955": 147, "714535": 147, "69231394": 147, "706264": 147, "60229092": 147, "697962": 147, "80047631": 147, "689550": 147, "44121886": 147, "680974": 147, "52486168": 147, "672305": 147, "08176119": 147, "663547": 147, "19223369": 147, "654710": 147, "37439578": 147, "645823": 147, "5782231": 147, "636891": 147, "72580864": 147, "628238": 147, "7878327": 147, "619867": 147, "04300878": 147, "611797": 147, "90817666": 147, "603984": 147, "22503826": 147, "596347": 147, "80069927": 147, "588791": 147, "07466194": 147, "581265": 147, "63061197": 147, "573816": 147, "53943644": 147, "566466": 147, "97372058": 147, "559242": 147, "86861922": 147, "552077": 147, "40164813": 147, "544976": 147, "97637218": 147, "537930": 147, "29818745": 147, "530928": 147, "57325812": 147, "524700": 147, "84701489": 147, "519147": 147, "03504136": 147, "514196": 147, "90384823": 147, "509786": 147, "22202476": 147, "505856": 147, "55902625": 147, "502355": 147, "00478344": 147, "499233": 147, "99299343": 147, "496450": 147, "96882895": 147, "493967": 147, "9893496": 147, "491751": 147, "30094992": 147, "489770": 147, "9217781": 147, "488000": 147, "26257496": 147, "486415": 147, "75571263": 147, "484996": 147, "51943209": 147, "483724": 147, "06126727": 147, "482582": 147, "01060729": 147, "481555": 147, "87854444": 147, "480632": 147, "84377206": 147, "479801": 147, "56208566": 147, "479051": 147, "99711401": 147, "478375": 147, "27009443": 147, "477763": 147, "52666032": 147, "477209": 147, "81878702": 147, "476708": 147, "000221": 147, "476252": 147, "63388695": 147, "475838": 147, "90992575": 147, "475462": 147, "57316065": 147, "475119": 147, "85892056": 147, "474807": 147, "43626738": 147, "474522": 147, "35778102": 147, "474262": 147, "01515033": 147, "474024": 147, "09990318": 147, "473806": 147, "56868458": 147, "473607": 147, "61255888": 147, "473425": 147, "62987168": 147, "pd_sad_div": [147, 180], "nd_sad_div": [147, 180], "pm_sad_div": [147, 180], "nm_sad_div": [147, 180], "px_sad_div": [147, 180], "nx_sad_div": [147, 180], "power": 147, "exploratori": 147, "secondari": [148, 168], "strategi": [148, 150, 153, 166], "au": [148, 161], "ipython": [148, 149, 150], "html": [148, 149, 150, 186], "css": [148, 150], "flex": [148, 150], "result1": 148, "365000": 148, "22568000": 148, "22282133": 148, "793333": 148, "108461100": 148, "7205000": 148, "1346000": 148, "951200": 148, "1414500": 148, "result2": 148, "2e8": 148, "5e8": 148, "2e7": 148, "3e7": 148, "result3": 148, "427": [148, 152], "579": 148, "733": 148, "task": [148, 150, 153, 154, 160, 161], "parsimoni": [148, 190], "unequ": 148, "2040": [148, 150], "xlim": [148, 156], "22m": 148, "25m": 148, "49m": 148, "prog_list": 148, "unaggreg": 148, "hosp": 148, "circumst": [149, 150, 151, 168, 187, 188], "testdir": [149, 153], "parent_dir": 149, "unit_demo_framework": 149, "unit_demo_databook": 149, "unit_demo_progbook": 149, "00712": [149, 187], "0156": 149, "recrat": [149, 154, 179], "infdeath": [149, 154, 179], "weekli": 149, "susdeath": [149, 154, 179], "daili": [149, 162], "foi": [149, 152, 156, 165, 179, 186, 187, 188], "dead": [149, 161], "adult": [149, 154, 165, 166, 168, 186, 187, 188, 191], "nativ": [149, 162, 166], "risk": [149, 161, 186, 187], "harm": [149, 161], "annual_coverag": 149, "timestep_coverag": 149, "29166": 149, "1142": 149, "614": [149, 152, 153], "4x460": [149, 152, 153], "ax": [149, 150, 152, 153, 156], "collaps": 150, "foundat": 150, "suit": 150, "frontend": 150, "assist": 150, "lowest": 150, "my": 150, "wrong": [150, 165, 187], "big": [150, 187], "preview": 150, "par_result": 150, "scen_par": 150, "scen_pop": 150, "1999": 150, "2050": 150, "rcparam": 150, "figsiz": 150, "429": [150, 152], "imag": [150, 186], "undesir": [150, 168], "consequ": [150, 158], "difficult": [150, 156, 157, 165, 189], "plotresult": 150, "innerplottrend": 150, "_plottrend": 150, "isol": [150, 158, 166, 191], "evid": [150, 161], "plot_daru": 150, "plai": 150, "highli": 150, "compos": 150, "mandatori": 150, "few": [150, 153, 154, 165, 168, 186, 187], "uninfect": [150, 168], "387": 150, "dimension": 150, "obvious": [150, 158], "spd_prev": [150, 180], "344": 150, "certainli": [150, 151], "352": 150, "rememb": [150, 165], "source_label": 150, "dest_label": 150, "par_label": 150, "dimens": [150, 158], "output_nam": 150, "healthi": 150, "good": [150, 158, 168, 187, 191], "underestim": 150, "carefulli": [150, 162, 188], "v_rate": 150, "babi": 150, "unvaccin": [150, 158, 168], "tick": 150, "marker": 150, "unusu": 150, "hatch": 150, "font": 150, "set_figwidth": 150, "set_figheight": 150, "set_titl": 150, "infant": [150, 191], "set_ylabel": 150, "set_xtick": 150, "frequenc": 150, "axvlin": 150, "linestyl": [150, 156], "highlight": 150, "get_xaxis_transform": 150, "put": [150, 153, 161, 186], "annot": 150, "encapsul": 150, "suggest": [150, 151, 187], "onlin": 150, "snippet": 150, "persist": 150, "aplt": 150, "bar_width": 150, "line_width": 150, "marker_edge_width": 150, "dpi": 150, "plot_level": 150, "And": [150, 151, 153, 168, 188], "Of": [150, 151, 153, 188, 191], "amd": 150, "anticip": 150, "savefig": 150, "save_fig": 150, "baseline_al": 150, "baseline_vac": 150, "scenario_al": 150, "scenario_vac": 150, "scenario_vac_legend": 150, "mention": [150, 161, 162, 166, 168], "set_label": 150, "newfold": 150, "examplebaseline_al": 150, "examplebaseline_vac": 150, "examplescenario_al": 150, "examplescenario_vac": 150, "examplelegend": 150, "lastli": [150, 186], "series_": 150, "series_a": 150, "series_b": 150, "series_c": 150, "series_d": 150, "series_d_legend": 150, "ONE": 150, "plot_legend": 150, "advis": 150, "try": [150, 153, 154, 155, 157, 161, 187], "much": [150, 153, 154, 158, 162, 165, 168, 187, 188, 191], "plottnig": 150, "distinguish": 150, "adjac": 150, "understand": [150, 187], "studi": 150, "achiev": [150, 151, 152, 161, 162, 166, 187, 189, 190, 191], "bind": 150, "decad": 150, "t_label": 150, "20292080": 150, "15377111": 150, "2045": 150, "3445675": 150, "3496115": 150, "3023573": 150, "00562325": 150, "2664574": 150, "44619388": 150, "2463866": 150, "51327494": 150, "2396834": 150, "62773168": 150, "2373145": 150, "28211583": 150, "finish": [150, 186], "extend": [150, 154, 161], "middl": [150, 158, 188], "plotbar": 150, "swap": 150, "breakdown": [150, 191], "awar": [150, 162, 166, 187], "thumb": [150, 153], "spine": 150, "sign": [150, 156], "stream": [150, 158], "scheme": 150, "vice": 150, "versa": 150, "xlabel": [150, 151, 156], "set_xticklabel": 150, "reorder_legend": 150, "reorder": 150, "relabel_legend": 150, "curv": [150, 166], "inspect": [150, 151, 153, 158, 162, 187, 189], "90k": 150, "200000": [150, 157], "confirm": [150, 151, 156, 188, 191], "million": 150, "535": 150, "cumbersom": [150, 191], "1x2": 150, "2x2": 150, "especi": [150, 187], "arrang": [150, 166], "break": [150, 168], "statu": [150, 158, 168], "green": 150, "purpl": 150, "bit": [150, 157], "getcolormappingsbysmear": 150, "cat_list": 150, "005b9a": 150, "0191c8": 150, "lted": 150, "ltld": 150, "orang": [150, 168], "ltr": 150, "setcolormappingsbysmear": 150, "afterward": [150, 153, 166], "Will": 150, "converg": 151, "accur": [151, 153, 159, 167, 187], "discret": 151, "agent": 151, "rightarrow": 151, "c_1": 151, "c_2": 151, "snapshot": 151, "realiti": [151, 168, 187, 191], "obei": 151, "qualit": [151, 191], "symmetr": 151, "dur1": 151, "dur2": 151, "n_agents_per_year": 151, "n_year": 151, "poisson": 151, "arrival_tim": 151, "ravel": 151, "randn": [151, 167], "get_ag": 151, "agents_in_c1": 151, "agents_in_c2": 151, "probe": 151, "ylabel": [151, 156], "entiti": [151, 165], "realist": [151, 161], "linearli": [151, 162, 166, 190], "nobodi": [151, 168, 191], "markov": [151, 159], "proper": [151, 153], "inde": [151, 153, 161, 188, 191], "euler": [151, 156, 162], "solver": 151, "rh": [151, 156], "tspan": 151, "reshap": 151, "dx": [151, 153, 170, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185], "frame": [151, 166, 191], "departur": 151, "p_1": 151, "p_2": 151, "dc_1": 151, "p_1c_1": 151, "dc_c": 151, "p_2c_2": 151, "fashion": 151, "formul": [151, 162], "lambda": [151, 153, 167], "reciproc": 151, "cdf": 151, "4f": [151, 188], "4866": 151, "4634": 151, "clearli": [151, 158, 188], "bernoulli": 151, "success": [151, 162, 187, 191], "0009": 151, "analyt": 151, "c_1p_1": 151, "400": [151, 189], "200": [151, 153, 157, 166, 168, 189], "x_k": 151, "x_0p": 151, "x_0": 151, "0800": 151, "1535": 151, "substitut": [151, 158, 168], "y1": 151, "9216": 151, "somewhat": [151, 154, 165], "exhibit": 151, "probabili": 151, "tradit": [151, 156], "0964": 151, "2402": 151, "4923": 151, "fine": [151, 158, 165, 187], "nonlinear": [151, 157, 166], "0833": 151, "1667": 151, "y2": 151, "0033": 151, "closer": 151, "dur": [151, 168], "expans": 151, "approx": 151, "cdot": 151, "discard": 151, "validli": [151, 153], "why": [151, 158, 187, 189], "poorli": 151, "anyon": [151, 166, 168], "necessarili": [151, 161], "significantli": [151, 162, 168, 187], "overestim": 151, "impli": [151, 168], "0000": [151, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 188], "motiv": [151, 158, 189], "204": 151, "presenc": [151, 153], "said": 151, "neither": 151, "nor": 151, "equilibrium": [151, 168, 187], "chosen": 151, "word": 151, "neq": 151, "uniformli": [151, 158, 168, 189], "16th": 151, "ultim": 151, "setlevel": [151, 160], "test_dt": 151, "plot_pop": 151, "3f": 151, "rapid": [151, 168], "male": [151, 153, 187], "01": [151, 156, 161], "observ": [151, 167], "hiv_dyn": 151, "cervic": [151, 177], "cancer": [151, 177], "gaug": 151, "cervicalcanc": 151, "women": [151, 165], "scr": [151, 153, 170, 175, 176, 185], "slower": [151, 162], "job": 151, "forecast": 152, "200e3": 152, "150e3": 152, "604": 152, "begin": [152, 153, 156, 186, 191], "ambigu": [152, 166], "264e3": 152, "res_2018": 152, "434": 152, "res_smooth": 152, "581": 152, "heavili": 152, "interp": 152, "res_manually_smooth": 152, "0x7f372f64fd80": 152, "_sampl": [152, 153, 154], "315000": 152, "313500": 152, "312000": 152, "309000": 152, "307500": 152, "306000": 152, "s_parset": 152, "res_manu": 152, "623": 152, "previous": [152, 154, 157, 161, 162, 168, 188, 191], "003": [152, 180], "002": 152, "650": 152, "reactiv": 152, "446": 152, "onward": [152, 161], "sub": [153, 154, 186, 191], "rural": 153, "214": 153, "stat": 153, "test_uncertainty_framework": 153, "test_uncertainty_databook": 153, "test_uncertainty_high_progbook": 153, "low_uncertainty_progset": 153, "test_uncertainty_low_progbook": 153, "high_uncertainty_progset": 153, "default_budget": 153, "diag": [153, 166, 170, 171, 173, 174, 175, 181, 182, 183, 184, 185], "fail_rat": [153, 173, 174, 175, 176, 181, 182], "0188": 153, "all_screen": [153, 170, 175, 176, 185], "0x7f7a5b2090d0": 153, "m_rural": 153, "0183": 153, "epidemiolog": [153, 187], "uncertinti": 153, "mathcal": 153, "sampled_parset": 153, "2f": [153, 189], "249": 153, "sampled_r": 153, "0181": 153, "sampled_progset": 153, "0250": 153, "0240": 153, "0241": 153, "badiniti": 153, "reliabl": [153, 187], "f_rural": 153, "235128": 153, "all_peopl": [153, 170, 173, 174, 175, 176, 181, 182, 183, 184, 185], "1101": 153, "undx": [153, 166, 170, 173, 174, 175, 176, 181, 182, 183, 184, 185], "630": 153, "234": 153, "con": [153, 175, 176, 187], "470": 153, "76487173": 153, "successfulli": [153, 168, 189, 191], "resampl": 153, "unsatisfactori": 153, "0168": 153, "0x7f7a58652310": 153, "get_equivalent_": 153, "248257": 153, "0x7f7a5b0814d0": 153, "248282": 153, "parset_nam": 153, "m_urban": 153, "f_urban": 153, "uuid": 153, "1e96dab9": 153, "54d5": 153, "4ead": 153, "ac34": 153, "0f20dc426d40": 153, "68it": 153, "loos": 153, "03": [153, 180, 182], "26it": 153, "0178": 153, "sequenc": [153, 168, 186], "list_of_result": 153, "ahead": [153, 156, 157, 168, 186, 188, 189], "dash": [153, 156, 166, 168], "median": [153, 187], "regener": 153, "collis": 153, "rest": [153, 162, 186], "relabel": 153, "unnam": 153, "hadn": 153, "yld": 153, "summary_statist": 153, "statist": 153, "3362": 153, "999052": 153, "689865": 153, "229674": 153, "3383": 153, "501089": 153, "3348": 153, "031225": 153, "q1": 153, "3357": 153, "640676": 153, "q3": 153, "3367": 153, "016381": 153, "4175": 153, "364625": 153, "4174": 153, "657501": 153, "4173": 153, "735033": 153, "4217": 153, "624374": 153, "4132": 153, "233303": 153, "4166": 153, "075537": 153, "4185": 153, "514899": 153, "3396": 153, "464712": 153, "3397": 153, "135096": 153, "719692": 153, "3419": 153, "841094": 153, "3371": 153, "550566": 153, "3391": 153, "851250": 153, "3404": 153, "597237": 153, "4968": 153, "772456": 153, "806673": 153, "4966": 153, "767523": 153, "5016": 153, "001787": 153, "4911": 153, "368454": 153, "4954": 153, "877096": 153, "4983": 153, "216754": 153, "result_default_spend": 153, "result_doubled_spend": 153, "0237": 153, "0238": 153, "35it": 153, "44it": 153, "aid": 153, "undiagnos": [153, 158, 165, 166, 191], "probabilit": 153, "section": [153, 166], "asymmetr": 153, "implic": 153, "cater": [153, 154, 157, 158], "quantifi": [153, 166], "get_differ": 153, "d1": [153, 154], "d2": [153, 154], "eas": 153, "inherit": 153, "cascade_ensembl": 153, "introduct": 153, "all_dx": [153, 170, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185], "all_tx": [153, 170, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185], "all_con": [153, 175, 176], "set_size_inch": 153, "ram": 153, "magnitud": 153, "50x": 153, "20x": 153, "situat": [153, 158, 162, 166, 187, 191], "lead": [153, 157, 158, 166, 187, 188, 189, 191], "store_minim": 153, "0243": 153, "0232": 153, "0259": 153, "0229": 153, "0230": 153, "0248": 153, "0245": 153, "0228": 153, "0244": 153, "0231": 153, "0236": 153, "0246": 153, "0254": 153, "0234": 153, "0233": 153, "0226": 153, "0257": 153, "0227": [153, 188], "0262": 153, "0253": 153, "0256": 153, "0260": 153, "0235": 153, "0242": 153, "0247": 153, "0239": 153, "0251": 153, "0255": 153, "0249": 153, "peak": 153, "seamlessli": 153, "04": 153, "82it": 153, "paralliz": 153, "test_ensemble_parallel": 153, "pairplot": 153, "1543": 153, "userwarn": 153, "subplot": 153, "scatter_matrix": 153, "kde": 153, "quiet": [154, 187], "timedependentvalueentri": 154, "line2d": 154, "0x7fa932eebe10": 154, "ts2": 154, "yourself": 154, "0x7fa930865a50": 154, "human": [154, 165], "mosquito": [154, 162, 165, 187], "populaton": 154, "contant": 154, "sir_framework": 154, "2041": 154, "sir_databook_1": 154, "ch_all": [154, 161, 171, 178, 179], "ch_prev": [154, 179], "transpercontact": [154, 179], "contact": [154, 156, 187, 188], "0x7fa930709550": 154, "pop_0": 154, "0x7fa933668040": 154, "cl": 154, "proven": 154, "sir_databook_2": 154, "3000": [154, 166], "sir_databook_3": 154, "particularli": [154, 158, 161, 162, 165, 166, 168, 186], "conduct": [154, 187], "countri": [154, 166, 187, 189, 191], "f2": 154, "sir_framework_2": 154, "fragil": 154, "prone": 154, "sir_databook_4": 154, "prefer": [154, 157, 158, 161, 162, 166, 187], "past": [154, 187, 191], "tidi": 154, "f3": 154, "sir_framework_3": 154, "d3": 154, "surplu": 154, "delet": 154, "del": 154, "sir_databook_5": 154, "sir_databook_6": 154, "sir_databook_7": 154, "sir_databook_8": 154, "sir_databook_9": 154, "download": [154, 156], "scirisspreadsheet": 154, "add_worksheet": 154, "sir_databook_10": 154, "compil": [155, 158], "jupyt": 155, "explor": 155, "solve_ivp": 156, "toolbox": [156, 186], "reproduc": 156, "characteris": [156, 191], "beta": 156, "di": [156, 168], "gamma": 156, "n_c": 156, "theta": [156, 162], "tau_i": 156, "\u03b8": 156, "08": 156, "\u03c4_i": 156, "i_0": 156, "new_inf": 156, "y0": 156, "sol": 156, "t_eval": 156, "gridcolor": 156, "linewidth": 156, "ylim": 156, "1100": 156, "free": 156, "unicod": 156, "symbol": 156, "charact": 156, "straightforward": [156, 157, 166, 189], "unsign": 156, "u": [156, 189, 190], "sir_analytic_framework": 156, "0296": 156, "640x480": 156, "parametris": 156, "shape": [156, 166], "smalelr": 156, "00401": 156, "akin": 157, "clinic": 157, "offlin": 157, "attend": 157, "500": [157, 168], "override_framework_2": 157, "override_databook_2": 157, "override_progbook_2": 157, "clinic_coverag": 157, "txrate": 157, "0341": 157, "kept": 157, "override_framework_1": 157, "override_databook_1": 157, "override_progbook_1": 157, "schemat": [157, 164, 186, 191], "arbitrary_cost_cov_fcn": 157, "promotetoarrai": 157, "n_clinic": 157, "cost_per_clin": 157, "frac_coverag": 157, "floor": [157, 179], "null_get_prop_cov": 157, "hack": 157, "prognam": 157, "methodtyp": 157, "0147": 157, "gone": 157, "architectur": 157, "overcom": 158, "strive": 158, "acquir": [158, 166, 168], "nvac": 158, "ltx": 158, "infer": [158, 165, 189], "recogn": 158, "algebra": 158, "linalg": 158, "detect": 158, "2x1": 158, "2x3": 158, "3x1": 158, "rank": 158, "matrix_rank": 158, "stricter": 158, "norm": [158, 189], "pursu": 158, "overspecif": 158, "choos": [158, 159, 186], "manifest": [158, 159], "squar": [158, 165, 167], "lstsq": 158, "censu": 158, "discrep": [158, 168], "1990": 158, "insidi": 158, "1995": 158, "neighbour": 158, "easier": [158, 164, 165], "engin": [159, 169], "flexibli": 159, "analyz": [159, 162], "fundabl": 159, "experienc": 159, "encod": 159, "reinfect": 159, "mutual": 159, "empir": 159, "movement": [159, 166, 168, 186, 188], "sharp": [159, 168], "jump": 159, "elimin": 159, "global": 160, "anywher": 160, "getlogg": 160, "wors": 160, "start_log": 160, "logfil": 160, "txt": 160, "traceback": 160, "unhandl": 160, "stop_log": 160, "logfile2": 160, "extens": 161, "philosophi": 161, "underpin": [161, 186], "api": 161, "unoptim": 161, "make_optim": 161, "compon": [161, 168, 189, 191], "outset": [161, 186], "delai": 161, "fall": [161, 166], "profil": 161, "slope": 161, "intercept": 161, "mx": 161, "pairedlinearspendingadjust": 161, "exponentialspendingadjust": 161, "incomplet": 161, "timevari": 161, "starttimeadjust": 161, "untest": 161, "meet": 161, "scaleup": 161, "mayb": 161, "explictli": [161, 168], "adjustable_valu": 161, "declar": [161, 162, 165, 188], "_asd_object": 161, "becam": 161, "envisag": 161, "compact": 161, "tailor": 161, "met": [161, 162, 168], "minimizemeasur": 161, "maximizemeasur": 161, "atmostmeasur": 161, "atleastmeasur": 161, "728": 161, "outright": 161, "redesign": 161, "wast": [161, 165], "redistribut": 161, "dy": 161, "test_optim": 161, "criterion": 161, "parallel_optim": 161, "orig_alloc": 161, "classif": 162, "math": 162, "function_pars": 162, "driven": [162, 168], "signific": [162, 168], "fast": 162, "fastest": 162, "implicit": 162, "problemat": [162, 168], "inconveni": [162, 165], "lifespan": 162, "malaria": [162, 165], "suffer": 162, "precis": [162, 187], "address": [162, 168, 187], "00274": 162, "pollut": [162, 165], "encompass": 162, "framework_derivative_test": 162, "cautiou": 162, "m_prev": 162, "dm_prev": 162, "spline": 162, "contextu": 163, "cookbook": 163, "stochast": 163, "offer": 164, "varieti": [164, 191], "residualjunct": 164, "compartment_3": 164, "born": 165, "water": 165, "nutrit": 165, "clarifi": 165, "oppos": 165, "lake": 165, "coinfect": [165, 168], "matern": 165, "child": [165, 187, 188, 191], "health": [165, 169], "grow": 165, "stunt": 165, "speci": 165, "canon": 165, "combined_framework": 165, "scratch": 165, "Such": 165, "constitut": 165, "src_pop_sum": [165, 188], "tgt_pop_sum": [165, 188], "sum_foi": 165, "udt": [165, 177], "udt_ctc": 165, "sir_ctc": 165, "matrici": 165, "a7": 165, "b7": 165, "atuomat": 165, "sir_0": 165, "sir_5": 165, "sir_15": 165, "udt_0": 165, "udt_15": 165, "grei": [165, 186], "aging_sir": 165, "aging_udt": 165, "recal": 165, "utc_ctc": 165, "nonexist": 165, "plhiv": [165, 168, 186], "pregnant": 165, "anaemia": 165, "insecticid": 165, "sprai": 165, "exception": 165, "beforehand": 165, "methodolog": 165, "workaround": 165, "invest": [166, 191], "projectani": 166, "hospit": 166, "bed": 166, "drug": [166, 187, 190, 191], "demand": 166, "depict": 166, "broad": 166, "dose": 166, "purchas": 166, "quarter": 166, "focus": 166, "alpha": 166, "2x": 166, "asymptot": 166, "infin": 166, "consider": [166, 187, 191], "tradition": 166, "fairli": [166, 186, 189], "tempt": 166, "think": [166, 186, 188], "confus": [166, 187], "terminologi": 166, "formal": 166, "patient": 166, "subtl": [166, 168, 187], "exponenti": [166, 168], "randomli": [166, 167, 168], "jointli": 166, "diagram": [166, 186, 187], "preferenti": 166, "largest": [166, 168], "comma": [166, 186, 189], "dispar": 166, "someon": [166, 168, 191], "whom": [166, 189], "asymptomat": [166, 168], "everyon": [166, 168, 186, 191], "twice": [166, 188], "067": 166, "066": 166, "chanc": [166, 191], "deliv": 166, "267": 166, "source_pop": 166, "dest_pop": 166, "incarcer": [166, 186, 188], "gaussian": 167, "rand": 167, "mu": 167, "framework_stochastic_test": 167, "databook_sir_dynam": 167, "truncat": 167, "epidem": [167, 168, 169, 187, 188, 191], "erad": 167, "interdepend": 167, "walk": [167, 192], "nonlinearli": 167, "grossli": 168, "mass": 168, "campaign": 168, "wear": 168, "obviou": 168, "lose": [168, 188], "rapidli": 168, "slowli": 168, "dramat": 168, "schedul": 168, "inappropri": 168, "leverag": 168, "coupl": 168, "goveren": 168, "expir": 168, "latenc": 168, "die": [168, 191], "efficaci": [168, 190, 191], "unrel": 168, "incub": 168, "harmless": 168, "symptom": 168, "mimick": 168, "typhoid": 168, "ones": 168, "coexist": 168, "join": 168, "d_rate": 168, "softwar": 168, "state_1": 168, "state_2": 168, "summar": 168, "_except_": 168, "dxr": 168, "inelig": 168, "vacdxr": 168, "eligibl": 168, "downscal": 168, "seem": 168, "counterintuit": 168, "prerequisit": 168, "shorter": 168, "acceler": 168, "reciev": [168, 189], "tutori": [169, 186, 188, 189, 190, 191], "vital": [170, 171, 173, 174, 175, 176, 181, 182, 185], "dead_cc": 170, "birth_rat": [170, 171, 174, 176, 182], "num_acq": [170, 171, 174, 176, 182], "acq_rat": [170, 171, 174, 176, 178, 182], "num_screen": [170, 171, 175, 176, 178, 185], "screen_yield": [170, 171, 176], "pos_screen": [170, 171, 176], "num_diag": [170, 171, 173, 175, 176, 178, 183, 184, 185], "num_initi": [170, 171, 173, 174, 175, 176, 181, 182, 183, 184, 185], "015": [170, 171, 174, 176, 182], "death_cc": 170, "unsc_uncomp": 171, "unsc_vd": 171, "sc_uncomp": 171, "sc_vd": 171, "dx_uncomp": 171, "dx_vd": 171, "txs_uncomp": 171, "txs_vd": 171, "txf_uncomp": 171, "txf_vd": 171, "dead_dm": 171, "dead_oth": [171, 174, 176, 182], "ch_screen": 171, "ch_diag": 171, "ch_tx": [171, 178], "ch_succ": [171, 178], "ch_propscreen": 171, "ch_propdiag": 171, "ch_proptx": [171, 178], "ch_propsucc": [171, 178], "15828": 171, "prog_rat": 171, "treat_fail": [171, 178], "treat_suc": [171, 178], "death_vd": 171, "025": [171, 176, 191], "death_oth": [171, 174, 176, 182], "num_loss": [172, 183, 184, 185], "all_ever_link": [173, 174], "all_curr_link": [173, 174, 181, 182], "all_v": [173, 174, 181, 182], "link_tim": [173, 174], "supp_rat": [173, 174, 182], "dead_hiv": 174, "num_test": [174, 181, 182], "test_yield": [174, 181, 182], "pos_test": [174, 181, 182], "death_hiv": 174, "053": 174, "death_hivtx": 174, "0258534": 174, "death_hivv": 174, "01219": 174, "cont_rat": [175, 176], "dead_hyp": 176, "screen_target": 176, "screen_cov": 176, "death_hyp": 176, "diabet": 177, "hypertens": 177, "servic": 177, "usdt": 177, "untx": 178, "txf": 178, "ch_awar": 178, "ch_link": 178, "ch_propawar": 178, "ch_proplink": 178, "rec": [179, 186, 188, 189, 191], "ch_infrec": 179, "ch_infsu": 179, "ch_newinf": 179, "ch_propinfrec": 179, "ch_propinfsu": 179, "ch_propnewinf": 179, "0008": 179, "016": 179, "008": 179, "ltx_inf": 180, "lt_undiag": 180, "lte_inf": 180, "ltl_inf": 180, "sndk_inf": 180, "snmk_inf": 180, "snxk_inf": 180, "known_cascad": 180, "spd_inf": 180, "spm_inf": 180, "spx_inf": 180, "snd_inf": 180, "snm_inf": 180, "snx_inf": 180, "dr_inf": 180, "ac_cascad": 180, "spd_infx": 180, "spm_infx": 180, "spx_infx": 180, "snd_infx": 180, "snm_infx": 180, "snx_infx": 180, "spd_prevx": 180, "spm_prevx": 180, "spx_prevx": 180, "snd_prevx": 180, "snm_prevx": 180, "snx_prevx": 180, "spm_prev": 180, "spx_prev": 180, "snd_prev": 180, "snm_prev": 180, "snx_prev": 180, "sp_prev": 180, "sn_prev": 180, "ds_prev": 180, "mdr_prev": 180, "xdr_prev": 180, "num_undiag_d": 180, "num_undiag_mdr": 180, "num_undiag_xdr": 180, "num_diag_d": 180, "num_diag_mdr": 180, "num_diag_xdr": 180, "num_treat_d": 180, "num_treat_mdr": 180, "num_treat_xdr": 180, "treat_cascad": 180, "diag_suff": 180, "treat_suff": 180, "dti_idiv": 180, "vaci_idiv": 180, "und_idiv": 180, "pm_div": 180, "px_div": 180, "nm_div": 180, "nx_div": 180, "inf_su": 180, "vac_fac": 180, "lat_fac": 180, "sn_fac": 180, "mdr_fac": 180, "xdr_fac": 180, "ltex_idiv": 180, "ltlx_idiv": 180, "spdu_idiv": 180, "spdd_idiv": 180, "spdt_idiv": 180, "spmu_idiv": 180, "spmd_idiv": 180, "spmt_idiv": 180, "spxu_idiv": 180, "spxd_idiv": 180, "spxt_idiv": 180, "sndu_idiv": 180, "sndd_idiv": 180, "sndt_idiv": 180, "snmu_idiv": 180, "snmd_idiv": 180, "snmt_idiv": 180, "snxu_idiv": 180, "susx_idiv": 180, "i_rat": 180, "l_ntreat_m": 180, "l_ntreat_ct": 180, "l_durat": 180, "180": 180, "lt_fail_div": 180, "07": 180, "lt_succ_div": 180, "lx_ntreat": 180, "ll_ntreat": 180, "let_fail_div": 180, "let_succ_div": 180, "llt_fail_div": 180, "llt_succ_div": 180, "e_dep": 180, "l_dep": 180, "p_branch": 180, "177": 180, "foi_p": 180, "foi_n": 180, "w_ctc": 180, "im_late_div": 180, "im_latl_div": 180, "im_sus_div": 180, "d_ntreat": 180, "pd_ntreat": 180, "nd_ntreat": 180, "d_durat": 180, "d_ltfu_div": 180, "d_fail_div": 180, "d_esc_div": 180, "d_succ_div": 180, "d_sad_div": 180, "dt_dur": 180, "pd_ltfu_div": 180, "pd_fail_div": 180, "pd_esc_div": 180, "pd_succ_div": 180, "nd_ltfu_div": 180, "nd_fail_div": 180, "nd_esc_div": 180, "nd_succ_div": 180, "m_ntreat": 180, "pm_ntreat": 180, "nm_ntreat": 180, "m_durat": 180, "540": 180, "m_ltfu_div": 180, "m_fail_div": 180, "m_esc_div": 180, "m_succ_div": 180, "634": 180, "m_sad_div": 180, "mt_dur": 180, "pm_ltfu_div": 180, "pm_fail_div": 180, "pm_esc_div": 180, "pm_succ_div": 180, "nm_ltfu_div": 180, "nm_fail_div": 180, "nm_esc_div": 180, "nm_succ_div": 180, "x_ntreat": 180, "px_ntreat": 180, "nx_ntreat": 180, "x_durat": 180, "720": 180, "x_ltfu_div": 180, "x_fail_div": 180, "x_succ_div": 180, "x_sad_div": 180, "xt_dur": 180, "px_ltfu_div": 180, "px_fail_div": 180, "px_succ_div": 180, "nx_ltfu_div": 180, "nx_fail_div": 180, "nx_succ_div": 180, "disutility_weight": 180, "yld_rate": 180, "life_expect": 180, "yll_rate": 180, "daly_r": 180, "succ_rat": 181, "dead_tb": 182, "num_vac": 182, "vac_rat": 182, "death_tb": 182, "death_tbtx": 182, "inf_death": 184, "tx_death": 184, "instal": 186, "epidemiologi": 186, "tool": [186, 187], "web": [186, 187], "cohort": 186, "timefram": 186, "stratif": 186, "inexhaust": 186, "emigr": 186, "prohibit": 186, "background": [186, 191], "correpond": 186, "invari": 186, "apart": 186, "harder": 186, "m_rate": [186, 187], "stock": [186, 189], "infx": 186, "placehold": 186, "header": 186, "asset": [186, 187, 188, 189, 190, 191], "t1_framework_1": 186, "workspac": 186, "underdetermin": [186, 189], "trickier": 186, "t1_temp": 186, "lock": 186, "h4": 186, "h5": 186, "subtabl": 186, "t1_databook_1": 186, "00714": 186, "0x7f48542811d0": 186, "calibration_spr": 186, "654789": 186, "656723": 186, "0x7f4854280b90": 186, "00818": 186, "http": 186, "master": 186, "tip": 186, "simplif": 187, "real": [187, 191], "world": [187, 191], "t2_framework_1": 187, "t2_databook_1": 187, "00799": 187, "overdetermin": [187, 189], "bia": 187, "methodologi": 187, "hint": [187, 188, 190], "decis": 187, "granular": 187, "pro": 187, "review": 187, "season": 187, "rainfal": 187, "offici": 187, "nevertheless": 187, "systemat": 187, "degre": 187, "mixtur": 187, "websit": 187, "p2": 187, "r2": 187, "00813": 187, "overshot": 187, "configur": [187, 191], "p3": 187, "3187028408050538": 187, "r3": 187, "auto": 187, "00739": 187, "coars": 187, "grain": 187, "resist": [187, 190], "minor": 187, "inci": 187, "strong": 187, "m_num": 187, "cal_par": 187, "r4": 187, "danger": 187, "rich": 187, "superfici": 187, "trend": 187, "far": [187, 191], "survei": 187, "inject": 187, "saniti": 187, "consult": 187, "expert": 187, "explain": 187, "overfit": 187, "variat": 187, "fluctat": 187, "priorit": 187, "inaccur": 187, "Be": 187, "unreli": 187, "adequ": 187, "prev": 187, "00001": 187, "immun": 187, "defund": 187, "pathwai": [187, 188, 191], "mother": 187, "investig": 187, "3758668279647828": 187, "5089043301004494": 187, "5000438697636127": 187, "11542172667602131": 187, "12487450562522262": 187, "depth": 187, "unrealist": 187, "burn": 187, "strang": 187, "settl": 187, "earlier": [187, 191], "t3_framework_1": 188, "t3_databook_1": 188, "t3_temp": 188, "c5": 188, "t3_databook_2": 188, "0105": 188, "inc_adults_to_pri": 188, "didn": 188, "t3_framework_2": 188, "0134": 188, "v2": 188, "assert": 188, "1e": 188, "0542": 188, "0667": 188, "0605": 188, "wash": 188, "t3_temp_2": 188, "undefin": 188, "ordinarili": 188, "t3_framework_3": 188, "t3_databook_3": 188, "0131": 188, "t3_databook_4": 188, "fed": 188, "t3_framework_4": 188, "0151": 188, "verifi": [188, 191], "adult_weight": 188, "pris_weight": 188, "avg": 188, "1475": 188, "0557": 188, "complementari": 188, "tgt_pop_": 188, "src_pop_": 188, "direction": 188, "client": 188, "t3": [189, 192], "conclud": 189, "600": 189, "300": 189, "ever_inf": 189, "prop_resolv": 189, "t4_framework_1": 189, "t4_databook_1": 189, "0157": 189, "t4_framework_2": 189, "t4_databook_2": 189, "0152": 189, "t4_framework_3": 189, "t4_databook_3": 189, "0144": 189, "conflict": 189, "unfortun": 189, "reparametr": 190, "prop_norm": 190, "prop_dr": 190, "t5_framework1": 190, "00393": 190, "inf_dr": 190, "t6_framework_1": 191, "t6_databook_1": 191, "00604": 191, "interchang": 191, "temp": 191, "price": 191, "250": 191, "pset": 191, "t6_progbook_1": 191, "res_program": 191, "00483": 191, "00711": 191, "fewer": 191, "t6_progbook_2": 191, "res_programs_1": 191, "reconciled_pset": 191, "00586": 191, "01210": 191, "01397": 191, "001867": 191, "01000": 191, "002100": 191, "005102": 191, "004898": 191, "0004000": 191, "004702": 191, "4896": 191, "001322": 191, "0009223": 191, "009600": 191, "0006250": 191, "0002250": 191, "0000000000000000000000000000000007704": 191, "0001108": 191, "00002922": 191, "003265": 191, "000007506": 191, "0001384": 191, "00003265": 191, "000001902": 191, "15625": 191, "0000004789": 191, "000007935": 191, "un": 191, "reconciled_cost": 191, "res_programs_2": 191, "00606": 191, "sole": 191, "t4": 192, "t5": 192, "t6": 192}, "objects": {"": [[0, 0, 0, "-", "atomica"]], "atomica": [[1, 0, 0, "-", "calibration"], [3, 0, 0, "-", "cascade"], [16, 0, 0, "-", "data"], [19, 0, 0, "-", "demos"], [22, 0, 0, "-", "excel"], [35, 0, 0, "-", "framework"], [39, 0, 0, "-", "function_parser"], [44, 0, 0, "-", "migration"], [52, 0, 0, "-", "model"], [69, 0, 0, "-", "optimization"], [94, 0, 0, "-", "parameters"], [97, 0, 0, "-", "plotting"], [106, 0, 0, "-", "programs"], [111, 0, 0, "-", "project"], [114, 0, 0, "-", "reconciliation"], [116, 0, 0, "-", "results"], [120, 0, 0, "-", "scenarios"], [126, 0, 0, "-", "system"], [130, 0, 0, "-", "utils"], [143, 0, 0, "-", "version"]], "atomica.calibration": [[2, 1, 1, "", "calibrate"]], "atomica.cascade": [[4, 2, 1, "", "CascadeEnsemble"], [5, 6, 1, "", "InvalidCascade"], [6, 1, 1, "", "cascade_summary"], [7, 1, 1, "", "get_cascade_data"], [8, 1, 1, "", "get_cascade_vals"], [9, 1, 1, "", "plot_cascade"], [10, 1, 1, "", "plot_multi_cascade"], [11, 1, 1, "", "plot_single_cascade"], [12, 1, 1, "", "plot_single_cascade_series"], [13, 1, 1, "", "sanitize_cascade"], [14, 1, 1, "", "sanitize_pops"], [15, 1, 1, "", "validate_cascade"]], "atomica.cascade.CascadeEnsemble": [[4, 3, 1, "", "add"], [4, 4, 1, "", "baseline"], [4, 3, 1, "", "boxplot"], [4, 3, 1, "", "get_vals"], [4, 4, 1, "", "mapping_function"], [4, 5, 1, "", "n_samples"], [4, 5, 1, "", "outputs"], [4, 3, 1, "", "plot_bars"], [4, 3, 1, "", "plot_distribution"], [4, 3, 1, "", "plot_multi_cascade"], [4, 3, 1, "", "plot_series"], [4, 5, 1, "", "pops"], [4, 5, 1, "", "results"], [4, 3, 1, "", "run_sims"], [4, 4, 1, "", "samples"], [4, 3, 1, "", "set_baseline"], [4, 5, 1, "", "tvec"], [4, 3, 1, "", "update"]], "atomica.data": [[17, 6, 1, "", "InvalidDatabook"], [18, 2, 1, "", "ProjectData"]], "atomica.data.ProjectData": [[18, 3, 1, "", "add_interaction"], [18, 3, 1, "", "add_pop"], [18, 3, 1, "", "add_transfer"], [18, 3, 1, "", "change_tvec"], [18, 5, 1, "", "end_year"], [18, 3, 1, "", "from_spreadsheet"], [18, 3, 1, "", "get_tdve_page"], [18, 3, 1, "", "get_ts"], [18, 4, 1, "", "interpops"], [18, 3, 1, "", "new"], [18, 4, 1, "", "pops"], [18, 3, 1, "", "remove_interaction"], [18, 3, 1, "", "remove_transfer"], [18, 3, 1, "", "rename_pop"], [18, 3, 1, "", "rename_transfer"], [18, 3, 1, "", "save"], [18, 5, 1, "", "start_year"], [18, 3, 1, "", "tables"], [18, 4, 1, "", "tdve"], [18, 4, 1, "", "tdve_pages"], [18, 3, 1, "", "to_spreadsheet"], [18, 3, 1, "", "to_workbook"], [18, 4, 1, "", "transfers"], [18, 4, 1, "", "tvec"], [18, 3, 1, "", "validate"]], "atomica.demos": [[20, 1, 1, "", "demo"], [21, 1, 1, "", "make_demo_scenarios"]], "atomica.excel": [[23, 2, 1, "", "TimeDependentConnections"], [24, 2, 1, "", "TimeDependentValuesEntry"], [25, 1, 1, "", "apply_widths"], [26, 1, 1, "", "cell_get_number"], [27, 1, 1, "", "cell_get_string"], [28, 1, 1, "", "copy_sheet"], [29, 1, 1, "", "read_dataframes"], [30, 1, 1, "", "read_tables"], [31, 1, 1, "", "standard_formats"], [32, 1, 1, "", "transfer_comments"], [33, 1, 1, "", "update_widths"], [34, 1, 1, "", "validate_category"]], "atomica.excel.TimeDependentConnections": [[23, 4, 1, "", "assumption_heading"], [23, 4, 1, "", "attributes"], [23, 3, 1, "", "from_tables"], [23, 4, 1, "", "ts_attributes"], [23, 3, 1, "", "write"], [23, 4, 1, "", "write_assumption"], [23, 4, 1, "", "write_uncertainty"], [23, 4, 1, "", "write_units"]], "atomica.excel.TimeDependentValuesEntry": [[24, 4, 1, "", "assumption_heading"], [24, 4, 1, "", "comment"], [24, 3, 1, "", "from_rows"], [24, 5, 1, "", "has_data"], [24, 4, 1, "", "name"], [24, 4, 1, "", "ts_attributes"], [24, 4, 1, "", "tvec"], [24, 3, 1, "", "write"], [24, 4, 1, "", "write_assumption"], [24, 4, 1, "", "write_uncertainty"], [24, 4, 1, "", "write_units"]], "atomica.framework": [[36, 6, 1, "", "InvalidFramework"], [37, 2, 1, "", "ProjectFramework"], [38, 1, 1, "", "generate_framework_doc"]], "atomica.framework.ProjectFramework": [[37, 5, 1, "", "cascades"], [37, 5, 1, "", "characs"], [37, 5, 1, "", "comps"], [37, 4, 1, "", "created"], [37, 3, 1, "", "get_charac"], [37, 3, 1, "", "get_charac_includes"], [37, 3, 1, "", "get_comp"], [37, 3, 1, "", "get_databook_units"], [37, 3, 1, "", "get_interaction"], [37, 3, 1, "", "get_label"], [37, 3, 1, "", "get_par"], [37, 3, 1, "", "get_variable"], [37, 4, 1, "", "gitinfo"], [37, 5, 1, "", "interactions"], [37, 4, 1, "", "modified"], [37, 5, 1, "", "name"], [37, 5, 1, "", "pars"], [37, 5, 1, "", "pop_types"], [37, 3, 1, "", "save"], [37, 4, 1, "", "sheets"], [37, 4, 1, "", "spreadsheet"], [37, 3, 1, "", "to_spreadsheet"], [37, 4, 1, "", "uid"], [37, 4, 1, "", "version"]], "atomica.function_parser": [[40, 1, 1, "", "parse_function"], [41, 1, 1, "", "sdiv"], [42, 1, 1, "", "vector_max"], [43, 1, 1, "", "vector_min"]], "atomica.migration": [[45, 2, 1, "", "Migration"], [46, 1, 1, "", "all_frameworks"], [47, 1, 1, "", "all_progsets"], [48, 1, 1, "", "all_results"], [49, 1, 1, "", "migrate"], [50, 1, 1, "", "migration"], [51, 1, 1, "", "register_migration"]], "atomica.model": [[53, 6, 1, "", "BadInitialization"], [54, 2, 1, "", "Characteristic"], [55, 2, 1, "", "Compartment"], [56, 2, 1, "", "JunctionCompartment"], [57, 2, 1, "", "Link"], [58, 2, 1, "", "Model"], [59, 6, 1, "", "ModelError"], [60, 2, 1, "", "Parameter"], [61, 2, 1, "", "Population"], [62, 2, 1, "", "ResidualJunctionCompartment"], [63, 2, 1, "", "SinkCompartment"], [64, 2, 1, "", "SourceCompartment"], [65, 2, 1, "", "TimedCompartment"], [66, 2, 1, "", "TimedLink"], [67, 2, 1, "", "Variable"], [68, 1, 1, "", "run_model"]], "atomica.model.Characteristic": [[54, 4, 1, "", "id"], [54, 5, 1, "", "name"], [54, 3, 1, "", "plot"], [54, 4, 1, "", "pop"], [54, 3, 1, "", "preallocate"], [54, 3, 1, "", "set_dynamic"], [54, 4, 1, "", "units"], [54, 3, 1, "", "update"]], "atomica.model.Compartment": [[55, 3, 1, "", "connect"], [55, 4, 1, "", "id"], [55, 5, 1, "", "name"], [55, 5, 1, "", "outflow"], [55, 3, 1, "", "plot"], [55, 4, 1, "", "pop"], [55, 3, 1, "", "preallocate"], [55, 3, 1, "", "resolve_outflows"], [55, 3, 1, "", "set_dynamic"], [55, 4, 1, "", "units"], [55, 3, 1, "", "update"]], "atomica.model.JunctionCompartment": [[56, 3, 1, "", "balance"], [56, 3, 1, "", "connect"], [56, 4, 1, "", "duration_group"], [56, 4, 1, "", "id"], [56, 3, 1, "", "initial_flush"], [56, 5, 1, "", "name"], [56, 5, 1, "", "outflow"], [56, 3, 1, "", "plot"], [56, 4, 1, "", "pop"], [56, 3, 1, "", "preallocate"], [56, 3, 1, "", "resolve_outflows"], [56, 3, 1, "", "set_dynamic"], [56, 4, 1, "", "units"], [56, 3, 1, "", "update"]], "atomica.model.Link": [[57, 3, 1, "", "create"], [57, 4, 1, "", "id"], [57, 5, 1, "", "name"], [57, 3, 1, "", "plot"], [57, 4, 1, "", "pop"], [57, 3, 1, "", "preallocate"], [57, 3, 1, "", "set_dynamic"], [57, 4, 1, "", "units"], [57, 3, 1, "", "update"]], "atomica.model.Model": [[58, 3, 1, "", "build"], [58, 4, 1, "", "dt"], [58, 3, 1, "", "flush_junctions"], [58, 3, 1, "", "get_pop"], [58, 3, 1, "", "process"], [58, 3, 1, "", "relink"], [58, 4, 1, "", "t"], [58, 3, 1, "", "unlink"], [58, 3, 1, "", "update_comps"], [58, 3, 1, "", "update_links"], [58, 3, 1, "", "update_pars"]], "atomica.model.Parameter": [[60, 3, 1, "", "constrain"], [60, 4, 1, "", "deps"], [60, 4, 1, "", "derivative"], [60, 4, 1, "", "fcn_str"], [60, 4, 1, "", "id"], [60, 4, 1, "", "limits"], [60, 4, 1, "", "links"], [60, 5, 1, "", "name"], [60, 3, 1, "", "plot"], [60, 4, 1, "", "pop"], [60, 4, 1, "", "pop_aggregation"], [60, 3, 1, "", "preallocate"], [60, 4, 1, "", "scale_factor"], [60, 3, 1, "", "set_dynamic"], [60, 3, 1, "", "set_fcn"], [60, 4, 1, "", "skip_function"], [60, 4, 1, "", "timescale"], [60, 4, 1, "", "units"], [60, 3, 1, "", "update"]], "atomica.model.Population": [[61, 3, 1, "", "build"], [61, 4, 1, "", "charac_lookup"], [61, 4, 1, "", "characs"], [61, 4, 1, "", "comp_lookup"], [61, 4, 1, "", "comps"], [61, 3, 1, "", "get_charac"], [61, 3, 1, "", "get_comp"], [61, 3, 1, "", "get_links"], [61, 3, 1, "", "get_par"], [61, 3, 1, "", "get_variable"], [61, 3, 1, "", "initialize_compartments"], [61, 4, 1, "", "label"], [61, 4, 1, "", "link_lookup"], [61, 4, 1, "", "links"], [61, 4, 1, "", "name"], [61, 4, 1, "", "par_lookup"], [61, 4, 1, "", "pars"], [61, 3, 1, "", "popsize"], [61, 4, 1, "", "type"]], "atomica.model.ResidualJunctionCompartment": [[62, 3, 1, "", "balance"], [62, 3, 1, "", "connect"], [62, 4, 1, "", "duration_group"], [62, 4, 1, "", "id"], [62, 3, 1, "", "initial_flush"], [62, 5, 1, "", "name"], [62, 5, 1, "", "outflow"], [62, 3, 1, "", "plot"], [62, 4, 1, "", "pop"], [62, 3, 1, "", "preallocate"], [62, 3, 1, "", "resolve_outflows"], [62, 3, 1, "", "set_dynamic"], [62, 4, 1, "", "units"], [62, 3, 1, "", "update"]], "atomica.model.SinkCompartment": [[63, 3, 1, "", "connect"], [63, 4, 1, "", "id"], [63, 5, 1, "", "name"], [63, 5, 1, "", "outflow"], [63, 3, 1, "", "plot"], [63, 4, 1, "", "pop"], [63, 3, 1, "", "preallocate"], [63, 3, 1, "", "resolve_outflows"], [63, 3, 1, "", "set_dynamic"], [63, 4, 1, "", "units"], [63, 3, 1, "", "update"]], "atomica.model.SourceCompartment": [[64, 3, 1, "", "connect"], [64, 4, 1, "", "id"], [64, 5, 1, "", "name"], [64, 5, 1, "", "outflow"], [64, 3, 1, "", "plot"], [64, 4, 1, "", "pop"], [64, 3, 1, "", "preallocate"], [64, 3, 1, "", "resolve_outflows"], [64, 3, 1, "", "set_dynamic"], [64, 4, 1, "", "units"], [64, 3, 1, "", "update"]], "atomica.model.TimedCompartment": [[65, 3, 1, "", "connect"], [65, 4, 1, "", "flush_link"], [65, 4, 1, "", "id"], [65, 5, 1, "", "name"], [65, 5, 1, "", "outflow"], [65, 4, 1, "", "parameter"], [65, 3, 1, "", "plot"], [65, 4, 1, "", "pop"], [65, 3, 1, "", "preallocate"], [65, 3, 1, "", "resolve_outflows"], [65, 3, 1, "", "set_dynamic"], [65, 4, 1, "", "units"], [65, 3, 1, "", "update"], [65, 5, 1, "", "vals"]], "atomica.model.TimedLink": [[66, 3, 1, "", "create"], [66, 4, 1, "", "id"], [66, 5, 1, "", "name"], [66, 3, 1, "", "plot"], [66, 4, 1, "", "pop"], [66, 3, 1, "", "preallocate"], [66, 3, 1, "", "set_dynamic"], [66, 4, 1, "", "units"], [66, 3, 1, "", "update"], [66, 5, 1, "", "vals"]], "atomica.model.Variable": [[67, 4, 1, "", "id"], [67, 5, 1, "", "name"], [67, 3, 1, "", "plot"], [67, 4, 1, "", "pop"], [67, 3, 1, "", "preallocate"], [67, 3, 1, "", "set_dynamic"], [67, 4, 1, "", "units"], [67, 3, 1, "", "update"]], "atomica.optimization": [[70, 2, 1, "", "Adjustable"], [71, 2, 1, "", "Adjustment"], [72, 2, 1, "", "AtLeastMeasurable"], [73, 2, 1, "", "AtMostMeasurable"], [74, 2, 1, "", "Constraint"], [75, 2, 1, "", "DecreaseByMeasurable"], [76, 2, 1, "", "ExponentialSpendingAdjustment"], [77, 6, 1, "", "FailedConstraint"], [78, 2, 1, "", "IncreaseByMeasurable"], [79, 6, 1, "", "InvalidInitialConditions"], [80, 2, 1, "", "MaximizeCascadeConversionRate"], [81, 2, 1, "", "MaximizeCascadeStage"], [82, 2, 1, "", "MaximizeMeasurable"], [83, 2, 1, "", "Measurable"], [84, 2, 1, "", "MinimizeMeasurable"], [85, 2, 1, "", "Optimization"], [86, 2, 1, "", "PairedLinearSpendingAdjustment"], [87, 2, 1, "", "SpendingAdjustment"], [88, 2, 1, "", "SpendingPackageAdjustment"], [89, 2, 1, "", "StartTimeAdjustment"], [90, 2, 1, "", "TotalSpendConstraint"], [91, 6, 1, "", "UnresolvableConstraint"], [92, 1, 1, "", "constrain_sum_bounded"], [93, 1, 1, "", "optimize"]], "atomica.optimization.Adjustable": [[70, 3, 1, "", "get_hard_bounds"]], "atomica.optimization.Adjustment": [[71, 4, 1, "", "adjustables"], [71, 3, 1, "", "get_initialization"]], "atomica.optimization.AtLeastMeasurable": [[72, 3, 1, "", "get_baseline"], [72, 3, 1, "", "get_objective_val"]], "atomica.optimization.AtMostMeasurable": [[73, 3, 1, "", "get_baseline"], [73, 3, 1, "", "get_objective_val"]], "atomica.optimization.Constraint": [[74, 3, 1, "", "constrain_instructions"], [74, 3, 1, "", "get_hard_constraint"]], "atomica.optimization.DecreaseByMeasurable": [[75, 3, 1, "", "get_baseline"], [75, 3, 1, "", "get_objective_val"]], "atomica.optimization.ExponentialSpendingAdjustment": [[76, 4, 1, "", "adjustables"], [76, 3, 1, "", "get_initialization"]], "atomica.optimization.IncreaseByMeasurable": [[78, 3, 1, "", "get_baseline"], [78, 3, 1, "", "get_objective_val"]], "atomica.optimization.MaximizeCascadeConversionRate": [[80, 3, 1, "", "get_baseline"], [80, 3, 1, "", "get_objective_val"]], "atomica.optimization.MaximizeCascadeStage": [[81, 3, 1, "", "get_baseline"], [81, 3, 1, "", "get_objective_val"]], "atomica.optimization.MaximizeMeasurable": [[82, 3, 1, "", "get_baseline"], [82, 3, 1, "", "get_objective_val"]], "atomica.optimization.Measurable": [[83, 3, 1, "", "get_baseline"], [83, 3, 1, "", "get_objective_val"]], "atomica.optimization.MinimizeMeasurable": [[84, 3, 1, "", "get_baseline"], [84, 3, 1, "", "get_objective_val"]], "atomica.optimization.Optimization": [[85, 3, 1, "", "compute_objective"], [85, 3, 1, "", "constrain_instructions"], [85, 3, 1, "", "get_adjustment"], [85, 3, 1, "", "get_baselines"], [85, 3, 1, "", "get_hard_constraints"], [85, 3, 1, "", "get_initialization"], [85, 4, 1, "", "maxiters"], [85, 4, 1, "", "maxtime"], [85, 4, 1, "", "method"], [85, 3, 1, "", "update_instructions"]], "atomica.optimization.PairedLinearSpendingAdjustment": [[86, 4, 1, "", "adjustables"], [86, 3, 1, "", "get_initialization"]], "atomica.optimization.SpendingAdjustment": [[87, 4, 1, "", "adjustables"], [87, 3, 1, "", "get_initialization"]], "atomica.optimization.SpendingPackageAdjustment": [[88, 5, 1, "", "adjust_total_spend"], [88, 4, 1, "", "adjustables"], [88, 3, 1, "", "get_initialization"]], "atomica.optimization.StartTimeAdjustment": [[89, 4, 1, "", "adjustables"], [89, 3, 1, "", "get_initialization"]], "atomica.optimization.TotalSpendConstraint": [[90, 3, 1, "", "constrain_instructions"], [90, 3, 1, "", "get_hard_constraint"]], "atomica.parameters": [[95, 2, 1, "", "Parameter"], [96, 2, 1, "", "ParameterSet"]], "atomica.parameters.Parameter": [[95, 3, 1, "", "has_values"], [95, 3, 1, "", "interpolate"], [95, 5, 1, "", "pops"], [95, 3, 1, "", "sample"], [95, 3, 1, "", "smooth"]], "atomica.parameters.ParameterSet": [[96, 3, 1, "", "all_pars"], [96, 3, 1, "", "calibration_spreadsheet"], [96, 3, 1, "", "get_par"], [96, 3, 1, "", "load_calibration"], [96, 3, 1, "", "sample"], [96, 3, 1, "", "save_calibration"], [96, 5, 1, "", "y_factors"]], "atomica.plotting": [[98, 2, 1, "", "PlotData"], [99, 2, 1, "", "Series"], [100, 1, 1, "", "plot_bars"], [101, 1, 1, "", "plot_legend"], [102, 1, 1, "", "plot_series"], [103, 1, 1, "", "relabel_legend"], [104, 1, 1, "", "reorder_legend"], [105, 1, 1, "", "save_figs"]], "atomica.plotting.PlotData": [[98, 3, 1, "", "__getitem__"], [98, 3, 1, "", "accumulate"], [98, 3, 1, "", "interpolate"], [98, 3, 1, "", "programs"], [98, 3, 1, "", "set_colors"], [98, 3, 1, "", "time_aggregate"], [98, 3, 1, "", "tvals"]], "atomica.plotting.Series": [[99, 4, 1, "", "data_label"], [99, 4, 1, "", "data_pop"], [99, 3, 1, "", "interpolate"], [99, 4, 1, "", "timescale"], [99, 5, 1, "", "unit_string"], [99, 4, 1, "", "units"]], "atomica.programs": [[107, 2, 1, "", "Covout"], [108, 2, 1, "", "Program"], [109, 2, 1, "", "ProgramInstructions"], [110, 2, 1, "", "ProgramSet"]], "atomica.programs.Covout": [[107, 3, 1, "", "compute_impact_interaction"], [107, 3, 1, "", "get_outcome"], [107, 5, 1, "", "n_progs"], [107, 3, 1, "", "sample"], [107, 3, 1, "", "update_outcomes"]], "atomica.programs.Program": [[108, 4, 1, "", "baseline_spend"], [108, 4, 1, "", "capacity_constraint"], [108, 4, 1, "", "coverage"], [108, 3, 1, "", "get_capacity"], [108, 3, 1, "", "get_prop_covered"], [108, 3, 1, "", "get_spend"], [108, 5, 1, "", "is_one_off"], [108, 4, 1, "", "label"], [108, 4, 1, "", "name"], [108, 3, 1, "", "sample"], [108, 4, 1, "", "saturation"], [108, 4, 1, "", "spend_data"], [108, 4, 1, "", "target_comps"], [108, 4, 1, "", "target_pops"], [108, 4, 1, "", "unit_cost"]], "atomica.programs.ProgramInstructions": [[109, 3, 1, "", "scale_alloc"]], "atomica.programs.ProgramSet": [[110, 3, 1, "", "add_comp"], [110, 3, 1, "", "add_par"], [110, 3, 1, "", "add_pop"], [110, 3, 1, "", "add_program"], [110, 3, 1, "", "from_spreadsheet"], [110, 3, 1, "", "get_alloc"], [110, 3, 1, "", "get_capacities"], [110, 3, 1, "", "get_outcomes"], [110, 3, 1, "", "get_prop_coverage"], [110, 3, 1, "", "new"], [110, 3, 1, "", "remove_comp"], [110, 3, 1, "", "remove_par"], [110, 3, 1, "", "remove_pop"], [110, 3, 1, "", "remove_program"], [110, 3, 1, "", "sample"], [110, 3, 1, "", "to_spreadsheet"], [110, 3, 1, "", "to_workbook"], [110, 3, 1, "", "validate"]], "atomica.project": [[112, 2, 1, "", "Project"], [113, 2, 1, "", "ProjectSettings"]], "atomica.project.Project": [[112, 3, 1, "", "calibrate"], [112, 3, 1, "", "create_databook"], [112, 3, 1, "", "load"], [112, 3, 1, "", "load_databook"], [112, 3, 1, "", "load_progbook"], [112, 3, 1, "", "make_parset"], [112, 3, 1, "", "make_progbook"], [112, 3, 1, "", "make_scenario"], [112, 3, 1, "", "optim"], [112, 3, 1, "", "parset"], [112, 4, 1, "", "parsets"], [112, 3, 1, "", "progset"], [112, 3, 1, "", "result"], [112, 3, 1, "", "run_optimization"], [112, 3, 1, "", "run_sampled_sims"], [112, 3, 1, "", "run_scenarios"], [112, 3, 1, "", "run_sim"], [112, 3, 1, "", "save"], [112, 3, 1, "", "scen"], [112, 3, 1, "", "update_settings"]], "atomica.project.ProjectSettings": [[113, 5, 1, "", "tvec"], [113, 3, 1, "", "update_time_vector"]], "atomica.reconciliation": [[115, 1, 1, "", "reconcile"]], "atomica.results": [[117, 2, 1, "", "Ensemble"], [118, 2, 1, "", "Result"], [119, 1, 1, "", "export_results"]], "atomica.results.Ensemble": [[117, 3, 1, "", "add"], [117, 4, 1, "", "baseline"], [117, 3, 1, "", "boxplot"], [117, 4, 1, "", "mapping_function"], [117, 5, 1, "", "n_samples"], [117, 5, 1, "", "outputs"], [117, 3, 1, "", "plot_bars"], [117, 3, 1, "", "plot_distribution"], [117, 3, 1, "", "plot_series"], [117, 5, 1, "", "pops"], [117, 5, 1, "", "results"], [117, 3, 1, "", "run_sims"], [117, 4, 1, "", "samples"], [117, 3, 1, "", "set_baseline"], [117, 5, 1, "", "tvec"], [117, 3, 1, "", "update"]], "atomica.results.Result": [[118, 3, 1, "", "charac_names"], [118, 3, 1, "", "check_for_nans"], [118, 3, 1, "", "comp_names"], [118, 5, 1, "", "dt"], [118, 3, 1, "", "export_raw"], [118, 5, 1, "", "framework"], [118, 3, 1, "", "get_alloc"], [118, 3, 1, "", "get_coverage"], [118, 3, 1, "", "get_equivalent_alloc"], [118, 3, 1, "", "get_variable"], [118, 3, 1, "", "link_names"], [118, 3, 1, "", "par_names"], [118, 3, 1, "", "plot"], [118, 5, 1, "", "pop_labels"], [118, 5, 1, "", "t"], [118, 5, 1, "", "used_programs"]], "atomica.scenarios": [[121, 2, 1, "", "BudgetScenario"], [122, 2, 1, "", "CombinedScenario"], [123, 2, 1, "", "CoverageScenario"], [124, 2, 1, "", "ParameterScenario"], [125, 2, 1, "", "Scenario"]], "atomica.scenarios.BudgetScenario": [[121, 4, 1, "", "active"], [121, 3, 1, "", "get_instructions"], [121, 3, 1, "", "get_parset"], [121, 3, 1, "", "get_progset"], [121, 4, 1, "", "parsetname"], [121, 4, 1, "", "progsetname"], [121, 3, 1, "", "run"]], "atomica.scenarios.CombinedScenario": [[122, 4, 1, "", "active"], [122, 3, 1, "", "get_instructions"], [122, 3, 1, "", "get_parset"], [122, 3, 1, "", "get_progset"], [122, 4, 1, "", "interpolation"], [122, 4, 1, "", "parsetname"], [122, 4, 1, "", "progsetname"], [122, 3, 1, "", "run"], [122, 4, 1, "", "scenario_values"]], "atomica.scenarios.CoverageScenario": [[123, 4, 1, "", "active"], [123, 3, 1, "", "get_instructions"], [123, 3, 1, "", "get_parset"], [123, 3, 1, "", "get_progset"], [123, 4, 1, "", "parsetname"], [123, 4, 1, "", "progsetname"], [123, 3, 1, "", "run"]], "atomica.scenarios.ParameterScenario": [[124, 4, 1, "", "active"], [124, 3, 1, "", "add"], [124, 3, 1, "", "get_instructions"], [124, 3, 1, "", "get_parset"], [124, 3, 1, "", "get_progset"], [124, 4, 1, "", "interpolation"], [124, 4, 1, "", "parsetname"], [124, 4, 1, "", "progsetname"], [124, 3, 1, "", "run"], [124, 4, 1, "", "scenario_values"]], "atomica.scenarios.Scenario": [[125, 4, 1, "", "active"], [125, 3, 1, "", "get_instructions"], [125, 3, 1, "", "get_parset"], [125, 3, 1, "", "get_progset"], [125, 4, 1, "", "parsetname"], [125, 4, 1, "", "progsetname"], [125, 3, 1, "", "run"]], "atomica.system": [[127, 2, 1, "", "FrameworkSettings"], [128, 6, 1, "", "NotFoundError"], [129, 1, 1, "", "atomica_path"]], "atomica.utils": [[131, 2, 1, "", "NDict"], [132, 2, 1, "", "NamedItem"], [133, 2, 1, "", "Quiet"], [134, 2, 1, "", "TimeSeries"], [135, 1, 1, "", "datetime_to_year"], [136, 1, 1, "", "evaluate_plot_string"], [137, 1, 1, "", "format_duration"], [138, 1, 1, "", "nested_loop"], [139, 1, 1, "", "parallel_progress"], [140, 1, 1, "", "parent_dir"], [141, 1, 1, "", "start_logging"], [142, 1, 1, "", "stop_logging"]], "atomica.utils.NDict": [[131, 3, 1, "", "__add__"], [131, 3, 1, "", "append"], [131, 3, 1, "", "clear"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "dict_items"], [131, 3, 1, "", "dict_keys"], [131, 3, 1, "", "dict_values"], [131, 3, 1, "", "disp"], [131, 3, 1, "", "enumitems"], [131, 3, 1, "", "enumkeys"], [131, 3, 1, "", "enumvals"], [131, 3, 1, "", "enumvalues"], [131, 3, 1, "", "export"], [131, 3, 1, "", "filter"], [131, 3, 1, "", "filtervals"], [131, 3, 1, "", "findbykey"], [131, 3, 1, "", "findbyval"], [131, 3, 1, "", "findkeys"], [131, 3, 1, "", "fromeach"], [131, 3, 1, "", "fromkeys"], [131, 3, 1, "", "get"], [131, 3, 1, "", "getnested"], [131, 3, 1, "", "index"], [131, 3, 1, "", "insert"], [131, 3, 1, "", "items"], [131, 3, 1, "", "iteritems"], [131, 3, 1, "", "iternested"], [131, 3, 1, "", "keys"], [131, 3, 1, "", "make"], [131, 3, 1, "", "makefrom"], [131, 3, 1, "", "makenested"], [131, 3, 1, "", "map"], [131, 3, 1, "", "pop"], [131, 3, 1, "", "popitem"], [131, 3, 1, "", "promote"], [131, 3, 1, "", "remove"], [131, 3, 1, "", "rename"], [131, 3, 1, "", "reverse"], [131, 3, 1, "", "reversed"], [131, 3, 1, "", "setdefault"], [131, 3, 1, "", "setitem"], [131, 3, 1, "", "setnested"], [131, 3, 1, "", "sort"], [131, 3, 1, "", "sorted"], [131, 3, 1, "", "toeach"], [131, 3, 1, "", "update"], [131, 3, 1, "", "valind"], [131, 3, 1, "", "values"]], "atomica.utils.TimeSeries": [[134, 4, 1, "", "assumption"], [134, 3, 1, "", "copy"], [134, 3, 1, "", "get"], [134, 3, 1, "", "get_arrays"], [134, 5, 1, "", "has_data"], [134, 5, 1, "", "has_time_data"], [134, 3, 1, "", "insert"], [134, 3, 1, "", "interpolate"], [134, 3, 1, "", "remove"], [134, 3, 1, "", "remove_after"], [134, 3, 1, "", "remove_before"], [134, 3, 1, "", "remove_between"], [134, 3, 1, "", "sample"], [134, 4, 1, "", "sigma"], [134, 4, 1, "", "t"], [134, 4, 1, "", "units"], [134, 4, 1, "", "vals"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"atomica": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151], "calibr": [1, 2, 144, 187], "cascad": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 153, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "cascadeensembl": 4, "invalidcascad": 5, "cascade_summari": 6, "get_cascade_data": 7, "get_cascade_v": 8, "plot_cascad": 9, "plot_multi_cascad": 10, "plot_single_cascad": 11, "plot_single_cascade_seri": 12, "sanitize_cascad": 13, "sanitize_pop": 14, "validate_cascad": 15, "data": [16, 17, 18, 145, 150, 154, 166], "invaliddatabook": 17, "projectdata": 18, "demo": [19, 20, 21], "make_demo_scenario": 21, "excel": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "timedependentconnect": [23, 154], "timedependentvaluesentri": [24, 154], "apply_width": 25, "cell_get_numb": 26, "cell_get_str": 27, "copy_sheet": 28, "read_datafram": 29, "read_tabl": 30, "standard_format": 31, "transfer_com": 32, "update_width": 33, "validate_categori": 34, "framework": [35, 36, 37, 38, 145, 165], "invalidframework": 36, "projectframework": [37, 145], "generate_framework_doc": 38, "function_pars": [39, 40, 41, 42, 43], "parse_funct": 40, "sdiv": 41, "vector_max": 42, "vector_min": 43, "migrat": [44, 45, 46, 47, 48, 49, 50, 51], "all_framework": 46, "all_progset": 47, "all_result": 48, "register_migr": 51, "model": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 144, 146, 147, 151, 167, 177, 179, 180, 181, 183, 184, 185, 186], "badiniti": 53, "characterist": [54, 146, 158, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 189], "compart": [55, 146, 158, 162, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "junctioncompart": 56, "link": [57, 146, 173, 174, 178], "modelerror": 59, "paramet": [60, 94, 95, 96, 144, 146, 149, 150, 152, 162, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "popul": [61, 146, 154, 157, 165, 170, 171, 174, 176, 180, 182, 188], "residualjunctioncompart": 62, "sinkcompart": 63, "sourcecompart": 64, "timedcompart": 65, "timedlink": 66, "variabl": [67, 154], "run_model": 68, "optim": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 144, 161], "adjust": [70, 71, 161], "atleastmeasur": 72, "atmostmeasur": 73, "constraint": [74, 161], "decreasebymeasur": 75, "exponentialspendingadjust": 76, "failedconstraint": 77, "increasebymeasur": 78, "invalidinitialcondit": 79, "maximizecascadeconversionr": 80, "maximizecascadestag": 81, "maximizemeasur": 82, "measur": [83, 161], "minimizemeasur": 84, "pairedlinearspendingadjust": 86, "spendingadjust": 87, "spendingpackageadjust": 88, "starttimeadjust": 89, "totalspendconstraint": 90, "unresolvableconstraint": 91, "constrain_sum_bound": 92, "parameterset": [96, 152], "plot": [97, 98, 99, 100, 101, 102, 103, 104, 105, 147, 148, 149, 150, 153, 165, 180], "plotdata": [98, 148], "seri": [99, 150], "plot_bar": 100, "plot_legend": 101, "plot_seri": 102, "relabel_legend": 103, "reorder_legend": 104, "save_fig": 105, "program": [106, 107, 108, 109, 110, 144, 148, 149, 165, 166, 176, 191], "covout": 107, "programinstruct": 109, "programset": 110, "project": [111, 112, 113, 144], "projectset": 113, "reconcili": [114, 115, 144, 191], "reconcil": 115, "result": [116, 117, 118, 119, 147, 153], "ensembl": [117, 153], "export_result": 119, "scenario": [120, 121, 122, 123, 124, 125, 144, 152], "budgetscenario": 121, "combinedscenario": 122, "coveragescenario": 123, "parameterscenario": [124, 152], "system": [126, 127, 128, 129, 150, 158, 166], "frameworkset": 127, "notfounderror": 128, "atomica_path": 129, "util": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "ndict": 131, "nameditem": 132, "quiet": 133, "timeseri": [134, 154], "datetime_to_year": 135, "evaluate_plot_str": 136, "format_dur": 137, "nested_loop": 138, "parallel_progress": 139, "parent_dir": 140, "start_log": 141, "stop_log": 142, "version": 143, "basic": [144, 145, 153, 168], "workflow": 144, "start": [144, 152], "an": [144, 161], "applic": 144, "creat": [144, 148, 154], "manual": 144, "automat": 144, "ad": [144, 145, 154], "budget": 144, "coverag": [144, 148, 157, 166, 176], "access": [145, 147], "export": [145, 147], "make": [145, 150], "new": [145, 150, 157, 170, 171, 173, 174, 175, 176, 178, 180, 182, 183, 184, 185], "valid": 145, "input": [145, 153], "quantiti": 145, "conveni": 145, "method": 145, "iter": 145, "over": [145, 180], "item": 145, "implement": [146, 161, 168], "object": [146, 154], "structur": [146, 161, 166], "build": 146, "integr": 146, "unlink": 146, "pre": [147, 154], "specifi": [147, 153], "raw": 147, "valu": [147, 150, 158, 162], "travers": 147, "graph": [147, 150], "from": [148, 180], "spend": [148, 161], "bar": [148, 150], "select": 148, "time": [148, 150, 158, 168, 171, 173, 174, 175, 176, 181, 182], "aggreg": [148, 150], "output": [148, 160], "unit": [149, 150, 166], "convers": 149, "document": 150, "quick": 150, "refer": 150, "just": 150, "give": 150, "me": 150, "faq": 150, "manipul": 150, "gener": [150, 163, 186], "issu": 150, "legend": 150, "design": 150, "prepar": 150, "function": [150, 152, 162], "axi": 150, "flow": [150, 151], "rate": [150, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "disaggreg": [150, 180], "overrid": [150, 157], "stack": 150, "transit": [150, 168], "set": 150, "full": [150, 180], "name": 150, "further": [150, 154, 178], "format": 150, "modul": 150, "level": 150, "separ": 150, "accumul": 150, "save": 150, "figur": 150, "neg": [150, 158, 180], "horizont": 150, "label": 150, "work": 150, "control": [150, 171, 175, 176], "order": 150, "relabel": 150, "entri": 150, "option": 150, "color": 150, "colour": 150, "pattern": 150, "probabl": [151, 170, 178, 179, 180], "rescal": 151, "geometr": 151, "v": [151, 161], "exponenti": 151, "distribut": [151, 153], "durat": [151, 162, 168, 179, 180], "preserv": 151, "annual": [151, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "conclus": 151, "us": [152, 168], "class": [152, 161], "year": [152, 154, 173, 174, 175, 176, 179, 180, 181, 182], "end": 152, "smooth": [152, 162], "step": 152, "chang": [152, 154, 160], "interpol": [152, 162], "prior": 152, "inspect": 152, "modifi": [152, 154], "overwrit": [152, 157], "uncertainti": 153, "sampl": 153, "analysi": 153, "compar": 153, "differ": 153, "between": 153, "virtual": 153, "stage": 153, "memori": 153, "limit": 153, "environ": 153, "paral": 153, "experiment": 153, "databook": [154, 165, 186], "tabl": 154, "blank": 154, "remov": 154, "add": [154, 157], "transfer": [154, 166, 168, 188], "interact": [154, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 188], "spreadsheet": 154, "modif": 154, "exampl": [155, 161, 164], "comparison": 156, "od": 156, "calcul": 157, "type": [157, 162, 165, 191], "initi": [158, 168, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185], "problem": 158, "solut": 158, "size": [158, 170, 171, 174, 176, 180, 182], "underdetermin": 158, "inconsist": 158, "overdetermin": 158, "resolv": 158, "weight": [158, 180], "comput": [158, 166], "arbitrari": 158, "contextu": 159, "overview": [159, 164, 166], "log": 160, "cookbook": 160, "amount": 160, "dump": 160, "file": 160, "perform": [161, 162], "specif": 161, "total": [161, 179], "maxim": 161, "peopl": [161, 171, 175, 176, 178, 179, 180, 183, 184, 185], "aliv": 161, "minim": 161, "death": [161, 171, 174, 176, 179, 180, 182, 184], "call": 161, "preced": 162, "consider": 162, "timescal": 162, "deriv": 162, "maximum": 162, "content": [163, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "junction": [164, 168, 180, 190], "1": 164, "scale": 164, "up": [164, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185], "normal": [164, 168], "2": [164, 180], "residu": 164, "3": 164, "down": 164, "4": 164, "run": 165, "simul": [165, 180], "capac": 166, "number": [166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "cover": 166, "outcom": [166, 178, 180], "impact": 166, "target": [166, 176], "stochast": 167, "motiv": 168, "case": [168, 170, 171, 176, 178, 180, 182], "group": 168, "architectur": 168, "cervic": 170, "cancer": 170, "sourc": [170, 171, 174, 176, 178, 180, 182], "without": [170, 173, 178], "undiagnos": [170, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185], "screen": [170, 171, 175, 176, 180, 185, 191], "diagnos": [170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185], "treat": [170, 171, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185], "dead": [170, 171, 174, 176, 178, 179, 182, 184], "other": [170, 171, 174, 176, 182], "estim": [170, 171, 174, 176, 180, 182], "women": 170, "who": [170, 171, 178], "have": [170, 180], "ever": [170, 173, 174, 179], "been": [170, 180], "being": 170, "birth": [170, 171, 174, 176, 180, 182, 184], "acquisit": [170, 171, 174, 176, 182], "yield": [170, 171, 174, 176, 181, 182], "posit": [170, 171, 174, 176, 180, 181, 182], "sensit": [170, 171, 174, 181, 182], "confirm": 170, "follow": [170, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185], "newli": [170, 171, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185], "onto": [170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185], "treatment": [170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 191], "mortal": [170, 171, 174, 176, 178, 182], "those": [170, 171, 172, 174, 176, 178, 182], "untreat": [170, 174, 176, 180, 182, 184], "diabet": 171, "suscept": [171, 174, 179, 180, 182], "unawar": [171, 178], "uncompl": 171, "vascular": 171, "damag": 171, "success": [171, 178, 180, 181, 182], "failur": [171, 173, 174, 175, 176, 181, 182], "all": [171, 172, 173, 174, 175, 176, 178, 183, 184, 185], "t2dm": 171, "hba1c": 171, "proport": [171, 172, 178, 179, 180], "befor": 171, "progress": [171, 180], "among": [171, 178], "diagnosi": [171, 172, 173, 175, 180, 183, 184, 185, 191], "experienc": [171, 180], "ar": [171, 178, 180], "offer": [171, 178], "support": [171, 178], "background": [171, 174, 176, 178, 182], "care": [171, 173, 174, 176, 181, 182], "current": [172, 173, 174, 175, 176, 183, 184, 185], "lost": [172, 173, 174, 180, 181, 182, 183, 184, 185], "hiv": [173, 174], "dynam": [173, 174, 176, 182, 184], "viral": [173, 174], "suppress": [173, 174], "comp": [173, 174, 181, 182], "plhiv": [173, 174], "awar": [173, 174, 178], "statu": [173, 174, 180], "averag": [173, 174, 179, 180], "taken": [173, 174], "loss": [173, 174, 175, 176, 180, 181, 182, 183, 184, 185], "after": [173, 174, 175, 176, 181, 182], "art": [173, 174], "achiev": [173, 174, 175, 176], "main": [173, 175, 178, 179, 185], "aid": 174, "infect": [174, 179, 180], "test": [174, 181, 182, 191], "done": [174, 181, 182], "unsuppress": 174, "hypertens": [175, 176], "condit": [175, 176, 183, 184, 185], "blood": [175, 176], "pressur": [175, 176], "bp": [175, 176], "No": 176, "share": 176, "librari": 177, "servic": 178, "modal": 178, "own": 178, "need": [178, 180], "provid": 178, "receiv": 178, "becom": 178, "sir": 179, "recov": [179, 180], "entiti": 179, "preval": [179, 180], "risk": 179, "transmiss": 179, "per": 179, "contact": [179, 180], "forc": [179, 180], "tb": [180, 181, 182], "vaccin": [180, 182, 191], "earli": 180, "latent": 180, "late": 180, "restrict": 180, "smear": 180, "activ": 180, "strain": 180, "sp": 180, "d": 180, "mdr": 180, "xdr": 180, "sn": 180, "complet": 180, "origin": 180, "immigr": 180, "sink": 180, "cumul": 180, "non": 180, "emigr": 180, "suspect": 180, "known": 180, "live": 180, "develop": 180, "md": 180, "dr": 180, "ltbi": 180, "previou": 180, "suffici": 180, "versu": 180, "previous": 180, "vulner": 180, "factor": 180, "rel": 180, "infecti": 180, "depart": 180, "administ": 180, "through": 180, "mass": 180, "trace": 180, "cours": 180, "until": 180, "abandon": 180, "latenc": 180, "departur": 180, "impart": 180, "reinfect": 180, "relaps": 180, "recoveri": [180, 182], "notif": 180, "requir": 180, "re": 180, "fail": 180, "escal": 180, "natur": [180, 182], "disutil": 180, "yld": 180, "life": 180, "remain": 180, "yll": 180, "dali": 180, "prefer": 180, "one": 180, "anoth": 180, "inc": 180, "relat": 180, "includ": 180, "simpl": [181, 182], "notifi": [181, 182], "successfulli": [181, 182], "burden": [181, 182], "In": [181, 182], "unsuccessfulli": 182, "udt": [183, 184], "usdt": 185, "t1": 186, "defin": 186, "exercis": [186, 188, 190, 191], "t2": 187, "tip": 187, "t3": 188, "multipl": 188, "t4": 189, "t5": 190, "t6": 191, "common": 191, "intervent": 191, "confirmatori": 191, "One": 191, "off": 191, "sustain": 191, "tutori": 192}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"atomica.calibration.calibrate": [[2, "atomica-calibration-calibrate"]], "atomica.cascade.CascadeEnsemble": [[4, "atomica-cascade-cascadeensemble"]], "atomica.cascade.InvalidCascade": [[5, "atomica-cascade-invalidcascade"]], "atomica.cascade.validate_cascade": [[15, "atomica-cascade-validate-cascade"]], "atomica.data": [[16, "module-atomica.data"]], "atomica.excel.copy_sheet": [[28, "atomica-excel-copy-sheet"]], "atomica.cascade.cascade_summary": [[6, "atomica-cascade-cascade-summary"]], "atomica.cascade": [[3, "module-atomica.cascade"]], "atomica.cascade.get_cascade_data": [[7, "atomica-cascade-get-cascade-data"]], "atomica.data.ProjectData": [[18, "atomica-data-projectdata"]], "atomica.data.InvalidDatabook": [[17, "atomica-data-invaliddatabook"]], "atomica.cascade.plot_cascade": [[9, "atomica-cascade-plot-cascade"]], "atomica": [[0, "module-atomica"]], "atomica.excel.apply_widths": [[25, "atomica-excel-apply-widths"]], "atomica.calibration": [[1, "module-atomica.calibration"]], "atomica.excel.cell_get_number": [[26, "atomica-excel-cell-get-number"]], "atomica.excel": [[22, "module-atomica.excel"]], "atomica.excel.read_tables": [[30, "atomica-excel-read-tables"]], "atomica.cascade.get_cascade_vals": [[8, "atomica-cascade-get-cascade-vals"]], "atomica.excel.read_dataframes": [[29, "atomica-excel-read-dataframes"]], "atomica.demos.demo": [[20, "atomica-demos-demo"]], "atomica.cascade.plot_single_cascade_series": [[12, "atomica-cascade-plot-single-cascade-series"]], "atomica.demos.make_demo_scenarios": [[21, "atomica-demos-make-demo-scenarios"]], "atomica.cascade.sanitize_cascade": [[13, "atomica-cascade-sanitize-cascade"]], "atomica.cascade.sanitize_pops": [[14, "atomica-cascade-sanitize-pops"]], "atomica.excel.cell_get_string": [[27, "atomica-excel-cell-get-string"]], "atomica.excel.TimeDependentValuesEntry": [[24, "atomica-excel-timedependentvaluesentry"]], "atomica.demos": [[19, "module-atomica.demos"]], "atomica.cascade.plot_multi_cascade": [[10, "atomica-cascade-plot-multi-cascade"]], "atomica.excel.TimeDependentConnections": [[23, "atomica-excel-timedependentconnections"]], "atomica.cascade.plot_single_cascade": [[11, "atomica-cascade-plot-single-cascade"]], "atomica.model.Population": [[61, "atomica-model-population"]], "atomica.excel.transfer_comments": [[32, "atomica-excel-transfer-comments"]], "atomica.excel.validate_category": [[34, "atomica-excel-validate-category"]], "atomica.framework.InvalidFramework": [[36, "atomica-framework-invalidframework"]], "atomica.function_parser.vector_max": [[42, "atomica-function-parser-vector-max"]], "atomica.function_parser.parse_function": [[40, "atomica-function-parser-parse-function"]], "atomica.migration": [[44, "module-atomica.migration"]], "atomica.function_parser.vector_min": [[43, "atomica-function-parser-vector-min"]], "atomica.migration.Migration": [[45, "atomica-migration-migration"]], "atomica.migration.register_migration": [[51, "atomica-migration-register-migration"]], "atomica.model.ModelError": [[59, "atomica-model-modelerror"]], "atomica.excel.update_widths": [[33, "atomica-excel-update-widths"]], "atomica.model.Link": [[57, "atomica-model-link"]], "atomica.function_parser.sdiv": [[41, "atomica-function-parser-sdiv"]], "atomica.migration.all_results": [[48, "atomica-migration-all-results"]], "atomica.model.Model": [[58, "atomica-model-model"]], "atomica.model.Parameter": [[60, "atomica-model-parameter"]], "atomica.migration.all_frameworks": [[46, "atomica-migration-all-frameworks"]], "atomica.model.Characteristic": [[54, "atomica-model-characteristic"]], "atomica.framework.ProjectFramework": [[37, "atomica-framework-projectframework"]], "atomica.model.BadInitialization": [[53, "atomica-model-badinitialization"]], "atomica.migration.migration": [[50, "atomica-migration-migration"]], "atomica.model.Compartment": [[55, "atomica-model-compartment"]], "atomica.migration.all_progsets": [[47, "atomica-migration-all-progsets"]], "atomica.model.JunctionCompartment": [[56, "atomica-model-junctioncompartment"]], "atomica.framework.generate_framework_doc": [[38, "atomica-framework-generate-framework-doc"]], "atomica.migration.migrate": [[49, "atomica-migration-migrate"]], "atomica.function_parser": [[39, "module-atomica.function_parser"]], "atomica.model": [[52, "module-atomica.model"]], "atomica.framework": [[35, "module-atomica.framework"]], "atomica.excel.standard_formats": [[31, "atomica-excel-standard-formats"]], "Logging cookbook": [[160, "logging-cookbook"]], "Changing the amount of output": [[160, "changing-the-amount-of-output"]], "Dumping output to a log file": [[160, "dumping-output-to-a-log-file"]], "Hypertension": [[175, "hypertension"]], "Contents": [[175, "contents"], [181, "contents"], [183, "contents"], [176, "contents"], [179, "contents"], [172, "contents"], [170, "contents"], [182, "contents"], [178, "contents"], [184, "contents"], [171, "contents"], [185, "contents"], [174, "contents"], [180, "contents"], [173, "contents"]], "Compartments": [[175, "compartments"], [181, "compartments"], [183, "compartments"], [176, "compartments"], [179, "compartments"], [172, "compartments"], [170, "compartments"], [182, "compartments"], [178, "compartments"], [184, "compartments"], [171, "compartments"], [185, "compartments"], [174, "compartments"], [180, "compartments"], [173, "compartments"]], "Compartment: Undiagnosed": [[175, "compartment-undiagnosed"], [181, "compartment-undiagnosed"], [183, "compartment-undiagnosed"], [176, "compartment-undiagnosed"], [170, "compartment-undiagnosed"], [182, "compartment-undiagnosed"], [184, "compartment-undiagnosed"], [185, "compartment-undiagnosed"], [174, "compartment-undiagnosed"], [173, "compartment-undiagnosed"]], "Compartment: Screened": [[175, "compartment-screened"], [170, "compartment-screened"], [185, "compartment-screened"]], "Compartment: Diagnosed": [[175, "compartment-diagnosed"], [181, "compartment-diagnosed"], [183, "compartment-diagnosed"], [170, "compartment-diagnosed"], [182, "compartment-diagnosed"], [184, "compartment-diagnosed"], [185, "compartment-diagnosed"], [174, "compartment-diagnosed"], [173, "compartment-diagnosed"]], "Compartment: Treated": [[175, "compartment-treated"], [183, "compartment-treated"], [172, "compartment-treated"], [170, "compartment-treated"], [184, "compartment-treated"], [185, "compartment-treated"], [174, "compartment-treated"], [173, "compartment-treated"]], "Compartment: Controlled": [[175, "compartment-controlled"], [176, "compartment-controlled"]], "Characteristics": [[175, "characteristics"], [181, "characteristics"], [183, "characteristics"], [176, "characteristics"], [179, "characteristics"], [172, "characteristics"], [170, "characteristics"], [182, "characteristics"], [178, "characteristics"], [184, "characteristics"], [171, "characteristics"], [185, "characteristics"], [174, "characteristics"], [180, "characteristics"], [173, "characteristics"]], "Characteristic: All people with condition": [[175, "characteristic-all-people-with-condition"], [183, "characteristic-all-people-with-condition"], [176, "characteristic-all-people-with-condition"], [184, "characteristic-all-people-with-condition"], [185, "characteristic-all-people-with-condition"]], "Characteristic: Screened people": [[175, "characteristic-screened-people"], [176, "characteristic-screened-people"], [185, "characteristic-screened-people"]], "Characteristic: Diagnosed people": [[175, "characteristic-diagnosed-people"], [183, "characteristic-diagnosed-people"], [176, "characteristic-diagnosed-people"], [184, "characteristic-diagnosed-people"], [185, "characteristic-diagnosed-people"]], "Characteristic: Currently treated": [[175, "characteristic-currently-treated"], [183, "characteristic-currently-treated"], [176, "characteristic-currently-treated"], [172, "characteristic-currently-treated"], [184, "characteristic-currently-treated"], [185, "characteristic-currently-treated"], [174, "characteristic-currently-treated"], [173, "characteristic-currently-treated"]], "Characteristic: Blood pressure controlled": [[175, "characteristic-blood-pressure-controlled"], [176, "characteristic-blood-pressure-controlled"]], "Parameters": [[175, "parameters"], [181, "parameters"], [183, "parameters"], [176, "parameters"], [179, "parameters"], [172, "parameters"], [170, "parameters"], [182, "parameters"], [162, "parameters"], [178, "parameters"], [184, "parameters"], [171, "parameters"], [185, "parameters"], [174, "parameters"], [180, "parameters"], [173, "parameters"], [149, "Parameters"]], "Parameter: Annual number screened": [[175, "parameter-annual-number-screened"], [176, "parameter-annual-number-screened"], [170, "parameter-annual-number-screened"], [171, "parameter-annual-number-screened"], [185, "parameter-annual-number-screened"]], "Parameter: Screening rate": [[175, "parameter-screening-rate"], [185, "parameter-screening-rate"]], "Parameter: Annual number of new diagnoses": [[175, "parameter-annual-number-of-new-diagnoses"], [183, "parameter-annual-number-of-new-diagnoses"], [176, "parameter-annual-number-of-new-diagnoses"], [170, "parameter-annual-number-of-new-diagnoses"], [184, "parameter-annual-number-of-new-diagnoses"], [171, "parameter-annual-number-of-new-diagnoses"], [185, "parameter-annual-number-of-new-diagnoses"], [173, "parameter-annual-number-of-new-diagnoses"]], "Parameter: Diagnosis rate": [[175, "parameter-diagnosis-rate"], [183, "parameter-diagnosis-rate"], [184, "parameter-diagnosis-rate"], [185, "parameter-diagnosis-rate"], [173, "parameter-diagnosis-rate"]], "Parameter: Annual number newly initiated onto treatment": [[175, "parameter-annual-number-newly-initiated-onto-treatment"], [181, "parameter-annual-number-newly-initiated-onto-treatment"], [183, "parameter-annual-number-newly-initiated-onto-treatment"], [176, "parameter-annual-number-newly-initiated-onto-treatment"], [172, "parameter-annual-number-newly-initiated-onto-treatment"], [170, "parameter-annual-number-newly-initiated-onto-treatment"], [182, "parameter-annual-number-newly-initiated-onto-treatment"], [184, "parameter-annual-number-newly-initiated-onto-treatment"], [171, "parameter-annual-number-newly-initiated-onto-treatment"], [185, "parameter-annual-number-newly-initiated-onto-treatment"], [174, "parameter-annual-number-newly-initiated-onto-treatment"], [173, "parameter-annual-number-newly-initiated-onto-treatment"]], "Parameter: Initiation rate": [[175, "parameter-initiation-rate"], [181, "parameter-initiation-rate"], [183, "parameter-initiation-rate"], [170, "parameter-initiation-rate"], [182, "parameter-initiation-rate"], [184, "parameter-initiation-rate"], [171, "parameter-initiation-rate"], [185, "parameter-initiation-rate"], [174, "parameter-initiation-rate"], [173, "parameter-initiation-rate"]], "Parameter: Loss-to-follow-up rate": [[175, "parameter-loss-to-follow-up-rate"], [181, "parameter-loss-to-follow-up-rate"], [183, "parameter-loss-to-follow-up-rate"], [176, "parameter-loss-to-follow-up-rate"], [182, "parameter-loss-to-follow-up-rate"], [184, "parameter-loss-to-follow-up-rate"], [185, "parameter-loss-to-follow-up-rate"], [174, "parameter-loss-to-follow-up-rate"], [173, "parameter-loss-to-follow-up-rate"]], "Parameter: Time after initiating treatment to achieve BP control (years)": [[175, "parameter-time-after-initiating-treatment-to-achieve-bp-control-years"], [176, "parameter-time-after-initiating-treatment-to-achieve-bp-control-years"]], "Parameter: Treatment failure rate": [[175, "parameter-treatment-failure-rate"], [181, "parameter-treatment-failure-rate"], [176, "parameter-treatment-failure-rate"], [182, "parameter-treatment-failure-rate"], [171, "parameter-treatment-failure-rate"], [174, "parameter-treatment-failure-rate"], [173, "parameter-treatment-failure-rate"]], "Interactions": [[175, "interactions"], [181, "interactions"], [183, "interactions"], [176, "interactions"], [179, "interactions"], [172, "interactions"], [170, "interactions"], [182, "interactions"], [178, "interactions"], [184, "interactions"], [171, "interactions"], [185, "interactions"], [174, "interactions"], [180, "interactions"], [173, "interactions"], [188, "Interactions"]], "Cascades": [[175, "cascades"], [181, "cascades"], [183, "cascades"], [176, "cascades"], [179, "cascades"], [172, "cascades"], [170, "cascades"], [182, "cascades"], [178, "cascades"], [184, "cascades"], [171, "cascades"], [185, "cascades"], [174, "cascades"], [180, "cascades"], [173, "cascades"]], "Cascade: main": [[175, "cascade-main"], [179, "cascade-main"], [178, "cascade-main"], [185, "cascade-main"], [173, "cascade-main"]], "TB simple model": [[181, "tb-simple-model"]], "Compartment: Notified and treated": [[181, "compartment-notified-and-treated"], [182, "compartment-notified-and-treated"]], "Compartment: Lost to follow-up": [[181, "compartment-lost-to-follow-up"], [182, "compartment-lost-to-follow-up"], [174, "compartment-lost-to-follow-up"], [173, "compartment-lost-to-follow-up"]], "Compartment: Successfully treated (comp)": [[181, "compartment-successfully-treated-comp"], [182, "compartment-successfully-treated-comp"]], "Characteristic: TB burden": [[181, "characteristic-tb-burden"], [182, "characteristic-tb-burden"]], "Characteristic: Notified": [[181, "characteristic-notified"], [182, "characteristic-notified"]], "Characteristic: In care": [[181, "characteristic-in-care"], [182, "characteristic-in-care"]], "Characteristic: Treated": [[181, "characteristic-treated"], [182, "characteristic-treated"]], "Characteristic: Successfully treated": [[181, "characteristic-successfully-treated"], [182, "characteristic-successfully-treated"]], "Parameter: Annual number of tests done": [[181, "parameter-annual-number-of-tests-done"], [182, "parameter-annual-number-of-tests-done"], [174, "parameter-annual-number-of-tests-done"]], "Parameter: Test yield": [[181, "parameter-test-yield"], [182, "parameter-test-yield"], [174, "parameter-test-yield"]], "Parameter: Annual number tested positive": [[181, "parameter-annual-number-tested-positive"], [182, "parameter-annual-number-tested-positive"], [174, "parameter-annual-number-tested-positive"]], "Parameter: Test sensitivity": [[181, "parameter-test-sensitivity"], [182, "parameter-test-sensitivity"], [174, "parameter-test-sensitivity"]], "Parameter: Time after initiating treatment to treatment success (years)": [[181, "parameter-time-after-initiating-treatment-to-treatment-success-years"], [182, "parameter-time-after-initiating-treatment-to-treatment-success-years"]], "Cascade: TB care cascade": [[181, "cascade-tb-care-cascade"], [182, "cascade-tb-care-cascade"]], "Program System": [[166, "program-system"]], "Data and structural overview": [[166, "data-and-structural-overview"]], "Coverage computation": [[166, "coverage-computation"]], "Capacity": [[166, "capacity"]], "Coverage": [[166, "coverage"]], "Number covered": [[166, "number-covered"]], "Outcome computation": [[166, "outcome-computation"]], "Coverage interaction": [[166, "coverage-interaction"]], "Impact interactions": [[166, "impact-interactions"]], "Parameters in Number units": [[166, "parameters-in-number-units"]], "Targeting transfers": [[166, "targeting-transfers"]], "UDT model": [[183, "udt-model"]], "Parameter: Annual number lost to follow-up": [[183, "parameter-annual-number-lost-to-follow-up"], [172, "parameter-annual-number-lost-to-follow-up"], [184, "parameter-annual-number-lost-to-follow-up"], [185, "parameter-annual-number-lost-to-follow-up"]], "Cascade: Cascade": [[183, "cascade-cascade"], [172, "cascade-cascade"], [184, "cascade-cascade"]], "Stochastic models": [[167, "stochastic-models"]], "Hypertension with dynamics": [[176, "hypertension-with-dynamics"]], "Compartment: Source": [[176, "compartment-source"], [170, "compartment-source"], [182, "compartment-source"], [178, "compartment-source"], [171, "compartment-source"], [174, "compartment-source"]], "Compartment: No hypertension": [[176, "compartment-no-hypertension"]], "Compartment: Screened, not diagnosed": [[176, "compartment-screened-not-diagnosed"]], "Compartment: Diagnosed, not treated": [[176, "compartment-diagnosed-not-treated"], [172, "compartment-diagnosed-not-treated"]], "Compartment: Treated, not controlled": [[176, "compartment-treated-not-controlled"]], "Compartment: Dead (hypertension)": [[176, "compartment-dead-hypertension"]], "Compartment: Dead (other)": [[176, "compartment-dead-other"], [170, "compartment-dead-other"], [182, "compartment-dead-other"], [171, "compartment-dead-other"], [174, "compartment-dead-other"]], "Characteristic: Population size": [[176, "characteristic-population-size"], [170, "characteristic-population-size"], [182, "characteristic-population-size"], [171, "characteristic-population-size"], [174, "characteristic-population-size"], [180, "characteristic-population-size"]], "Parameter: Annual number of births": [[176, "parameter-annual-number-of-births"], [170, "parameter-annual-number-of-births"], [182, "parameter-annual-number-of-births"], [171, "parameter-annual-number-of-births"], [174, "parameter-annual-number-of-births"]], "Parameter: Estimated number of new cases annually": [[176, "parameter-estimated-number-of-new-cases-annually"]], "Parameter: Acquisition rate": [[176, "parameter-acquisition-rate"], [170, "parameter-acquisition-rate"], [182, "parameter-acquisition-rate"], [171, "parameter-acquisition-rate"], [174, "parameter-acquisition-rate"]], "Parameter: Target population for screening programs": [[176, "parameter-target-population-for-screening-programs"]], "Parameter: Screening coverage shares": [[176, "parameter-screening-coverage-shares"]], "Parameter: Screening yield": [[176, "parameter-screening-yield"], [170, "parameter-screening-yield"]], "Parameter: Annual number screened positive": [[176, "parameter-annual-number-screened-positive"], [170, "parameter-annual-number-screened-positive"], [171, "parameter-annual-number-screened-positive"]], "Parameter: Death rate for those with untreated hypertension": [[176, "parameter-death-rate-for-those-with-untreated-hypertension"]], "Parameter: Background mortality rate": [[176, "parameter-background-mortality-rate"], [182, "parameter-background-mortality-rate"], [178, "parameter-background-mortality-rate"], [171, "parameter-background-mortality-rate"], [174, "parameter-background-mortality-rate"]], "Cascade: Hypertension care cascade": [[176, "cascade-hypertension-care-cascade"]], "SIR model": [[179, "sir-model"]], "Compartment: Susceptible": [[179, "compartment-susceptible"], [182, "compartment-susceptible"], [171, "compartment-susceptible"], [174, "compartment-susceptible"], [180, "compartment-susceptible"]], "Compartment: Infected": [[179, "compartment-infected"]], "Compartment: Recovered": [[179, "compartment-recovered"]], "Compartment: Dead": [[179, "compartment-dead"], [178, "compartment-dead"]], "Characteristic: Total number of entities": [[179, "characteristic-total-number-of-entities"]], "Characteristic: Prevalence": [[179, "characteristic-prevalence"]], "Characteristic: Number ever infected": [[179, "characteristic-number-ever-infected"]], "Characteristic: Number infected or susceptible": [[179, "characteristic-number-infected-or-susceptible"]], "Characteristic: Number not at risk of death": [[179, "characteristic-number-not-at-risk-of-death"]], "Characteristic: Proportion ever infected": [[179, "characteristic-proportion-ever-infected"]], "Characteristic: Proportion infected or susceptible": [[179, "characteristic-proportion-infected-or-susceptible"]], "Characteristic: Proportion not at risk of death": [[179, "characteristic-proportion-not-at-risk-of-death"]], "Parameter: Transmission probability per contact": [[179, "parameter-transmission-probability-per-contact"]], "Parameter: Number of contacts annually": [[179, "parameter-number-of-contacts-annually"]], "Parameter: Average duration of infections (years)": [[179, "parameter-average-duration-of-infections-years"]], "Parameter: Death rate for infected people": [[179, "parameter-death-rate-for-infected-people"]], "Parameter: Death rate for susceptible people": [[179, "parameter-death-rate-for-susceptible-people"]], "Parameter: Force of infection": [[179, "parameter-force-of-infection"]], "General content": [[163, "general-content"]], "Optimization": [[161, "optimization"], [144, "Optimization"]], "Optimization class": [[161, "optimization-class"]], "Performing an optimization": [[161, "performing-an-optimization"]], "Adjustments": [[161, "adjustments"]], "Implementation specifics": [[161, "implementation-specifics"], [161, "id1"]], "Constraints": [[161, "constraints"]], "Total spending constraint": [[161, "total-spending-constraint"]], "Measurables": [[161, "measurables"]], "Measurables vs. constraints": [[161, "measurables-vs-constraints"]], "Optimization examples": [[161, "optimization-examples"]], "Maximize people alive": [[161, "maximize-people-alive"]], "Minimize deaths": [[161, "minimize-deaths"]], "Minimize spending": [[161, "minimize-spending"]], "Optimization calling structure": [[161, "optimization-calling-structure"]], "Population types": [[165, "population-types"]], "Framework population types": [[165, "framework-population-types"]], "Databook population types": [[165, "databook-population-types"]], "Programs and population types": [[165, "programs-and-population-types"]], "Running simulations": [[165, "running-simulations"]], "Plotting": [[165, "plotting"]], "Overriding coverage calculations": [[157, "Overriding-coverage-calculations"]], "Add a new population type": [[157, "Add-a-new-population-type"]], "Overwriting coverage": [[157, "Overwriting-coverage"]], "Diagnosis-Treated": [[172, "diagnosis-treated"]], "Characteristic: All diagnosed": [[172, "characteristic-all-diagnosed"]], "Parameter: Proportion of those on treatment lost-to-follow-up": [[172, "parameter-proportion-of-those-on-treatment-lost-to-follow-up"]], "Contextual overview": [[159, "contextual-overview"]], "Initializing compartments": [[158, "initializing-compartments"]], "Characteristics to Compartments": [[158, "characteristics-to-compartments"]], "Problems and solutions": [[158, "problems-and-solutions"]], "Negative initial compartment sizes": [[158, "negative-initial-compartment-sizes"]], "Underdetermined system": [[158, "underdetermined-system"]], "Inconsistent system": [[158, "inconsistent-system"]], "Inconsistent overdetermined system": [[158, "inconsistent-overdetermined-system"]], "Resolving inconsistencies - initialization weight": [[158, "resolving-inconsistencies-initialization-weight"]], "Computing initial values at arbitrary times": [[158, "computing-initial-values-at-arbitrary-times"]], "Cervical cancer": [[170, "cervical-cancer"]], "Compartment: Without cervical cancer": [[170, "compartment-without-cervical-cancer"]], "Compartment: Dead (cervical cancer)": [[170, "compartment-dead-cervical-cancer"]], "Characteristic: Estimated number of women with cervical cancer": [[170, "characteristic-estimated-number-of-women-with-cervical-cancer"]], "Characteristic: Estimated number of women with cervical cancer who have ever been screened": [[170, "characteristic-estimated-number-of-women-with-cervical-cancer-who-have-ever-been-screened"]], "Characteristic: Estimated number of women with cervical cancer who have ever been diagnosed": [[170, "characteristic-estimated-number-of-women-with-cervical-cancer-who-have-ever-been-diagnosed"]], "Characteristic: Estimated number of women being treated for cervical cancer": [[170, "characteristic-estimated-number-of-women-being-treated-for-cervical-cancer"]], "Parameter: Estimated number of new cervical cancer cases annually": [[170, "parameter-estimated-number-of-new-cervical-cancer-cases-annually"]], "Parameter: Screening sensitivity": [[170, "parameter-screening-sensitivity"], [171, "parameter-screening-sensitivity"]], "Parameter: Probability of a positive confirmation following screening": [[170, "parameter-probability-of-a-positive-confirmation-following-screening"]], "Parameter: Mortality rate": [[170, "parameter-mortality-rate"]], "Parameter: Mortality rate for those with untreated cervical cancer": [[170, "parameter-mortality-rate-for-those-with-untreated-cervical-cancer"]], "Cascade: Cervical cancer cascade": [[170, "cascade-cervical-cancer-cascade"]], "TB simple with dynamics": [[182, "tb-simple-with-dynamics"]], "Compartment: Vaccinated": [[182, "compartment-vaccinated"], [180, "compartment-vaccinated"]], "Compartment: Dead (TB)": [[182, "compartment-dead-tb"]], "Parameter: Estimated number of new TB cases annually": [[182, "parameter-estimated-number-of-new-tb-cases-annually"]], "Parameter: Natural recovery rate": [[182, "parameter-natural-recovery-rate"]], "Parameter: Annual number vaccinated": [[182, "parameter-annual-number-vaccinated"]], "Parameter: Vaccination rate": [[182, "parameter-vaccination-rate"]], "Parameter: Death rate for those with untreated TB": [[182, "parameter-death-rate-for-those-with-untreated-tb"]], "Parameter: Death rate for those unsuccessfully treated": [[182, "parameter-death-rate-for-those-unsuccessfully-treated"]], "Parameter: Death rate for those successfully treated": [[182, "parameter-death-rate-for-those-successfully-treated"]], "Types of parameter": [[162, "types-of-parameter"]], "Functions": [[162, "functions"]], "Value precedence": [[162, "value-precedence"]], "Performance considerations": [[162, "performance-considerations"]], "Timescales": [[162, "timescales"]], "Derivatives": [[162, "derivatives"]], "Interpolation and smoothing": [[162, "interpolation-and-smoothing"]], "Maximum compartment duration": [[162, "maximum-compartment-duration"]], "Comparison with ODEs": [[156, "Comparison-with-ODEs"]], "Timed transitions": [[168, "timed-transitions"]], "Motivation": [[168, "motivation"]], "Use cases": [[168, "use-cases"]], "Basic implementation": [[168, "basic-implementation"]], "Initialization": [[168, "initialization"]], "Normal transitions": [[168, "normal-transitions"]], "Duration groups": [[168, "duration-groups"]], "Architecture": [[168, "architecture"]], "Transfers": [[168, "transfers"], [188, "Transfers"]], "Junctions": [[168, "junctions"]], "Service modalities": [[178, "service-modalities"]], "Compartment: Unaware of own need": [[178, "compartment-unaware-of-own-need"]], "Compartment: Aware but not linked to services": [[178, "compartment-aware-but-not-linked-to-services"]], "Compartment: Linked to service provider": [[178, "compartment-linked-to-service-provider"]], "Compartment: Receiving services": [[178, "compartment-receiving-services"]], "Compartment: Successful outcome": [[178, "compartment-successful-outcome"]], "Characteristic: All people": [[178, "characteristic-all-people"]], "Characteristic: People aware of need": [[178, "characteristic-people-aware-of-need"]], "Characteristic: People linked to services": [[178, "characteristic-people-linked-to-services"]], "Characteristic: People receiving services": [[178, "characteristic-people-receiving-services"]], "Characteristic: People with successful outcomes": [[178, "characteristic-people-with-successful-outcomes"]], "Characteristic: Proportion aware of need": [[178, "characteristic-proportion-aware-of-need"]], "Characteristic: Proportion linked to services": [[178, "characteristic-proportion-linked-to-services"]], "Characteristic: Proportion receiving services": [[178, "characteristic-proportion-receiving-services"]], "Characteristic: Proportion with successful outcomes": [[178, "characteristic-proportion-with-successful-outcomes"]], "Parameter: Number of new cases (annual)": [[178, "parameter-number-of-new-cases-annual"]], "Parameter: Number becoming aware of need (annual)": [[178, "parameter-number-becoming-aware-of-need-annual"]], "Parameter: Number linked to services (annual)": [[178, "parameter-number-linked-to-services-annual"]], "Parameter: Number initiated onto services (annual)": [[178, "parameter-number-initiated-onto-services-annual"]], "Parameter: Proportion of those without successful outcomes who are offered further support": [[178, "parameter-proportion-of-those-without-successful-outcomes-who-are-offered-further-support"]], "Parameter: Probability of successful outcome among those receiving services": [[178, "parameter-probability-of-successful-outcome-among-those-receiving-services"]], "UDT model with dynamics": [[184, "udt-model-with-dynamics"]], "Compartment: Births": [[184, "compartment-births"]], "Compartment: dead": [[184, "compartment-dead"]], "Parameter: Birth rate": [[184, "parameter-birth-rate"]], "Parameter: Untreated death rate": [[184, "parameter-untreated-death-rate"]], "Parameter: Treated death rate": [[184, "parameter-treated-death-rate"]], "Diabetes": [[171, "diabetes"]], "Compartment: Unaware & uncomplicated": [[171, "compartment-unaware-uncomplicated"]], "Compartment: Unaware & vascular damage": [[171, "compartment-unaware-vascular-damage"]], "Compartment: Screened & uncomplicated": [[171, "compartment-screened-uncomplicated"]], "Compartment: Screened & vascular damage": [[171, "compartment-screened-vascular-damage"]], "Compartment: Diagnosed & uncomplicated": [[171, "compartment-diagnosed-uncomplicated"]], "Compartment: Diagnosed & vascular damage": [[171, "compartment-diagnosed-vascular-damage"]], "Compartment: Successful treatment & uncomplicated": [[171, "compartment-successful-treatment-uncomplicated"]], "Compartment: Successful treatment & vascular damage": [[171, "compartment-successful-treatment-vascular-damage"]], "Compartment: Treatment failure & uncomplicated": [[171, "compartment-treatment-failure-uncomplicated"]], "Compartment: Treatment failure & vascular damage": [[171, "compartment-treatment-failure-vascular-damage"]], "Compartment: Dead (diabetes)": [[171, "compartment-dead-diabetes"]], "Characteristic: All people with T2DM": [[171, "characteristic-all-people-with-t2dm"]], "Characteristic: People screened for T2DM": [[171, "characteristic-people-screened-for-t2dm"]], "Characteristic: People diagnosed with T2DM": [[171, "characteristic-people-diagnosed-with-t2dm"]], "Characteristic: People treated for T2DM": [[171, "characteristic-people-treated-for-t2dm"]], "Characteristic: People with HbA1c control": [[171, "characteristic-people-with-hba1c-control"]], "Characteristic: Proportion screened for T2DM": [[171, "characteristic-proportion-screened-for-t2dm"]], "Characteristic: Proportion diagnosed with T2DM": [[171, "characteristic-proportion-diagnosed-with-t2dm"]], "Characteristic: Proportion treated for T2DM": [[171, "characteristic-proportion-treated-for-t2dm"]], "Characteristic: Proportion with HbA1c control": [[171, "characteristic-proportion-with-hba1c-control"]], "Parameter: Estimated number of new diabetes cases annually": [[171, "parameter-estimated-number-of-new-diabetes-cases-annually"]], "Parameter: Time before progression to vascular damage": [[171, "parameter-time-before-progression-to-vascular-damage"]], "Parameter: Yield among those screened": [[171, "parameter-yield-among-those-screened"]], "Parameter: Diagnosis sensitivity": [[171, "parameter-diagnosis-sensitivity"]], "Parameter: Proportion of those experiencing treatment failure who are offered support": [[171, "parameter-proportion-of-those-experiencing-treatment-failure-who-are-offered-support"]], "Parameter: Death rate for diabetes with vascular damage": [[171, "parameter-death-rate-for-diabetes-with-vascular-damage"]], "Cascade: Diabetes care cascade": [[171, "cascade-diabetes-care-cascade"]], "Cascade: Diabetes care cascade - vascular damage": [[171, "cascade-diabetes-care-cascade-vascular-damage"]], "Cascade: Diabetes care cascade - uncomplicated cases": [[171, "cascade-diabetes-care-cascade-uncomplicated-cases"]], "USDT model": [[185, "usdt-model"]], "Examples": [[155, "examples"]], "HIV with dynamics": [[174, "hiv-with-dynamics"]], "Compartment: Linked to care": [[174, "compartment-linked-to-care"], [173, "compartment-linked-to-care"]], "Compartment: Virally suppressed (comp)": [[174, "compartment-virally-suppressed-comp"], [173, "compartment-virally-suppressed-comp"]], "Compartment: Dead (HIV/AIDS)": [[174, "compartment-dead-hiv-aids"]], "Characteristic: All PLHIV": [[174, "characteristic-all-plhiv"], [173, "characteristic-all-plhiv"]], "Characteristic: Aware of their status": [[174, "characteristic-aware-of-their-status"], [173, "characteristic-aware-of-their-status"]], "Characteristic: Ever in care": [[174, "characteristic-ever-in-care"], [173, "characteristic-ever-in-care"]], "Characteristic: Currently in care": [[174, "characteristic-currently-in-care"], [173, "characteristic-currently-in-care"]], "Characteristic: Virally suppressed": [[174, "characteristic-virally-suppressed"], [173, "characteristic-virally-suppressed"]], "Parameter: Estimated number of new HIV infections annually": [[174, "parameter-estimated-number-of-new-hiv-infections-annually"]], "Parameter: Average time taken to be linked to care (years)": [[174, "parameter-average-time-taken-to-be-linked-to-care-years"], [173, "parameter-average-time-taken-to-be-linked-to-care-years"]], "Parameter: Time after initiating ART to achieve viral suppression (years)": [[174, "parameter-time-after-initiating-art-to-achieve-viral-suppression-years"], [173, "parameter-time-after-initiating-art-to-achieve-viral-suppression-years"]], "Parameter: Death rate for those with untreated HIV": [[174, "parameter-death-rate-for-those-with-untreated-hiv"]], "Parameter: Death rate for those with on unsuppressive ART": [[174, "parameter-death-rate-for-those-with-on-unsuppressive-art"]], "Parameter: Death rate for those with on suppressive ART": [[174, "parameter-death-rate-for-those-with-on-suppressive-art"]], "Cascade: HIV care cascade": [[174, "cascade-hiv-care-cascade"]], "Model library": [[177, "model-library"]], "TB full model": [[180, "tb-full-model"]], "Compartment: Initialization population size": [[180, "compartment-initialization-population-size"]], "Compartment: Early latent untreated (diagnosable)": [[180, "compartment-early-latent-untreated-diagnosable"]], "Compartment: Early latent on treatment": [[180, "compartment-early-latent-on-treatment"]], "Compartment: Junction: Latent early treatment outcome": [[180, "compartment-junction-latent-early-treatment-outcome"]], "Compartment: Late latent untreated (diagnosable)": [[180, "compartment-late-latent-untreated-diagnosable"]], "Compartment: Late latent on treatment": [[180, "compartment-late-latent-on-treatment"]], "Compartment: Junction: Latent late treatment outcome": [[180, "compartment-junction-latent-late-treatment-outcome"]], "Compartment: Susceptible (diagnosis restricted)": [[180, "compartment-susceptible-diagnosis-restricted"]], "Compartment: Early latent untreated (diagnosis restricted)": [[180, "compartment-early-latent-untreated-diagnosis-restricted"]], "Compartment: Late latent untreated (diagnosis restricted)": [[180, "compartment-late-latent-untreated-diagnosis-restricted"]], "Compartment: Junction: Smear disaggregator for new active": [[180, "compartment-junction-smear-disaggregator-for-new-active"]], "Compartment: Junction: Strain disaggregator for new smear positive": [[180, "compartment-junction-strain-disaggregator-for-new-smear-positive"]], "Compartment: SP-DS undiagnosed": [[180, "compartment-sp-ds-undiagnosed"]], "Compartment: SP-DS diagnosed but not on treatment": [[180, "compartment-sp-ds-diagnosed-but-not-on-treatment"]], "Compartment: SP-DS on treatment": [[180, "compartment-sp-ds-on-treatment"]], "Compartment: Junction: SP-DS treatment outcome": [[180, "compartment-junction-sp-ds-treatment-outcome"]], "Compartment: SP-MDR undiagnosed": [[180, "compartment-sp-mdr-undiagnosed"]], "Compartment: SP-MDR diagnosed but not on treatment": [[180, "compartment-sp-mdr-diagnosed-but-not-on-treatment"]], "Compartment: SP-MDR on treatment": [[180, "compartment-sp-mdr-on-treatment"]], "Compartment: Junction: SP-MDR treatment outcome": [[180, "compartment-junction-sp-mdr-treatment-outcome"]], "Compartment: SP-XDR undiagnosed": [[180, "compartment-sp-xdr-undiagnosed"]], "Compartment: SP-XDR diagnosed but not on treatment": [[180, "compartment-sp-xdr-diagnosed-but-not-on-treatment"]], "Compartment: SP-XDR on treatment": [[180, "compartment-sp-xdr-on-treatment"]], "Compartment: Junction: SP-XDR treatment outcome": [[180, "compartment-junction-sp-xdr-treatment-outcome"]], "Compartment: Junction: Strain disaggregator for new smear negative": [[180, "compartment-junction-strain-disaggregator-for-new-smear-negative"]], "Compartment: SN-DS undiagnosed": [[180, "compartment-sn-ds-undiagnosed"]], "Compartment: SN-DS diagnosed but not on treatment": [[180, "compartment-sn-ds-diagnosed-but-not-on-treatment"]], "Compartment: SN-DS on treatment": [[180, "compartment-sn-ds-on-treatment"]], "Compartment: Junction: SN-DS treatment outcome": [[180, "compartment-junction-sn-ds-treatment-outcome"]], "Compartment: SN-MDR undiagnosed": [[180, "compartment-sn-mdr-undiagnosed"]], "Compartment: SN-MDR diagnosed but not on treatment": [[180, "compartment-sn-mdr-diagnosed-but-not-on-treatment"]], "Compartment: SN-MDR on treatment": [[180, "compartment-sn-mdr-on-treatment"]], "Compartment: Junction: SN-MDR treatment outcome": [[180, "compartment-junction-sn-mdr-treatment-outcome"]], "Compartment: SN-XDR undiagnosed": [[180, "compartment-sn-xdr-undiagnosed"]], "Compartment: SN-XDR diagnosed but not on treatment": [[180, "compartment-sn-xdr-diagnosed-but-not-on-treatment"]], "Compartment: SN-XDR on treatment": [[180, "compartment-sn-xdr-on-treatment"]], "Compartment: Junction: SN-XDR treatment outcome": [[180, "compartment-junction-sn-xdr-treatment-outcome"]], "Compartment: Completed treatment (active)": [[180, "compartment-completed-treatment-active"]], "Compartment: Source: Origin of births": [[180, "compartment-source-origin-of-births"]], "Compartment: Source: Origin of immigration": [[180, "compartment-source-origin-of-immigration"]], "Compartment: Junction: Infection status of immigrants": [[180, "compartment-junction-infection-status-of-immigrants"]], "Compartment: Sink: Cumulative TB deaths over simulation": [[180, "compartment-sink-cumulative-tb-deaths-over-simulation"]], "Compartment: Sink: Cumulative non-TB deaths over simulation": [[180, "compartment-sink-cumulative-non-tb-deaths-over-simulation"]], "Compartment: Sink: Cumulative emigration over simulation": [[180, "compartment-sink-cumulative-emigration-over-simulation"]], "Characteristic: Latent TB infections on treatment": [[180, "characteristic-latent-tb-infections-on-treatment"]], "Characteristic: Suspected diagnosis restricted latent infections": [[180, "characteristic-suspected-diagnosis-restricted-latent-infections"]], "Characteristic: Suspected undiagnosed latent infections": [[180, "characteristic-suspected-undiagnosed-latent-infections"]], "Characteristic: Suspected early latent infections": [[180, "characteristic-suspected-early-latent-infections"]], "Characteristic: Suspected late latent infections": [[180, "characteristic-suspected-late-latent-infections"]], "Characteristic: Suspected latent infections": [[180, "characteristic-suspected-latent-infections"]], "Characteristic: Known SP-DS infections": [[180, "characteristic-known-sp-ds-infections"]], "Characteristic: Known SP-MDR infections": [[180, "characteristic-known-sp-mdr-infections"]], "Characteristic: Known SP-XDR infections": [[180, "characteristic-known-sp-xdr-infections"]], "Characteristic: Known SN-DS infections": [[180, "characteristic-known-sn-ds-infections"]], "Characteristic: Known SN-MDR infections": [[180, "characteristic-known-sn-mdr-infections"]], "Characteristic: Known SN-XDR infections": [[180, "characteristic-known-sn-xdr-infections"]], "Characteristic: Known active TB infections": [[180, "characteristic-known-active-tb-infections"]], "Characteristic: Diagnosed number of living people that developed active TB": [[180, "characteristic-diagnosed-number-of-living-people-that-developed-active-tb"]], "Characteristic: Suspected SP-DS infections": [[180, "characteristic-suspected-sp-ds-infections"]], "Characteristic: Suspected SP-MD infections": [[180, "characteristic-suspected-sp-md-infections"]], "Characteristic: Suspected SP-XDR infections": [[180, "characteristic-suspected-sp-xdr-infections"]], "Characteristic: Suspected SN-DS infections": [[180, "characteristic-suspected-sn-ds-infections"]], "Characteristic: Suspected SN-MDR infections": [[180, "characteristic-suspected-sn-mdr-infections"]], "Characteristic: Suspected SN-XDR infections": [[180, "characteristic-suspected-sn-xdr-infections"]], "Characteristic: Suspected SP infections": [[180, "characteristic-suspected-sp-infections"]], "Characteristic: Suspected SN infections": [[180, "characteristic-suspected-sn-infections"]], "Characteristic: Estimated number of people with DS TB": [[180, "characteristic-estimated-number-of-people-with-ds-tb"]], "Characteristic: Estimated number of people with MDR TB": [[180, "characteristic-estimated-number-of-people-with-mdr-tb"]], "Characteristic: Estimated number of people with XDR TB": [[180, "characteristic-estimated-number-of-people-with-xdr-tb"]], "Characteristic: Estimated number of people with DR TB": [[180, "characteristic-estimated-number-of-people-with-dr-tb"]], "Characteristic: Estimated number of people with active TB": [[180, "characteristic-estimated-number-of-people-with-active-tb"]], "Characteristic: Estimated number of living people that developed active TB": [[180, "characteristic-estimated-number-of-living-people-that-developed-active-tb"]], "Characteristic: Suspected untreated SP-DS infections": [[180, "characteristic-suspected-untreated-sp-ds-infections"]], "Characteristic: Suspected untreated SP-MDR infections": [[180, "characteristic-suspected-untreated-sp-mdr-infections"]], "Characteristic: Suspected untreated SP-XDR infections": [[180, "characteristic-suspected-untreated-sp-xdr-infections"]], "Characteristic: Suspected untreated SN-DS infections": [[180, "characteristic-suspected-untreated-sn-ds-infections"]], "Characteristic: Suspected untreated SN-MDR infections": [[180, "characteristic-suspected-untreated-sn-mdr-infections"]], "Characteristic: Suspected untreated SN-XDR infections": [[180, "characteristic-suspected-untreated-sn-xdr-infections"]], "Characteristic: Suspected untreated SP-DS prevalence": [[180, "characteristic-suspected-untreated-sp-ds-prevalence"]], "Characteristic: Suspected untreated SP-MDR prevalence": [[180, "characteristic-suspected-untreated-sp-mdr-prevalence"]], "Characteristic: Suspected untreated SP-XDR prevalence": [[180, "characteristic-suspected-untreated-sp-xdr-prevalence"]], "Characteristic: Suspected untreated SN-DS prevalence": [[180, "characteristic-suspected-untreated-sn-ds-prevalence"]], "Characteristic: Suspected untreated SN-MDR prevalence": [[180, "characteristic-suspected-untreated-sn-mdr-prevalence"]], "Characteristic: Suspected untreated SN-XDR prevalence": [[180, "characteristic-suspected-untreated-sn-xdr-prevalence"]], "Characteristic: Suspected LTBI prevalence": [[180, "characteristic-suspected-ltbi-prevalence"]], "Characteristic: Suspected SP-DS prevalence": [[180, "characteristic-suspected-sp-ds-prevalence"]], "Characteristic: Suspected SP-MDR prevalence": [[180, "characteristic-suspected-sp-mdr-prevalence"]], "Characteristic: Suspected SP-XDR prevalence": [[180, "characteristic-suspected-sp-xdr-prevalence"]], "Characteristic: Suspected SN-DS prevalence": [[180, "characteristic-suspected-sn-ds-prevalence"]], "Characteristic: Suspected SN-MDR prevalence": [[180, "characteristic-suspected-sn-mdr-prevalence"]], "Characteristic: Suspected SN-XDR prevalence": [[180, "characteristic-suspected-sn-xdr-prevalence"]], "Characteristic: Suspected SP prevalence": [[180, "characteristic-suspected-sp-prevalence"]], "Characteristic: Suspected SN prevalence": [[180, "characteristic-suspected-sn-prevalence"]], "Characteristic: Suspected DS prevalence": [[180, "characteristic-suspected-ds-prevalence"]], "Characteristic: Suspected DR prevalence": [[180, "characteristic-suspected-dr-prevalence"]], "Characteristic: Suspected MDR prevalence": [[180, "characteristic-suspected-mdr-prevalence"]], "Characteristic: Suspected XDR prevalence": [[180, "characteristic-suspected-xdr-prevalence"]], "Characteristic: Suspected active TB prevalence": [[180, "characteristic-suspected-active-tb-prevalence"]], "Characteristic: Suspected undiagnosed DS infections": [[180, "characteristic-suspected-undiagnosed-ds-infections"]], "Characteristic: Suspected undiagnosed MDR infections": [[180, "characteristic-suspected-undiagnosed-mdr-infections"]], "Characteristic: Suspected undiagnosed XDR infections": [[180, "characteristic-suspected-undiagnosed-xdr-infections"]], "Characteristic: Diagnosed DS infections": [[180, "characteristic-diagnosed-ds-infections"]], "Characteristic: Diagnosed MDR infections": [[180, "characteristic-diagnosed-mdr-infections"]], "Characteristic: Diagnosed XDR infections": [[180, "characteristic-diagnosed-xdr-infections"]], "Characteristic: DS cases on treatment": [[180, "characteristic-ds-cases-on-treatment"]], "Characteristic: MDR cases on treatment": [[180, "characteristic-mdr-cases-on-treatment"]], "Characteristic: XDR cases on treatment": [[180, "characteristic-xdr-cases-on-treatment"]], "Characteristic: Active TB cases on treatment": [[180, "characteristic-active-tb-cases-on-treatment"]], "Characteristic: Number of living people that have recovered from active TB in the previous 2 years": [[180, "characteristic-number-of-living-people-that-have-recovered-from-active-tb-in-the-previous-2-years"]], "Characteristic: Diagnosis sufficiency (known versus suspected infections)": [[180, "characteristic-diagnosis-sufficiency-known-versus-suspected-infections"]], "Characteristic: Treatment sufficiency (on-treatment versus known infections)": [[180, "characteristic-treatment-sufficiency-on-treatment-versus-known-infections"]], "Parameter: Initialization proportion of the population with active TB": [[180, "parameter-initialization-proportion-of-the-population-with-active-tb"]], "Parameter: Initialization proportion of the population with latent TB": [[180, "parameter-initialization-proportion-of-the-population-with-latent-tb"]], "Parameter: Initialization proportion of latent TB cases that are early latent": [[180, "parameter-initialization-proportion-of-latent-tb-cases-that-are-early-latent"]], "Parameter: Initialization proportion of latent TB cases that are on treatment": [[180, "parameter-initialization-proportion-of-latent-tb-cases-that-are-on-treatment"]], "Parameter: Initialization proportion of active TB cases that are diagnosed": [[180, "parameter-initialization-proportion-of-active-tb-cases-that-are-diagnosed"]], "Parameter: Initialization proportion of diagnosed TB cases that are on treatment": [[180, "parameter-initialization-proportion-of-diagnosed-tb-cases-that-are-on-treatment"]], "Parameter: Initialization proportion of the population that have previously been vaccinated": [[180, "parameter-initialization-proportion-of-the-population-that-have-previously-been-vaccinated"]], "Parameter: Initialization proportion of the population that have previously been infected with TB": [[180, "parameter-initialization-proportion-of-the-population-that-have-previously-been-infected-with-tb"]], "Parameter: New active infections: proportion of population that are SP": [[180, "parameter-new-active-infections-proportion-of-population-that-are-sp"]], "Parameter: New active infections: proportion of population that are SN": [[180, "parameter-new-active-infections-proportion-of-population-that-are-sn"]], "Parameter: New SP infections: proportion of population that are SP-DS": [[180, "parameter-new-sp-infections-proportion-of-population-that-are-sp-ds"]], "Parameter: New SP infections: proportion of population that are SP-MDR": [[180, "parameter-new-sp-infections-proportion-of-population-that-are-sp-mdr"]], "Parameter: New SP infections: proportion of population that are SP-XDR": [[180, "parameter-new-sp-infections-proportion-of-population-that-are-sp-xdr"]], "Parameter: New SN infections: proportion of population that are SN-DS": [[180, "parameter-new-sn-infections-proportion-of-population-that-are-sn-ds"]], "Parameter: New SN infections: proportion of population that are SN-MDR": [[180, "parameter-new-sn-infections-proportion-of-population-that-are-sn-mdr"]], "Parameter: New SN infections: proportion of population that are SN-XDR": [[180, "parameter-new-sn-infections-proportion-of-population-that-are-sn-xdr"]], "Parameter: Infection vulnerability factor (relative population susceptibility)": [[180, "parameter-infection-vulnerability-factor-relative-population-susceptibility"]], "Parameter: Infection vulnerability factor (vaccinated versus susceptible)": [[180, "parameter-infection-vulnerability-factor-vaccinated-versus-susceptible"]], "Parameter: Infection vulnerability factor (recovered versus susceptible)": [[180, "parameter-infection-vulnerability-factor-recovered-versus-susceptible"]], "Parameter: SP-DS infectiousness": [[180, "parameter-sp-ds-infectiousness"]], "Parameter: Relative infectiousness (SN versus SP)": [[180, "parameter-relative-infectiousness-sn-versus-sp"]], "Parameter: Relative infectiousness (MDR versus DS)": [[180, "parameter-relative-infectiousness-mdr-versus-ds"]], "Parameter: Relative infectiousness (XDR versus DS)": [[180, "parameter-relative-infectiousness-xdr-versus-ds"]], "Parameter: Initialization proportion: Early latent untreated (diagnosable)": [[180, "parameter-initialization-proportion-early-latent-untreated-diagnosable"]], "Parameter: Initialization proportion: Early latent on treatment": [[180, "parameter-initialization-proportion-early-latent-on-treatment"]], "Parameter: Initialization proportion: Late latent untreated (diagnosable)": [[180, "parameter-initialization-proportion-late-latent-untreated-diagnosable"]], "Parameter: Initialization proportion: Late latent on treatment": [[180, "parameter-initialization-proportion-late-latent-on-treatment"]], "Parameter: Initialization proportion: Early latent untreated (diagnosis restricted)": [[180, "parameter-initialization-proportion-early-latent-untreated-diagnosis-restricted"]], "Parameter: Initialization proportion: Late latent untreated (diagnosis restricted)": [[180, "parameter-initialization-proportion-late-latent-untreated-diagnosis-restricted"]], "Parameter: Initialization proportion: SP-DS undiagnosed": [[180, "parameter-initialization-proportion-sp-ds-undiagnosed"]], "Parameter: Initialization proportion: SP-DS diagnosed but not on treatment": [[180, "parameter-initialization-proportion-sp-ds-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SP-DS on treatment": [[180, "parameter-initialization-proportion-sp-ds-on-treatment"]], "Parameter: Initialization proportion: SP-MDR undiagnosed": [[180, "parameter-initialization-proportion-sp-mdr-undiagnosed"]], "Parameter: Initialization proportion: SP-MDR diagnosed but not on treatment": [[180, "parameter-initialization-proportion-sp-mdr-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SP-MDR on treatment": [[180, "parameter-initialization-proportion-sp-mdr-on-treatment"]], "Parameter: Initialization proportion: SP-XDR undiagnosed": [[180, "parameter-initialization-proportion-sp-xdr-undiagnosed"]], "Parameter: Initialization proportion: SP-XDR diagnosed but not on treatment": [[180, "parameter-initialization-proportion-sp-xdr-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SP-XDR on treatment": [[180, "parameter-initialization-proportion-sp-xdr-on-treatment"]], "Parameter: Initialization proportion: SN-DS undiagnosed": [[180, "parameter-initialization-proportion-sn-ds-undiagnosed"]], "Parameter: Initialization proportion: SN-DS diagnosed but not on treatment": [[180, "parameter-initialization-proportion-sn-ds-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SN-DS on treatment": [[180, "parameter-initialization-proportion-sn-ds-on-treatment"]], "Parameter: Initialization proportion: SN-MDR undiagnosed": [[180, "parameter-initialization-proportion-sn-mdr-undiagnosed"]], "Parameter: Initialization proportion: SN-MDR diagnosed but not on treatment": [[180, "parameter-initialization-proportion-sn-mdr-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SN-MDR on treatment": [[180, "parameter-initialization-proportion-sn-mdr-on-treatment"]], "Parameter: Initialization proportion: SN-XDR undiagnosed": [[180, "parameter-initialization-proportion-sn-xdr-undiagnosed"]], "Parameter: Initialization proportion: SN-XDR diagnosed but not on treatment": [[180, "parameter-initialization-proportion-sn-xdr-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SN-XDR on treatment": [[180, "parameter-initialization-proportion-sn-xdr-on-treatment"]], "Parameter: Initialization proportion: Completed treatment (active)": [[180, "parameter-initialization-proportion-completed-treatment-active"]], "Parameter: Initialization proportion: Vaccinated": [[180, "parameter-initialization-proportion-vaccinated"]], "Parameter: Initialization proportion: Susceptible": [[180, "parameter-initialization-proportion-susceptible"]], "Parameter: Initialization proportion: Susceptible (diagnosis restricted)": [[180, "parameter-initialization-proportion-susceptible-diagnosis-restricted"]], "Parameter: Number of births": [[180, "parameter-number-of-births"]], "Parameter: Non-TB deaths": [[180, "parameter-non-tb-deaths"]], "Parameter: Number of new immigrants": [[180, "parameter-number-of-new-immigrants"]], "Parameter: Number of departing emigrants": [[180, "parameter-number-of-departing-emigrants"]], "Parameter: Number of vaccinations administered": [[180, "parameter-number-of-vaccinations-administered"]], "Parameter: LTBI treatment initiations through mass screening": [[180, "parameter-ltbi-treatment-initiations-through-mass-screening"]], "Parameter: LTBI treatment initiations through contact tracing": [[180, "parameter-ltbi-treatment-initiations-through-contact-tracing"]], "Parameter: LTBI treatment average duration of full course": [[180, "parameter-ltbi-treatment-average-duration-of-full-course"]], "Parameter: LTBI treatment proportion of lost to follow up": [[180, "parameter-ltbi-treatment-proportion-of-lost-to-follow-up"]], "Parameter: LTBI treatment proportion of successful completions": [[180, "parameter-ltbi-treatment-proportion-of-successful-completions"]], "Parameter: LTBI treatment average duration until outcome": [[180, "parameter-ltbi-treatment-average-duration-until-outcome"]], "Parameter: Early-LTBI annual number initiating treatment": [[180, "parameter-early-ltbi-annual-number-initiating-treatment"]], "Parameter: Early-LTBI (diagnosis restricted) annual number initiating treatment": [[180, "parameter-early-ltbi-diagnosis-restricted-annual-number-initiating-treatment"]], "Parameter: Late-LTBI annual number initiating treatment": [[180, "parameter-late-ltbi-annual-number-initiating-treatment"]], "Parameter: Early-LTBI treatment abandonment rate": [[180, "parameter-early-ltbi-treatment-abandonment-rate"]], "Parameter: Early-LTBI treatment success rate": [[180, "parameter-early-ltbi-treatment-success-rate"]], "Parameter: Late-LTBI treatment abandonment rate": [[180, "parameter-late-ltbi-treatment-abandonment-rate"]], "Parameter: Late-LTBI treatment success rate": [[180, "parameter-late-ltbi-treatment-success-rate"]], "Parameter: Early latency departure rate": [[180, "parameter-early-latency-departure-rate"]], "Parameter: Late latency departure rate": [[180, "parameter-late-latency-departure-rate"]], "Parameter: Probability of early-active versus early-late progression": [[180, "parameter-probability-of-early-active-versus-early-late-progression"]], "Parameter: Early-late LTBI progression rate (diagnosable)": [[180, "parameter-early-late-ltbi-progression-rate-diagnosable"]], "Parameter: Early-late LTBI progression rate (diagnosis restricted)": [[180, "parameter-early-late-ltbi-progression-rate-diagnosis-restricted"]], "Parameter: LTBI-active progression rate (early diagnosable)": [[180, "parameter-ltbi-active-progression-rate-early-diagnosable"]], "Parameter: LTBI-active progression rate (early diagnosis restricted)": [[180, "parameter-ltbi-active-progression-rate-early-diagnosis-restricted"]], "Parameter: LTBI-active progression rate (late diagnosable)": [[180, "parameter-ltbi-active-progression-rate-late-diagnosable"]], "Parameter: LTBI-active progression rate (late diagnosis restricted)": [[180, "parameter-ltbi-active-progression-rate-late-diagnosis-restricted"]], "Parameter: SP-MDR infectiousness": [[180, "parameter-sp-mdr-infectiousness"]], "Parameter: SP-XDR infectiousness": [[180, "parameter-sp-xdr-infectiousness"]], "Parameter: SN-DS infectiousness": [[180, "parameter-sn-ds-infectiousness"]], "Parameter: SN-MDR infectiousness": [[180, "parameter-sn-mdr-infectiousness"]], "Parameter: SN-XDR infectiousness": [[180, "parameter-sn-xdr-infectiousness"]], "Parameter: Force of infection from SP prevalence": [[180, "parameter-force-of-infection-from-sp-prevalence"]], "Parameter: Force of infection from SN prevalence": [[180, "parameter-force-of-infection-from-sn-prevalence"]], "Parameter: Force of infection imparted by population": [[180, "parameter-force-of-infection-imparted-by-population"]], "Parameter: Force of infection experienced by population": [[180, "parameter-force-of-infection-experienced-by-population"]], "Parameter: Infection rate (susceptible to diagnosable latent)": [[180, "parameter-infection-rate-susceptible-to-diagnosable-latent"]], "Parameter: Infection rate (vaccinated to diagnosis restricted latent)": [[180, "parameter-infection-rate-vaccinated-to-diagnosis-restricted-latent"]], "Parameter: Reinfection rate (susceptible to diagnosis restricted for diagnosis restricted)": [[180, "parameter-reinfection-rate-susceptible-to-diagnosis-restricted-for-diagnosis-restricted"]], "Parameter: Relapse rate for completed treatment (active) cases": [[180, "parameter-relapse-rate-for-completed-treatment-active-cases"]], "Parameter: Full recovery rate for completed treatment (active) cases": [[180, "parameter-full-recovery-rate-for-completed-treatment-active-cases"]], "Parameter: Proportion of new immigrants with LTBI": [[180, "parameter-proportion-of-new-immigrants-with-ltbi"]], "Parameter: Early latent proportion of new immigrants": [[180, "parameter-early-latent-proportion-of-new-immigrants"]], "Parameter: Late latent proportion of new immigrants": [[180, "parameter-late-latent-proportion-of-new-immigrants"]], "Parameter: Proportion of new immigrants with active TB infections": [[180, "parameter-proportion-of-new-immigrants-with-active-tb-infections"]], "Parameter: Susceptible proportion of immigrants": [[180, "parameter-susceptible-proportion-of-immigrants"]], "Parameter: SP-DS diagnosis notifications": [[180, "parameter-sp-ds-diagnosis-notifications"]], "Parameter: SP-MDR diagnosis notifications": [[180, "parameter-sp-mdr-diagnosis-notifications"]], "Parameter: SP-XDR diagnosis notifications": [[180, "parameter-sp-xdr-diagnosis-notifications"]], "Parameter: SN-DS diagnosis notifications": [[180, "parameter-sn-ds-diagnosis-notifications"]], "Parameter: SN-MDR diagnosis notifications": [[180, "parameter-sn-mdr-diagnosis-notifications"]], "Parameter: SN-XDR diagnosis notifications": [[180, "parameter-sn-xdr-diagnosis-notifications"]], "Parameter: DS treatment number of initiations": [[180, "parameter-ds-treatment-number-of-initiations"]], "Parameter: SP-DS treatment number of initiations": [[180, "parameter-sp-ds-treatment-number-of-initiations"]], "Parameter: SN-DS treatment number of initiations": [[180, "parameter-sn-ds-treatment-number-of-initiations"]], "Parameter: DS treatment average duration of completed treatment": [[180, "parameter-ds-treatment-average-duration-of-completed-treatment"]], "Parameter: DS treatment proportion of loss to follow up (require re-diagnosis)": [[180, "parameter-ds-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: DS treatment proportion failed (no escalation, no need to re-diagnose)": [[180, "parameter-ds-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: DS treatment proportion failed (escalation to MDR, require re-diagnosis)": [[180, "parameter-ds-treatment-proportion-failed-escalation-to-mdr-require-re-diagnosis"]], "Parameter: DS treatment proportion of treatments completed + success": [[180, "parameter-ds-treatment-proportion-of-treatments-completed-success"]], "Parameter: DS treatment proportion of deaths": [[180, "parameter-ds-treatment-proportion-of-deaths"]], "Parameter: DS treatment average duration until outcome": [[180, "parameter-ds-treatment-average-duration-until-outcome"]], "Parameter: SP-DS treatment proportion of loss to follow up (require re-diagnosis)": [[180, "parameter-sp-ds-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SP-DS treatment proportion failed (no escalation, no need to re-diagnose)": [[180, "parameter-sp-ds-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SP-DS treatment proportion failed (escalation to MDR, require re-diagnosis)": [[180, "parameter-sp-ds-treatment-proportion-failed-escalation-to-mdr-require-re-diagnosis"]], "Parameter: SP-DS treatment proportion of treatments completed + success": [[180, "parameter-sp-ds-treatment-proportion-of-treatments-completed-success"]], "Parameter: SP-DS treatment proportion of deaths": [[180, "parameter-sp-ds-treatment-proportion-of-deaths"]], "Parameter: SN-DS treatment proportion of loss to follow up (require re-diagnosis)": [[180, "parameter-sn-ds-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SN-DS treatment proportion failed (no escalation, no need to re-diagnose)": [[180, "parameter-sn-ds-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SN-DS treatment proportion failed (escalation to MDR, require re-diagnosis)": [[180, "parameter-sn-ds-treatment-proportion-failed-escalation-to-mdr-require-re-diagnosis"]], "Parameter: SN-DS treatment proportion of treatments completed + success": [[180, "parameter-sn-ds-treatment-proportion-of-treatments-completed-success"]], "Parameter: SN-DS treatment proportion of deaths": [[180, "parameter-sn-ds-treatment-proportion-of-deaths"]], "Parameter: MDR treatment number of initiations": [[180, "parameter-mdr-treatment-number-of-initiations"]], "Parameter: SP-MDR treatment number of initiations": [[180, "parameter-sp-mdr-treatment-number-of-initiations"]], "Parameter: SN-MDR treatment number of initiations": [[180, "parameter-sn-mdr-treatment-number-of-initiations"]], "Parameter: MDR treatment average duration of completed treatment": [[180, "parameter-mdr-treatment-average-duration-of-completed-treatment"]], "Parameter: MDR treatment proportion of loss to follow up (require re-diagnosis)": [[180, "parameter-mdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: MDR treatment proportion failed (no escalation, no need to re-diagnose)": [[180, "parameter-mdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: MDR treatment proportion failed (escalation to XDR, require re-diagnosis)": [[180, "parameter-mdr-treatment-proportion-failed-escalation-to-xdr-require-re-diagnosis"]], "Parameter: MDR treatment proportion of treatments completed + success": [[180, "parameter-mdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: MDR treatment proportion of deaths": [[180, "parameter-mdr-treatment-proportion-of-deaths"]], "Parameter: MDR treatment average duration until outcome": [[180, "parameter-mdr-treatment-average-duration-until-outcome"]], "Parameter: SP-MDR treatment proportion of loss to follow up (require re-diagnosis)": [[180, "parameter-sp-mdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SP-MDR treatment proportion failed (no escalation, no need to re-diagnose)": [[180, "parameter-sp-mdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SP-MDR treatment proportion failed (escalation to XDR, require re-diagnosis)": [[180, "parameter-sp-mdr-treatment-proportion-failed-escalation-to-xdr-require-re-diagnosis"]], "Parameter: SP-MDR treatment proportion of treatments completed + success": [[180, "parameter-sp-mdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: SP-MDR treatment proportion of deaths": [[180, "parameter-sp-mdr-treatment-proportion-of-deaths"]], "Parameter: SN-MDR treatment proportion of loss to follow up (require re-diagnosis)": [[180, "parameter-sn-mdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SN-MDR treatment proportion failed (no escalation, no need to re-diagnose)": [[180, "parameter-sn-mdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SN-MDR treatment proportion failed (escalation to XDR, require re-diagnosis)": [[180, "parameter-sn-mdr-treatment-proportion-failed-escalation-to-xdr-require-re-diagnosis"]], "Parameter: SN-MDR treatment proportion of treatments completed + success": [[180, "parameter-sn-mdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: SN-MDR treatment proportion of deaths": [[180, "parameter-sn-mdr-treatment-proportion-of-deaths"]], "Parameter: XDR treatment number of initiations": [[180, "parameter-xdr-treatment-number-of-initiations"]], "Parameter: SP-XDR treatment number of initiations": [[180, "parameter-sp-xdr-treatment-number-of-initiations"]], "Parameter: SN-XDR treatment number of initiations": [[180, "parameter-sn-xdr-treatment-number-of-initiations"]], "Parameter: XDR treatment average duration of completed treatment": [[180, "parameter-xdr-treatment-average-duration-of-completed-treatment"]], "Parameter: XDR treatment proportion of loss to follow up (require re-diagnosis)": [[180, "parameter-xdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: XDR treatment proportion failed (no escalation, no need to re-diagnose)": [[180, "parameter-xdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: XDR treatment proportion of treatments completed + success": [[180, "parameter-xdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: XDR treatment proportion of deaths": [[180, "parameter-xdr-treatment-proportion-of-deaths"]], "Parameter: XDR treatment average duration until outcome": [[180, "parameter-xdr-treatment-average-duration-until-outcome"]], "Parameter: SP-XDR treatment proportion of loss to follow up (require re-diagnosis)": [[180, "parameter-sp-xdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SP-XDR treatment proportion failed (no escalation, no need to re-diagnose)": [[180, "parameter-sp-xdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SP-XDR treatment proportion of treatments completed + success": [[180, "parameter-sp-xdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: SP-XDR treatment proportion of deaths": [[180, "parameter-sp-xdr-treatment-proportion-of-deaths"]], "Parameter: SN-XDR treatment proportion of loss to follow up (require re-diagnosis)": [[180, "parameter-sn-xdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SN-XDR treatment proportion failed (no escalation, no need to re-diagnose)": [[180, "parameter-sn-xdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SN-XDR treatment proportion of treatments completed + success": [[180, "parameter-sn-xdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: SN-XDR treatment proportion of deaths": [[180, "parameter-sn-xdr-treatment-proportion-of-deaths"]], "Parameter: SP-DS natural recovery rate": [[180, "parameter-sp-ds-natural-recovery-rate"]], "Parameter: SP-MDR natural recovery rate": [[180, "parameter-sp-mdr-natural-recovery-rate"]], "Parameter: SP-XDR natural recovery rate": [[180, "parameter-sp-xdr-natural-recovery-rate"]], "Parameter: SN-DS natural recovery rate": [[180, "parameter-sn-ds-natural-recovery-rate"]], "Parameter: SN-MDR natural recovery rate": [[180, "parameter-sn-mdr-natural-recovery-rate"]], "Parameter: SN-XDR natural recovery rate": [[180, "parameter-sn-xdr-natural-recovery-rate"]], "Parameter: SP-DS death rate (untreated)": [[180, "parameter-sp-ds-death-rate-untreated"]], "Parameter: SP-MDR death rate (untreated)": [[180, "parameter-sp-mdr-death-rate-untreated"]], "Parameter: SP-XDR death rate (untreated)": [[180, "parameter-sp-xdr-death-rate-untreated"]], "Parameter: SN-DS death rate (untreated)": [[180, "parameter-sn-ds-death-rate-untreated"]], "Parameter: SN-MDR death rate (untreated)": [[180, "parameter-sn-mdr-death-rate-untreated"]], "Parameter: SN-XDR death rate (untreated)": [[180, "parameter-sn-xdr-death-rate-untreated"]], "Parameter: Disutility weight for active TB": [[180, "parameter-disutility-weight-for-active-tb"]], "Parameter: YLD rate": [[180, "parameter-yld-rate"]], "Parameter: Estimated number of years of life remaining": [[180, "parameter-estimated-number-of-years-of-life-remaining"]], "Parameter: YLL rate": [[180, "parameter-yll-rate"]], "Parameter: DALYs": [[180, "parameter-dalys"]], "Interaction: Preference weighting for one population interacting with another": [[180, "interaction-preference-weighting-for-one-population-interacting-with-another"]], "Plots": [[180, "plots"]], "Plot: Population size": [[180, "plot-population-size"]], "Plot: Latent infections": [[180, "plot-latent-infections"]], "Plot: Active TB": [[180, "plot-active-tb"]], "Plot: Active DS-TB": [[180, "plot-active-ds-tb"]], "Plot: Active MDR-TB": [[180, "plot-active-mdr-tb"]], "Plot: Active XDR-TB": [[180, "plot-active-xdr-tb"]], "Plot: New active TB infections": [[180, "plot-new-active-tb-infections"]], "Plot: Activated TB infections inc. relapse and immigration": [[180, "plot-activated-tb-infections-inc-relapse-and-immigration"]], "Plot: Smear negative active TB": [[180, "plot-smear-negative-active-tb"]], "Plot: Smear positive active TB": [[180, "plot-smear-positive-active-tb"]], "Plot: Latent diagnoses": [[180, "plot-latent-diagnoses"]], "Plot: New active TB diagnoses": [[180, "plot-new-active-tb-diagnoses"]], "Plot: Latent treatment": [[180, "plot-latent-treatment"]], "Plot: Active treatment": [[180, "plot-active-treatment"]], "Plot: TB-related deaths": [[180, "plot-tb-related-deaths"]], "Plot: Latent prevalence": [[180, "plot-latent-prevalence"]], "Plot: Active prevalence": [[180, "plot-active-prevalence"]], "Plot: DR prevalence": [[180, "plot-dr-prevalence"]], "Plot: New active SP-DS diagnoses": [[180, "plot-new-active-sp-ds-diagnoses"]], "Plot: New active SP-MDR diagnoses": [[180, "plot-new-active-sp-mdr-diagnoses"]], "Plot: New active SP-XDR diagnoses": [[180, "plot-new-active-sp-xdr-diagnoses"]], "Plot: New active SN-DS diagnoses": [[180, "plot-new-active-sn-ds-diagnoses"]], "Plot: New active SN-MDR diagnoses": [[180, "plot-new-active-sn-mdr-diagnoses"]], "Plot: New active SN-XDR diagnoses": [[180, "plot-new-active-sn-xdr-diagnoses"]], "Plot: DS number initiating treatment": [[180, "plot-ds-number-initiating-treatment"]], "Plot: MDR number initiating treatment": [[180, "plot-mdr-number-initiating-treatment"]], "Plot: XDR number initiating treatment": [[180, "plot-xdr-number-initiating-treatment"]], "Cascade: TB treatment (including recovered)": [[180, "cascade-tb-treatment-including-recovered"]], "Cascade: SP treatment": [[180, "cascade-sp-treatment"]], "Cascade: SN treatment": [[180, "cascade-sn-treatment"]], "Junction overview": [[164, "junction-overview"]], "Example 1 - scale up, normal junction": [[164, "id1"]], "Example 2 - scale up, residual junction": [[164, "id2"]], "Example 3 - scale down, normal junction": [[164, "id3"]], "Example 4 - scale down, residual junction": [[164, "id4"]], "HIV without dynamics": [[173, "hiv-without-dynamics"]], "T1 - Defining a model": [[186, "T1---Defining-a-model"]], "Generating a databook": [[186, "Generating-a-databook"]], "Exercise": [[186, "Exercise"], [190, "Exercise"], [191, "Exercise"]], "T5 - Junctions": [[190, "T5---Junctions"]], "T2 - Calibration": [[187, "T2---Calibration"]], "Calibration tips": [[187, "Calibration-tips"]], "T3 - Multiple populations": [[188, "T3---Multiple-populations"]], "Exercises": [[188, "Exercises"]], "T6 - Programs": [[191, "T6---Programs"]], "Reconciliation": [[191, "Reconciliation"], [144, "Reconciliation"]], "Common intervention types": [[191, "Common-intervention-types"]], "Vaccines": [[191, "Vaccines"]], "Diagnosis screening program": [[191, "Diagnosis-screening-program"]], "Diagnosis": [[191, "Diagnosis"]], "Screening with confirmatory test": [[191, "Screening-with-confirmatory-test"]], "One-off treatment": [[191, "One-off-treatment"]], "Sustained treatment": [[191, "Sustained-treatment"]], "Tutorials": [[192, "tutorials"]], "T4 - Characteristics": [[189, "T4---Characteristics"]], "atomica.results.export_results": [[119, "atomica-results-export-results"]], "atomica.programs.Program": [[108, "atomica-programs-program"]], "atomica.plotting.PlotData": [[98, "atomica-plotting-plotdata"]], "atomica.plotting.plot_legend": [[101, "atomica-plotting-plot-legend"]], "atomica.programs.ProgramSet": [[110, "atomica-programs-programset"]], "atomica.results.Result": [[118, "atomica-results-result"]], "atomica.plotting.plot_bars": [[100, "atomica-plotting-plot-bars"]], "atomica.plotting.save_figs": [[105, "atomica-plotting-save-figs"]], "atomica.project.Project": [[112, "atomica-project-project"]], "atomica.project.ProjectSettings": [[113, "atomica-project-projectsettings"]], "atomica.reconciliation": [[114, "module-atomica.reconciliation"]], "atomica.programs": [[106, "module-atomica.programs"]], "atomica.plotting": [[97, "module-atomica.plotting"]], "atomica.scenarios": [[120, "module-atomica.scenarios"]], "atomica.parameters": [[94, "module-atomica.parameters"]], "atomica.plotting.Series": [[99, "atomica-plotting-series"]], "atomica.results": [[116, "module-atomica.results"]], "atomica.scenarios.CoverageScenario": [[123, "atomica-scenarios-coveragescenario"]], "atomica.plotting.relabel_legend": [[103, "atomica-plotting-relabel-legend"]], "atomica.project": [[111, "module-atomica.project"]], "atomica.optimization.optimize": [[93, "atomica-optimization-optimize"]], "atomica.plotting.plot_series": [[102, "atomica-plotting-plot-series"]], "atomica.scenarios.BudgetScenario": [[121, "atomica-scenarios-budgetscenario"]], "atomica.programs.ProgramInstructions": [[109, "atomica-programs-programinstructions"]], "atomica.parameters.Parameter": [[95, "atomica-parameters-parameter"]], "atomica.programs.Covout": [[107, "atomica-programs-covout"]], "atomica.reconciliation.reconcile": [[115, "atomica-reconciliation-reconcile"]], "atomica.scenarios.CombinedScenario": [[122, "atomica-scenarios-combinedscenario"]], "atomica.parameters.ParameterSet": [[96, "atomica-parameters-parameterset"]], "atomica.results.Ensemble": [[117, "atomica-results-ensemble"]], "atomica.plotting.reorder_legend": [[104, "atomica-plotting-reorder-legend"]], "atomica.optimization.MinimizeMeasurable": [[84, "atomica-optimization-minimizemeasurable"]], "atomica.model.TimedLink": [[66, "atomica-model-timedlink"]], "atomica.optimization.SpendingAdjustment": [[87, "atomica-optimization-spendingadjustment"]], "atomica.optimization.MaximizeCascadeConversionRate": [[80, "atomica-optimization-maximizecascadeconversionrate"]], "atomica.optimization.Constraint": [[74, "atomica-optimization-constraint"]], "atomica.optimization.Adjustment": [[71, "atomica-optimization-adjustment"]], "atomica.optimization.constrain_sum_bounded": [[92, "atomica-optimization-constrain-sum-bounded"]], "atomica.optimization.AtMostMeasurable": [[73, "atomica-optimization-atmostmeasurable"]], "atomica.optimization": [[69, "module-atomica.optimization"]], "atomica.optimization.StartTimeAdjustment": [[89, "atomica-optimization-starttimeadjustment"]], "atomica.model.run_model": [[68, "atomica-model-run-model"]], "atomica.model.Variable": [[67, "atomica-model-variable"]], "atomica.optimization.IncreaseByMeasurable": [[78, "atomica-optimization-increasebymeasurable"]], "atomica.model.TimedCompartment": [[65, "atomica-model-timedcompartment"]], "atomica.optimization.UnresolvableConstraint": [[91, "atomica-optimization-unresolvableconstraint"]], "atomica.optimization.TotalSpendConstraint": [[90, "atomica-optimization-totalspendconstraint"]], "atomica.optimization.Optimization": [[85, "atomica-optimization-optimization"]], "atomica.optimization.InvalidInitialConditions": [[79, "atomica-optimization-invalidinitialconditions"]], "atomica.optimization.DecreaseByMeasurable": [[75, "atomica-optimization-decreasebymeasurable"]], "atomica.optimization.SpendingPackageAdjustment": [[88, "atomica-optimization-spendingpackageadjustment"]], "atomica.model.SinkCompartment": [[63, "atomica-model-sinkcompartment"]], "atomica.optimization.FailedConstraint": [[77, "atomica-optimization-failedconstraint"]], "atomica.optimization.AtLeastMeasurable": [[72, "atomica-optimization-atleastmeasurable"]], "atomica.optimization.MaximizeMeasurable": [[82, "atomica-optimization-maximizemeasurable"]], "atomica.model.ResidualJunctionCompartment": [[62, "atomica-model-residualjunctioncompartment"]], "atomica.optimization.PairedLinearSpendingAdjustment": [[86, "atomica-optimization-pairedlinearspendingadjustment"]], "atomica.optimization.MaximizeCascadeStage": [[81, "atomica-optimization-maximizecascadestage"]], "atomica.optimization.Measurable": [[83, "atomica-optimization-measurable"]], "atomica.optimization.Adjustable": [[70, "atomica-optimization-adjustable"]], "atomica.model.SourceCompartment": [[64, "atomica-model-sourcecompartment"]], "atomica.optimization.ExponentialSpendingAdjustment": [[76, "atomica-optimization-exponentialspendingadjustment"]], "atomica.system.FrameworkSettings": [[127, "atomica-system-frameworksettings"]], "Frameworks": [[145, "Frameworks"]], "ProjectFramework basics": [[145, "ProjectFramework-basics"]], "Accessing the data": [[145, "Accessing-the-data"]], "Exporting a Framework": [[145, "Exporting-a-Framework"]], "Making a new Framework": [[145, "Making-a-new-Framework"]], "Validating the input": [[145, "Validating-the-input"]], "Adding a quantity to the Framework": [[145, "Adding-a-quantity-to-the-Framework"]], "Convenience methods": [[145, "Convenience-methods"]], "Iterating over items": [[145, "Iterating-over-items"]], "atomica.system.atomica_path": [[129, "atomica-system-atomica-path"]], "atomica.utils.parallel_progress": [[139, "atomica-utils-parallel-progress"]], "atomica.version": [[143, "module-atomica.version"]], "Plot unit conversions": [[149, "Plot-unit-conversions"]], "Programs": [[149, "Programs"]], "atomica.system": [[126, "module-atomica.system"]], "atomica.utils.NDict": [[131, "atomica-utils-ndict"]], "atomica.utils.evaluate_plot_string": [[136, "atomica-utils-evaluate-plot-string"]], "atomica.utils": [[130, "module-atomica.utils"]], "atomica.utils.stop_logging": [[142, "atomica-utils-stop-logging"]], "atomica.system.NotFoundError": [[128, "atomica-system-notfounderror"]], "atomica.utils.NamedItem": [[132, "atomica-utils-nameditem"]], "Scenarios": [[152, "Scenarios"], [144, "Scenarios"]], "Parameter scenarios": [[152, "Parameter-scenarios"], [144, "Parameter-scenarios"]], "Using the ParameterScenario class": [[152, "Using-the-ParameterScenario-class"]], "Scenario start year": [[152, "Scenario-start-year"]], "Scenario end year": [[152, "Scenario-end-year"]], "Smoothing": [[152, "Smoothing"]], "Step changes": [[152, "Step-changes"]], "Parameter interpolation prior to the start year": [[152, "Parameter-interpolation-prior-to-the-start-year"]], "Inspecting the ParameterSet": [[152, "Inspecting-the-ParameterSet"]], "Modifying a ParameterSet": [[152, "Modifying-a-ParameterSet"]], "Overwriting function parameters": [[152, "Overwriting-function-parameters"]], "Basic workflow": [[144, "Basic-workflow"]], "Starting an application": [[144, "Starting-an-application"]], "Creating a project": [[144, "Creating-a-project"]], "Calibrating the model": [[144, "Calibrating-the-model"]], "Manual calibration": [[144, "Manual-calibration"]], "Automatic calibration": [[144, "Automatic-calibration"]], "Adding programs": [[144, "Adding-programs"]], "Budget scenarios": [[144, "Budget-scenarios"]], "Coverage scenarios": [[144, "Coverage-scenarios"]], "atomica.scenarios.ParameterScenario": [[124, "atomica-scenarios-parameterscenario"]], "atomica.scenarios.Scenario": [[125, "atomica-scenarios-scenario"]], "Data and Databooks": [[154, "Data-and-Databooks"]], "TimeSeries objects": [[154, "TimeSeries-objects"]], "Population table": [[154, "Population-table"]], "TimeDependentConnections": [[154, "TimeDependentConnections"]], "TimeDependentValuesEntry": [[154, "TimeDependentValuesEntry"]], "Modifying databooks": [[154, "Modifying-databooks"]], "Creating a blank databook": [[154, "Creating-a-blank-databook"]], "Pre-populating data": [[154, "Pre-populating-data"]], "Adding a variable": [[154, "Adding-a-variable"]], "Removing a variable": [[154, "Removing-a-variable"]], "Add/remove populations": [[154, "Add/remove-populations"]], "Add/remove transfers and interactions": [[154, "Add/remove-transfers-and-interactions"]], "Changing databook years": [[154, "Changing-databook-years"]], "Further spreadsheet modification": [[154, "Further-spreadsheet-modification"]], "Results and Models": [[147, "Results-and-Models"]], "Pre-specified plots": [[147, "Pre-specified-plots"]], "Exporting results": [[147, "Exporting-results"]], "Exporting raw results": [[147, "Exporting-raw-results"]], "Accessing raw values": [[147, "Accessing-raw-values"]], "Traversing the graph": [[147, "Traversing-the-graph"]], "Models (implementation)": [[146, "Models-(implementation)"]], "Model object structure": [[146, "Model-object-structure"]], "Compartment": [[146, "Compartment"]], "Link": [[146, "Link"]], "Characteristic": [[146, "Characteristic"]], "Parameter": [[146, "Parameter"]], "Population": [[146, "Population"]], "Model": [[146, "Model"]], "Building": [[146, "Building"]], "Integrating": [[146, "Integrating"]], "Linking and unlinking": [[146, "Linking-and-unlinking"]], "atomica.utils.format_duration": [[137, "atomica-utils-format-duration"]], "Plotting Documentation": [[150, "Plotting-Documentation"]], "Quick Reference": [[150, "Quick-Reference"]], "Just give me a plot": [[150, "Just-give-me-a-plot"]], "FAQs": [[150, "FAQs"]], "Data manipulation": [[150, "Data-manipulation"]], "General issues": [[150, "General-issues"]], "Bar graphs": [[150, "Bar-graphs"]], "Legends": [[150, "Legends"]], "Plotting system design": [[150, "Plotting-system-design"]], "Data preparation and aggregation": [[150, "Data-preparation-and-aggregation"]], "Function aggregations": [[150, "Function-aggregations"]], "Axis units": [[150, "Axis-units"]], "Flow rate aggregations and disaggregations": [[150, "Flow-rate-aggregations-and-disaggregations"]], "Plotting series": [[150, "Plotting-series"]], "Overriding data": [[150, "Overriding-data"]], "Stacked plots and data": [[150, "Stacked-plots-and-data"]], "Plotting transition parameters and flow rates": [[150, "Plotting-transition-parameters-and-flow-rates"]], "Setting full names": [[150, "Setting-full-names"]], "Further formatting": [[150, "Further-formatting"]], "Module-level settings and separate legends": [[150, "Module-level-settings-and-separate-legends"]], "Time accumulation": [[150, "Time-accumulation"]], "Saving figures": [[150, "Saving-figures"]], "Plotting bars": [[150, "Plotting-bars"]], "Time aggregation": [[150, "Time-aggregation"], [148, "Time-aggregation"]], "Stacking bars": [[150, "Stacking-bars"]], "Negative values": [[150, "Negative-values"]], "Horizontal bars": [[150, "Horizontal-bars"]], "Labelling bars": [[150, "Labelling-bars"]], "Working with legends": [[150, "Working-with-legends"]], "Controlling legend order": [[150, "Controlling-legend-order"]], "Relabeling legend entries": [[150, "Relabeling-legend-entries"]], "Making a new legend": [[150, "Making-a-new-legend"]], "Time aggregation options": [[150, "Time-aggregation-options"]], "Flow rates": [[150, "Flow-rates"]], "Setting colors": [[150, "Setting-colors"]], "Colour design patterns": [[150, "Colour-design-patterns"]], "atomica.utils.datetime_to_year": [[135, "atomica-utils-datetime-to-year"]], "Uncertainty": [[153, "Uncertainty"]], "Specifying uncertainty": [[153, "Specifying-uncertainty"]], "Sampling inputs": [[153, "Sampling-inputs"]], "Analysis": [[153, "Analysis"]], "Basic plotting": [[153, "Basic-plotting"]], "Comparing sampled results": [[153, "Comparing-sampled-results"]], "Distributions of differences between results": [[153, "Distributions-of-differences-between-results"]], "Cascade ensembles": [[153, "Cascade-ensembles"]], "Virtual stages": [[153, "Virtual-stages"]], "Memory-limited environments": [[153, "Memory-limited-environments"]], "Parallization": [[153, "Parallization"]], "Experimental plots": [[153, "Experimental-plots"]], "atomica.utils.parent_dir": [[140, "atomica-utils-parent-dir"]], "atomica.utils.Quiet": [[133, "atomica-utils-quiet"]], "Probability rescaling": [[151, "Probability-rescaling"]], "Geometric vs Exponential distribution for durations": [[151, "Geometric-vs-Exponential-distribution-for-durations"]], "Preserving durations vs preserving annual flows": [[151, "Preserving-durations-vs-preserving-annual-flows"]], "Atomica models": [[151, "Atomica-models"]], "Conclusions": [[151, "Conclusions"]], "Plotting programs": [[148, "Plotting-programs"]], "Creating PlotData from programs": [[148, "Creating-PlotData-from-programs"]], "Plotting spending and coverage": [[148, "Plotting-spending-and-coverage"]], "Bar plots and selecting times": [[148, "Bar-plots-and-selecting-times"]], "Output aggregation": [[148, "Output-aggregation"]], "atomica.utils.nested_loop": [[138, "atomica-utils-nested-loop"]], "atomica.utils.TimeSeries": [[134, "atomica-utils-timeseries"]], "atomica.utils.start_logging": [[141, "atomica-utils-start-logging"]]}, "indexentries": {"atomica": [[0, "module-atomica"]], "module": [[0, "module-atomica"], [1, "module-atomica.calibration"], [3, "module-atomica.cascade"], [16, "module-atomica.data"], [19, "module-atomica.demos"], [22, "module-atomica.excel"], [35, "module-atomica.framework"], [39, "module-atomica.function_parser"], [44, "module-atomica.migration"], [52, "module-atomica.model"], [69, "module-atomica.optimization"], [94, "module-atomica.parameters"], [97, "module-atomica.plotting"], [106, "module-atomica.programs"], [111, "module-atomica.project"], [114, "module-atomica.reconciliation"], [116, "module-atomica.results"], [120, "module-atomica.scenarios"], [126, "module-atomica.system"], [130, "module-atomica.utils"], [143, "module-atomica.version"]], "atomica.calibration": [[1, "module-atomica.calibration"]], "calibrate() (in module atomica.calibration)": [[2, "atomica.calibration.calibrate"]], "atomica.cascade": [[3, "module-atomica.cascade"]], "cascadeensemble (class in atomica.cascade)": [[4, "atomica.cascade.CascadeEnsemble"]], "add() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.add"]], "baseline (atomica.cascade.cascadeensemble attribute)": [[4, "atomica.cascade.CascadeEnsemble.baseline"]], "boxplot() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.boxplot"]], "get_vals() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.get_vals"]], "mapping_function (atomica.cascade.cascadeensemble attribute)": [[4, "atomica.cascade.CascadeEnsemble.mapping_function"]], "n_samples (atomica.cascade.cascadeensemble property)": [[4, "atomica.cascade.CascadeEnsemble.n_samples"]], "outputs (atomica.cascade.cascadeensemble property)": [[4, "atomica.cascade.CascadeEnsemble.outputs"]], "plot_bars() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.plot_bars"]], "plot_distribution() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.plot_distribution"]], "plot_multi_cascade() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.plot_multi_cascade"]], "plot_series() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.plot_series"]], "pops (atomica.cascade.cascadeensemble property)": [[4, "atomica.cascade.CascadeEnsemble.pops"]], "results (atomica.cascade.cascadeensemble property)": [[4, "atomica.cascade.CascadeEnsemble.results"]], "run_sims() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.run_sims"]], "samples (atomica.cascade.cascadeensemble attribute)": [[4, "atomica.cascade.CascadeEnsemble.samples"]], "set_baseline() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.set_baseline"]], "tvec (atomica.cascade.cascadeensemble property)": [[4, "atomica.cascade.CascadeEnsemble.tvec"]], "update() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.update"]], "invalidcascade": [[5, "atomica.cascade.InvalidCascade"]], "cascade_summary() (in module atomica.cascade)": [[6, "atomica.cascade.cascade_summary"]], "get_cascade_data() (in module atomica.cascade)": [[7, "atomica.cascade.get_cascade_data"]], "get_cascade_vals() (in module atomica.cascade)": [[8, "atomica.cascade.get_cascade_vals"]], "plot_cascade() (in module atomica.cascade)": [[9, "atomica.cascade.plot_cascade"]], "plot_multi_cascade() (in module atomica.cascade)": [[10, "atomica.cascade.plot_multi_cascade"]], "plot_single_cascade() (in module atomica.cascade)": [[11, "atomica.cascade.plot_single_cascade"]], "plot_single_cascade_series() (in module atomica.cascade)": [[12, "atomica.cascade.plot_single_cascade_series"]], "sanitize_cascade() (in module atomica.cascade)": [[13, "atomica.cascade.sanitize_cascade"]], "sanitize_pops() (in module atomica.cascade)": [[14, "atomica.cascade.sanitize_pops"]], "validate_cascade() (in module atomica.cascade)": [[15, "atomica.cascade.validate_cascade"]], "atomica.data": [[16, "module-atomica.data"]], "invaliddatabook": [[17, "atomica.data.InvalidDatabook"]], "projectdata (class in atomica.data)": [[18, "atomica.data.ProjectData"]], "add_interaction() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.add_interaction"]], "add_pop() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.add_pop"]], "add_transfer() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.add_transfer"]], "change_tvec() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.change_tvec"]], "end_year (atomica.data.projectdata property)": [[18, "atomica.data.ProjectData.end_year"]], "from_spreadsheet() (atomica.data.projectdata static method)": [[18, "atomica.data.ProjectData.from_spreadsheet"]], "get_tdve_page() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.get_tdve_page"]], "get_ts() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.get_ts"]], "interpops (atomica.data.projectdata attribute)": [[18, "atomica.data.ProjectData.interpops"]], "new() (atomica.data.projectdata static method)": [[18, "atomica.data.ProjectData.new"]], "pops (atomica.data.projectdata attribute)": [[18, "atomica.data.ProjectData.pops"]], "remove_interaction() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.remove_interaction"]], "remove_transfer() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.remove_transfer"]], "rename_pop() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.rename_pop"]], "rename_transfer() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.rename_transfer"]], "save() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.save"]], "start_year (atomica.data.projectdata property)": [[18, "atomica.data.ProjectData.start_year"]], "tables() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.tables"]], "tdve (atomica.data.projectdata attribute)": [[18, "atomica.data.ProjectData.tdve"]], "tdve_pages (atomica.data.projectdata attribute)": [[18, "atomica.data.ProjectData.tdve_pages"]], "to_spreadsheet() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.to_spreadsheet"]], "to_workbook() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.to_workbook"]], "transfers (atomica.data.projectdata attribute)": [[18, "atomica.data.ProjectData.transfers"]], "tvec (atomica.data.projectdata attribute)": [[18, "atomica.data.ProjectData.tvec"]], "validate() (atomica.data.projectdata method)": [[18, "atomica.data.ProjectData.validate"]], "atomica.demos": [[19, "module-atomica.demos"]], "demo() (in module atomica.demos)": [[20, "atomica.demos.demo"]], "make_demo_scenarios() (in module atomica.demos)": [[21, "atomica.demos.make_demo_scenarios"]], "atomica.excel": [[22, "module-atomica.excel"]], "timedependentconnections (class in atomica.excel)": [[23, "atomica.excel.TimeDependentConnections"]], "assumption_heading (atomica.excel.timedependentconnections attribute)": [[23, "atomica.excel.TimeDependentConnections.assumption_heading"]], "attributes (atomica.excel.timedependentconnections attribute)": [[23, "atomica.excel.TimeDependentConnections.attributes"]], "from_tables() (atomica.excel.timedependentconnections static method)": [[23, "atomica.excel.TimeDependentConnections.from_tables"]], "ts_attributes (atomica.excel.timedependentconnections attribute)": [[23, "atomica.excel.TimeDependentConnections.ts_attributes"]], "write() (atomica.excel.timedependentconnections method)": [[23, "atomica.excel.TimeDependentConnections.write"]], "write_assumption (atomica.excel.timedependentconnections attribute)": [[23, "atomica.excel.TimeDependentConnections.write_assumption"]], "write_uncertainty (atomica.excel.timedependentconnections attribute)": [[23, "atomica.excel.TimeDependentConnections.write_uncertainty"]], "write_units (atomica.excel.timedependentconnections attribute)": [[23, "atomica.excel.TimeDependentConnections.write_units"]], "timedependentvaluesentry (class in atomica.excel)": [[24, "atomica.excel.TimeDependentValuesEntry"]], "assumption_heading (atomica.excel.timedependentvaluesentry attribute)": [[24, "atomica.excel.TimeDependentValuesEntry.assumption_heading"]], "comment (atomica.excel.timedependentvaluesentry attribute)": [[24, "atomica.excel.TimeDependentValuesEntry.comment"]], "from_rows() (atomica.excel.timedependentvaluesentry static method)": [[24, "atomica.excel.TimeDependentValuesEntry.from_rows"]], "has_data (atomica.excel.timedependentvaluesentry property)": [[24, "atomica.excel.TimeDependentValuesEntry.has_data"]], "name (atomica.excel.timedependentvaluesentry attribute)": [[24, "atomica.excel.TimeDependentValuesEntry.name"]], "ts_attributes (atomica.excel.timedependentvaluesentry attribute)": [[24, "atomica.excel.TimeDependentValuesEntry.ts_attributes"]], "tvec (atomica.excel.timedependentvaluesentry attribute)": [[24, "atomica.excel.TimeDependentValuesEntry.tvec"]], "write() (atomica.excel.timedependentvaluesentry method)": [[24, "atomica.excel.TimeDependentValuesEntry.write"]], "write_assumption (atomica.excel.timedependentvaluesentry attribute)": [[24, "atomica.excel.TimeDependentValuesEntry.write_assumption"]], "write_uncertainty (atomica.excel.timedependentvaluesentry attribute)": [[24, "atomica.excel.TimeDependentValuesEntry.write_uncertainty"]], "write_units (atomica.excel.timedependentvaluesentry attribute)": [[24, "atomica.excel.TimeDependentValuesEntry.write_units"]], "apply_widths() (in module atomica.excel)": [[25, "atomica.excel.apply_widths"]], "cell_get_number() (in module atomica.excel)": [[26, "atomica.excel.cell_get_number"]], "cell_get_string() (in module atomica.excel)": [[27, "atomica.excel.cell_get_string"]], "copy_sheet() (in module atomica.excel)": [[28, "atomica.excel.copy_sheet"]], "read_dataframes() (in module atomica.excel)": [[29, "atomica.excel.read_dataframes"]], "read_tables() (in module atomica.excel)": [[30, "atomica.excel.read_tables"]], "standard_formats() (in module atomica.excel)": [[31, "atomica.excel.standard_formats"]], "transfer_comments() (in module atomica.excel)": [[32, "atomica.excel.transfer_comments"]], "update_widths() (in module atomica.excel)": [[33, "atomica.excel.update_widths"]], "validate_category() (in module atomica.excel)": [[34, "atomica.excel.validate_category"]], "atomica.framework": [[35, "module-atomica.framework"]], "invalidframework": [[36, "atomica.framework.InvalidFramework"]], "projectframework (class in atomica.framework)": [[37, "atomica.framework.ProjectFramework"]], "cascades (atomica.framework.projectframework property)": [[37, "atomica.framework.ProjectFramework.cascades"]], "characs (atomica.framework.projectframework property)": [[37, "atomica.framework.ProjectFramework.characs"]], "comps (atomica.framework.projectframework property)": [[37, "atomica.framework.ProjectFramework.comps"]], "created (atomica.framework.projectframework attribute)": [[37, "atomica.framework.ProjectFramework.created"]], "get_charac() (atomica.framework.projectframework method)": [[37, "atomica.framework.ProjectFramework.get_charac"]], "get_charac_includes() (atomica.framework.projectframework method)": [[37, "atomica.framework.ProjectFramework.get_charac_includes"]], "get_comp() (atomica.framework.projectframework method)": [[37, "atomica.framework.ProjectFramework.get_comp"]], "get_databook_units() (atomica.framework.projectframework method)": [[37, "atomica.framework.ProjectFramework.get_databook_units"]], "get_interaction() (atomica.framework.projectframework method)": [[37, "atomica.framework.ProjectFramework.get_interaction"]], "get_label() (atomica.framework.projectframework method)": [[37, "atomica.framework.ProjectFramework.get_label"]], "get_par() (atomica.framework.projectframework method)": [[37, "atomica.framework.ProjectFramework.get_par"]], "get_variable() (atomica.framework.projectframework method)": [[37, "atomica.framework.ProjectFramework.get_variable"]], "gitinfo (atomica.framework.projectframework attribute)": [[37, "atomica.framework.ProjectFramework.gitinfo"]], "interactions (atomica.framework.projectframework property)": [[37, "atomica.framework.ProjectFramework.interactions"]], "modified (atomica.framework.projectframework attribute)": [[37, "atomica.framework.ProjectFramework.modified"]], "name (atomica.framework.projectframework property)": [[37, "atomica.framework.ProjectFramework.name"]], "pars (atomica.framework.projectframework property)": [[37, "atomica.framework.ProjectFramework.pars"]], "pop_types (atomica.framework.projectframework property)": [[37, "atomica.framework.ProjectFramework.pop_types"]], "save() (atomica.framework.projectframework method)": [[37, "atomica.framework.ProjectFramework.save"]], "sheets (atomica.framework.projectframework attribute)": [[37, "atomica.framework.ProjectFramework.sheets"]], "spreadsheet (atomica.framework.projectframework attribute)": [[37, "atomica.framework.ProjectFramework.spreadsheet"]], "to_spreadsheet() (atomica.framework.projectframework method)": [[37, "atomica.framework.ProjectFramework.to_spreadsheet"]], "uid (atomica.framework.projectframework attribute)": [[37, "atomica.framework.ProjectFramework.uid"]], "version (atomica.framework.projectframework attribute)": [[37, "atomica.framework.ProjectFramework.version"]], "generate_framework_doc() (in module atomica.framework)": [[38, "atomica.framework.generate_framework_doc"]], "atomica.function_parser": [[39, "module-atomica.function_parser"]], "parse_function() (in module atomica.function_parser)": [[40, "atomica.function_parser.parse_function"]], "sdiv() (in module atomica.function_parser)": [[41, "atomica.function_parser.sdiv"]], "vector_max() (in module atomica.function_parser)": [[42, "atomica.function_parser.vector_max"]], "vector_min() (in module atomica.function_parser)": [[43, "atomica.function_parser.vector_min"]], "atomica.migration": [[44, "module-atomica.migration"]], "migration (class in atomica.migration)": [[45, "atomica.migration.Migration"]], "all_frameworks() (in module atomica.migration)": [[46, "atomica.migration.all_frameworks"]], "all_progsets() (in module atomica.migration)": [[47, "atomica.migration.all_progsets"]], "all_results() (in module atomica.migration)": [[48, "atomica.migration.all_results"]], "migrate() (in module atomica.migration)": [[49, "atomica.migration.migrate"]], "migration() (in module atomica.migration)": [[50, "atomica.migration.migration"]], "register_migration() (in module atomica.migration)": [[51, "atomica.migration.register_migration"]], "atomica.model": [[52, "module-atomica.model"]], "badinitialization": [[53, "atomica.model.BadInitialization"]], "characteristic (class in atomica.model)": [[54, "atomica.model.Characteristic"]], "id (atomica.model.characteristic attribute)": [[54, "atomica.model.Characteristic.id"]], "name (atomica.model.characteristic property)": [[54, "atomica.model.Characteristic.name"]], "plot() (atomica.model.characteristic method)": [[54, "atomica.model.Characteristic.plot"]], "pop (atomica.model.characteristic attribute)": [[54, "atomica.model.Characteristic.pop"]], "preallocate() (atomica.model.characteristic method)": [[54, "atomica.model.Characteristic.preallocate"]], "set_dynamic() (atomica.model.characteristic method)": [[54, "atomica.model.Characteristic.set_dynamic"]], "units (atomica.model.characteristic attribute)": [[54, "atomica.model.Characteristic.units"]], "update() (atomica.model.characteristic method)": [[54, "atomica.model.Characteristic.update"]], "compartment (class in atomica.model)": [[55, "atomica.model.Compartment"]], "connect() (atomica.model.compartment method)": [[55, "atomica.model.Compartment.connect"]], "id (atomica.model.compartment attribute)": [[55, "atomica.model.Compartment.id"]], "name (atomica.model.compartment property)": [[55, "atomica.model.Compartment.name"]], "outflow (atomica.model.compartment property)": [[55, "atomica.model.Compartment.outflow"]], "plot() (atomica.model.compartment method)": [[55, "atomica.model.Compartment.plot"]], "pop (atomica.model.compartment attribute)": [[55, "atomica.model.Compartment.pop"]], "preallocate() (atomica.model.compartment method)": [[55, "atomica.model.Compartment.preallocate"]], "resolve_outflows() (atomica.model.compartment method)": [[55, "atomica.model.Compartment.resolve_outflows"]], "set_dynamic() (atomica.model.compartment method)": [[55, "atomica.model.Compartment.set_dynamic"]], "units (atomica.model.compartment attribute)": [[55, "atomica.model.Compartment.units"]], "update() (atomica.model.compartment method)": [[55, "atomica.model.Compartment.update"]], "junctioncompartment (class in atomica.model)": [[56, "atomica.model.JunctionCompartment"]], "balance() (atomica.model.junctioncompartment method)": [[56, "atomica.model.JunctionCompartment.balance"]], "connect() (atomica.model.junctioncompartment method)": [[56, "atomica.model.JunctionCompartment.connect"]], "duration_group (atomica.model.junctioncompartment attribute)": [[56, "atomica.model.JunctionCompartment.duration_group"]], "id (atomica.model.junctioncompartment attribute)": [[56, "atomica.model.JunctionCompartment.id"]], "initial_flush() (atomica.model.junctioncompartment method)": [[56, "atomica.model.JunctionCompartment.initial_flush"]], "name (atomica.model.junctioncompartment property)": [[56, "atomica.model.JunctionCompartment.name"]], "outflow (atomica.model.junctioncompartment property)": [[56, "atomica.model.JunctionCompartment.outflow"]], "plot() (atomica.model.junctioncompartment method)": [[56, "atomica.model.JunctionCompartment.plot"]], "pop (atomica.model.junctioncompartment attribute)": [[56, "atomica.model.JunctionCompartment.pop"]], "preallocate() (atomica.model.junctioncompartment method)": [[56, "atomica.model.JunctionCompartment.preallocate"]], "resolve_outflows() (atomica.model.junctioncompartment method)": [[56, "atomica.model.JunctionCompartment.resolve_outflows"]], "set_dynamic() (atomica.model.junctioncompartment method)": [[56, "atomica.model.JunctionCompartment.set_dynamic"]], "units (atomica.model.junctioncompartment attribute)": [[56, "atomica.model.JunctionCompartment.units"]], "update() (atomica.model.junctioncompartment method)": [[56, "atomica.model.JunctionCompartment.update"]], "link (class in atomica.model)": [[57, "atomica.model.Link"]], "create() (atomica.model.link class method)": [[57, "atomica.model.Link.create"]], "id (atomica.model.link attribute)": [[57, "atomica.model.Link.id"]], "name (atomica.model.link property)": [[57, "atomica.model.Link.name"]], "plot() (atomica.model.link method)": [[57, "atomica.model.Link.plot"]], "pop (atomica.model.link attribute)": [[57, "atomica.model.Link.pop"]], "preallocate() (atomica.model.link method)": [[57, "atomica.model.Link.preallocate"]], "set_dynamic() (atomica.model.link method)": [[57, "atomica.model.Link.set_dynamic"]], "units (atomica.model.link attribute)": [[57, "atomica.model.Link.units"]], "update() (atomica.model.link method)": [[57, "atomica.model.Link.update"]], "model (class in atomica.model)": [[58, "atomica.model.Model"]], "build() (atomica.model.model method)": [[58, "atomica.model.Model.build"]], "dt (atomica.model.model attribute)": [[58, "atomica.model.Model.dt"]], "flush_junctions() (atomica.model.model method)": [[58, "atomica.model.Model.flush_junctions"]], "get_pop() (atomica.model.model method)": [[58, "atomica.model.Model.get_pop"]], "process() (atomica.model.model method)": [[58, "atomica.model.Model.process"]], "relink() (atomica.model.model method)": [[58, "atomica.model.Model.relink"]], "t (atomica.model.model attribute)": [[58, "atomica.model.Model.t"]], "unlink() (atomica.model.model method)": [[58, "atomica.model.Model.unlink"]], "update_comps() (atomica.model.model method)": [[58, "atomica.model.Model.update_comps"]], "update_links() (atomica.model.model method)": [[58, "atomica.model.Model.update_links"]], "update_pars() (atomica.model.model method)": [[58, "atomica.model.Model.update_pars"]], "modelerror": [[59, "atomica.model.ModelError"]], "parameter (class in atomica.model)": [[60, "atomica.model.Parameter"]], "constrain() (atomica.model.parameter method)": [[60, "atomica.model.Parameter.constrain"]], "deps (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.deps"]], "derivative (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.derivative"]], "fcn_str (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.fcn_str"]], "id (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.id"]], "limits (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.limits"]], "links (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.links"]], "name (atomica.model.parameter property)": [[60, "atomica.model.Parameter.name"]], "plot() (atomica.model.parameter method)": [[60, "atomica.model.Parameter.plot"]], "pop (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.pop"]], "pop_aggregation (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.pop_aggregation"]], "preallocate() (atomica.model.parameter method)": [[60, "atomica.model.Parameter.preallocate"]], "scale_factor (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.scale_factor"]], "set_dynamic() (atomica.model.parameter method)": [[60, "atomica.model.Parameter.set_dynamic"]], "set_fcn() (atomica.model.parameter method)": [[60, "atomica.model.Parameter.set_fcn"]], "skip_function (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.skip_function"]], "timescale (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.timescale"]], "units (atomica.model.parameter attribute)": [[60, "atomica.model.Parameter.units"]], "update() (atomica.model.parameter method)": [[60, "atomica.model.Parameter.update"]], "population (class in atomica.model)": [[61, "atomica.model.Population"]], "build() (atomica.model.population method)": [[61, "atomica.model.Population.build"]], "charac_lookup (atomica.model.population attribute)": [[61, "atomica.model.Population.charac_lookup"]], "characs (atomica.model.population attribute)": [[61, "atomica.model.Population.characs"]], "comp_lookup (atomica.model.population attribute)": [[61, "atomica.model.Population.comp_lookup"]], "comps (atomica.model.population attribute)": [[61, "atomica.model.Population.comps"]], "get_charac() (atomica.model.population method)": [[61, "atomica.model.Population.get_charac"]], "get_comp() (atomica.model.population method)": [[61, "atomica.model.Population.get_comp"]], "get_links() (atomica.model.population method)": [[61, "atomica.model.Population.get_links"]], "get_par() (atomica.model.population method)": [[61, "atomica.model.Population.get_par"]], "get_variable() (atomica.model.population method)": [[61, "atomica.model.Population.get_variable"]], "initialize_compartments() (atomica.model.population method)": [[61, "atomica.model.Population.initialize_compartments"]], "label (atomica.model.population attribute)": [[61, "atomica.model.Population.label"]], "link_lookup (atomica.model.population attribute)": [[61, "atomica.model.Population.link_lookup"]], "links (atomica.model.population attribute)": [[61, "atomica.model.Population.links"]], "name (atomica.model.population attribute)": [[61, "atomica.model.Population.name"]], "par_lookup (atomica.model.population attribute)": [[61, "atomica.model.Population.par_lookup"]], "pars (atomica.model.population attribute)": [[61, "atomica.model.Population.pars"]], "popsize() (atomica.model.population method)": [[61, "atomica.model.Population.popsize"]], "type (atomica.model.population attribute)": [[61, "atomica.model.Population.type"]], "residualjunctioncompartment (class in atomica.model)": [[62, "atomica.model.ResidualJunctionCompartment"]], "balance() (atomica.model.residualjunctioncompartment method)": [[62, "atomica.model.ResidualJunctionCompartment.balance"]], "connect() (atomica.model.residualjunctioncompartment method)": [[62, "atomica.model.ResidualJunctionCompartment.connect"]], "duration_group (atomica.model.residualjunctioncompartment attribute)": [[62, "atomica.model.ResidualJunctionCompartment.duration_group"]], "id (atomica.model.residualjunctioncompartment attribute)": [[62, "atomica.model.ResidualJunctionCompartment.id"]], "initial_flush() (atomica.model.residualjunctioncompartment method)": [[62, "atomica.model.ResidualJunctionCompartment.initial_flush"]], "name (atomica.model.residualjunctioncompartment property)": [[62, "atomica.model.ResidualJunctionCompartment.name"]], "outflow (atomica.model.residualjunctioncompartment property)": [[62, "atomica.model.ResidualJunctionCompartment.outflow"]], "plot() (atomica.model.residualjunctioncompartment method)": [[62, "atomica.model.ResidualJunctionCompartment.plot"]], "pop (atomica.model.residualjunctioncompartment attribute)": [[62, "atomica.model.ResidualJunctionCompartment.pop"]], "preallocate() (atomica.model.residualjunctioncompartment method)": [[62, "atomica.model.ResidualJunctionCompartment.preallocate"]], "resolve_outflows() (atomica.model.residualjunctioncompartment method)": [[62, "atomica.model.ResidualJunctionCompartment.resolve_outflows"]], "set_dynamic() (atomica.model.residualjunctioncompartment method)": [[62, "atomica.model.ResidualJunctionCompartment.set_dynamic"]], "units (atomica.model.residualjunctioncompartment attribute)": [[62, "atomica.model.ResidualJunctionCompartment.units"]], "update() (atomica.model.residualjunctioncompartment method)": [[62, "atomica.model.ResidualJunctionCompartment.update"]], "sinkcompartment (class in atomica.model)": [[63, "atomica.model.SinkCompartment"]], "connect() (atomica.model.sinkcompartment method)": [[63, "atomica.model.SinkCompartment.connect"]], "id (atomica.model.sinkcompartment attribute)": [[63, "atomica.model.SinkCompartment.id"]], "name (atomica.model.sinkcompartment property)": [[63, "atomica.model.SinkCompartment.name"]], "outflow (atomica.model.sinkcompartment property)": [[63, "atomica.model.SinkCompartment.outflow"]], "plot() (atomica.model.sinkcompartment method)": [[63, "atomica.model.SinkCompartment.plot"]], "pop (atomica.model.sinkcompartment attribute)": [[63, "atomica.model.SinkCompartment.pop"]], "preallocate() (atomica.model.sinkcompartment method)": [[63, "atomica.model.SinkCompartment.preallocate"]], "resolve_outflows() (atomica.model.sinkcompartment method)": [[63, "atomica.model.SinkCompartment.resolve_outflows"]], "set_dynamic() (atomica.model.sinkcompartment method)": [[63, "atomica.model.SinkCompartment.set_dynamic"]], "units (atomica.model.sinkcompartment attribute)": [[63, "atomica.model.SinkCompartment.units"]], "update() (atomica.model.sinkcompartment method)": [[63, "atomica.model.SinkCompartment.update"]], "sourcecompartment (class in atomica.model)": [[64, "atomica.model.SourceCompartment"]], "connect() (atomica.model.sourcecompartment method)": [[64, "atomica.model.SourceCompartment.connect"]], "id (atomica.model.sourcecompartment attribute)": [[64, "atomica.model.SourceCompartment.id"]], "name (atomica.model.sourcecompartment property)": [[64, "atomica.model.SourceCompartment.name"]], "outflow (atomica.model.sourcecompartment property)": [[64, "atomica.model.SourceCompartment.outflow"]], "plot() (atomica.model.sourcecompartment method)": [[64, "atomica.model.SourceCompartment.plot"]], "pop (atomica.model.sourcecompartment attribute)": [[64, "atomica.model.SourceCompartment.pop"]], "preallocate() (atomica.model.sourcecompartment method)": [[64, "atomica.model.SourceCompartment.preallocate"]], "resolve_outflows() (atomica.model.sourcecompartment method)": [[64, "atomica.model.SourceCompartment.resolve_outflows"]], "set_dynamic() (atomica.model.sourcecompartment method)": [[64, "atomica.model.SourceCompartment.set_dynamic"]], "units (atomica.model.sourcecompartment attribute)": [[64, "atomica.model.SourceCompartment.units"]], "update() (atomica.model.sourcecompartment method)": [[64, "atomica.model.SourceCompartment.update"]], "timedcompartment (class in atomica.model)": [[65, "atomica.model.TimedCompartment"]], "connect() (atomica.model.timedcompartment method)": [[65, "atomica.model.TimedCompartment.connect"]], "flush_link (atomica.model.timedcompartment attribute)": [[65, "atomica.model.TimedCompartment.flush_link"]], "id (atomica.model.timedcompartment attribute)": [[65, "atomica.model.TimedCompartment.id"]], "name (atomica.model.timedcompartment property)": [[65, "atomica.model.TimedCompartment.name"]], "outflow (atomica.model.timedcompartment property)": [[65, "atomica.model.TimedCompartment.outflow"]], "parameter (atomica.model.timedcompartment attribute)": [[65, "atomica.model.TimedCompartment.parameter"]], "plot() (atomica.model.timedcompartment method)": [[65, "atomica.model.TimedCompartment.plot"]], "pop (atomica.model.timedcompartment attribute)": [[65, "atomica.model.TimedCompartment.pop"]], "preallocate() (atomica.model.timedcompartment method)": [[65, "atomica.model.TimedCompartment.preallocate"]], "resolve_outflows() (atomica.model.timedcompartment method)": [[65, "atomica.model.TimedCompartment.resolve_outflows"]], "set_dynamic() (atomica.model.timedcompartment method)": [[65, "atomica.model.TimedCompartment.set_dynamic"]], "units (atomica.model.timedcompartment attribute)": [[65, "atomica.model.TimedCompartment.units"]], "update() (atomica.model.timedcompartment method)": [[65, "atomica.model.TimedCompartment.update"]], "vals (atomica.model.timedcompartment property)": [[65, "atomica.model.TimedCompartment.vals"]], "timedlink (class in atomica.model)": [[66, "atomica.model.TimedLink"]], "create() (atomica.model.timedlink class method)": [[66, "atomica.model.TimedLink.create"]], "id (atomica.model.timedlink attribute)": [[66, "atomica.model.TimedLink.id"]], "name (atomica.model.timedlink property)": [[66, "atomica.model.TimedLink.name"]], "plot() (atomica.model.timedlink method)": [[66, "atomica.model.TimedLink.plot"]], "pop (atomica.model.timedlink attribute)": [[66, "atomica.model.TimedLink.pop"]], "preallocate() (atomica.model.timedlink method)": [[66, "atomica.model.TimedLink.preallocate"]], "set_dynamic() (atomica.model.timedlink method)": [[66, "atomica.model.TimedLink.set_dynamic"]], "units (atomica.model.timedlink attribute)": [[66, "atomica.model.TimedLink.units"]], "update() (atomica.model.timedlink method)": [[66, "atomica.model.TimedLink.update"]], "vals (atomica.model.timedlink property)": [[66, "atomica.model.TimedLink.vals"]], "variable (class in atomica.model)": [[67, "atomica.model.Variable"]], "id (atomica.model.variable attribute)": [[67, "atomica.model.Variable.id"]], "name (atomica.model.variable property)": [[67, "atomica.model.Variable.name"]], "plot() (atomica.model.variable method)": [[67, "atomica.model.Variable.plot"]], "pop (atomica.model.variable attribute)": [[67, "atomica.model.Variable.pop"]], "preallocate() (atomica.model.variable method)": [[67, "atomica.model.Variable.preallocate"]], "set_dynamic() (atomica.model.variable method)": [[67, "atomica.model.Variable.set_dynamic"]], "units (atomica.model.variable attribute)": [[67, "atomica.model.Variable.units"]], "update() (atomica.model.variable method)": [[67, "atomica.model.Variable.update"]], "run_model() (in module atomica.model)": [[68, "atomica.model.run_model"]], "atomica.optimization": [[69, "module-atomica.optimization"]], "adjustable (class in atomica.optimization)": [[70, "atomica.optimization.Adjustable"]], "get_hard_bounds() (atomica.optimization.adjustable method)": [[70, "atomica.optimization.Adjustable.get_hard_bounds"]], "adjustment (class in atomica.optimization)": [[71, "atomica.optimization.Adjustment"]], "adjustables (atomica.optimization.adjustment attribute)": [[71, "atomica.optimization.Adjustment.adjustables"]], "get_initialization() (atomica.optimization.adjustment method)": [[71, "atomica.optimization.Adjustment.get_initialization"]], "atleastmeasurable (class in atomica.optimization)": [[72, "atomica.optimization.AtLeastMeasurable"]], "get_baseline() (atomica.optimization.atleastmeasurable method)": [[72, "atomica.optimization.AtLeastMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.atleastmeasurable method)": [[72, "atomica.optimization.AtLeastMeasurable.get_objective_val"]], "atmostmeasurable (class in atomica.optimization)": [[73, "atomica.optimization.AtMostMeasurable"]], "get_baseline() (atomica.optimization.atmostmeasurable method)": [[73, "atomica.optimization.AtMostMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.atmostmeasurable method)": [[73, "atomica.optimization.AtMostMeasurable.get_objective_val"]], "constraint (class in atomica.optimization)": [[74, "atomica.optimization.Constraint"]], "constrain_instructions() (atomica.optimization.constraint method)": [[74, "atomica.optimization.Constraint.constrain_instructions"]], "get_hard_constraint() (atomica.optimization.constraint method)": [[74, "atomica.optimization.Constraint.get_hard_constraint"]], "decreasebymeasurable (class in atomica.optimization)": [[75, "atomica.optimization.DecreaseByMeasurable"]], "get_baseline() (atomica.optimization.decreasebymeasurable method)": [[75, "atomica.optimization.DecreaseByMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.decreasebymeasurable method)": [[75, "atomica.optimization.DecreaseByMeasurable.get_objective_val"]], "exponentialspendingadjustment (class in atomica.optimization)": [[76, "atomica.optimization.ExponentialSpendingAdjustment"]], "adjustables (atomica.optimization.exponentialspendingadjustment attribute)": [[76, "atomica.optimization.ExponentialSpendingAdjustment.adjustables"]], "get_initialization() (atomica.optimization.exponentialspendingadjustment method)": [[76, "atomica.optimization.ExponentialSpendingAdjustment.get_initialization"]], "failedconstraint": [[77, "atomica.optimization.FailedConstraint"]], "increasebymeasurable (class in atomica.optimization)": [[78, "atomica.optimization.IncreaseByMeasurable"]], "get_baseline() (atomica.optimization.increasebymeasurable method)": [[78, "atomica.optimization.IncreaseByMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.increasebymeasurable method)": [[78, "atomica.optimization.IncreaseByMeasurable.get_objective_val"]], "invalidinitialconditions": [[79, "atomica.optimization.InvalidInitialConditions"]], "maximizecascadeconversionrate (class in atomica.optimization)": [[80, "atomica.optimization.MaximizeCascadeConversionRate"]], "get_baseline() (atomica.optimization.maximizecascadeconversionrate method)": [[80, "atomica.optimization.MaximizeCascadeConversionRate.get_baseline"]], "get_objective_val() (atomica.optimization.maximizecascadeconversionrate method)": [[80, "atomica.optimization.MaximizeCascadeConversionRate.get_objective_val"]], "maximizecascadestage (class in atomica.optimization)": [[81, "atomica.optimization.MaximizeCascadeStage"]], "get_baseline() (atomica.optimization.maximizecascadestage method)": [[81, "atomica.optimization.MaximizeCascadeStage.get_baseline"]], "get_objective_val() (atomica.optimization.maximizecascadestage method)": [[81, "atomica.optimization.MaximizeCascadeStage.get_objective_val"]], "maximizemeasurable (class in atomica.optimization)": [[82, "atomica.optimization.MaximizeMeasurable"]], "get_baseline() (atomica.optimization.maximizemeasurable method)": [[82, "atomica.optimization.MaximizeMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.maximizemeasurable method)": [[82, "atomica.optimization.MaximizeMeasurable.get_objective_val"]], "measurable (class in atomica.optimization)": [[83, "atomica.optimization.Measurable"]], "get_baseline() (atomica.optimization.measurable method)": [[83, "atomica.optimization.Measurable.get_baseline"]], "get_objective_val() (atomica.optimization.measurable method)": [[83, "atomica.optimization.Measurable.get_objective_val"]], "minimizemeasurable (class in atomica.optimization)": [[84, "atomica.optimization.MinimizeMeasurable"]], "get_baseline() (atomica.optimization.minimizemeasurable method)": [[84, "atomica.optimization.MinimizeMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.minimizemeasurable method)": [[84, "atomica.optimization.MinimizeMeasurable.get_objective_val"]], "optimization (class in atomica.optimization)": [[85, "atomica.optimization.Optimization"]], "compute_objective() (atomica.optimization.optimization method)": [[85, "atomica.optimization.Optimization.compute_objective"]], "constrain_instructions() (atomica.optimization.optimization method)": [[85, "atomica.optimization.Optimization.constrain_instructions"]], "get_adjustment() (atomica.optimization.optimization method)": [[85, "atomica.optimization.Optimization.get_adjustment"]], "get_baselines() (atomica.optimization.optimization method)": [[85, "atomica.optimization.Optimization.get_baselines"]], "get_hard_constraints() (atomica.optimization.optimization method)": [[85, "atomica.optimization.Optimization.get_hard_constraints"]], "get_initialization() (atomica.optimization.optimization method)": [[85, "atomica.optimization.Optimization.get_initialization"]], "maxiters (atomica.optimization.optimization attribute)": [[85, "atomica.optimization.Optimization.maxiters"]], "maxtime (atomica.optimization.optimization attribute)": [[85, "atomica.optimization.Optimization.maxtime"]], "method (atomica.optimization.optimization attribute)": [[85, "atomica.optimization.Optimization.method"]], "update_instructions() (atomica.optimization.optimization method)": [[85, "atomica.optimization.Optimization.update_instructions"]], "pairedlinearspendingadjustment (class in atomica.optimization)": [[86, "atomica.optimization.PairedLinearSpendingAdjustment"]], "adjustables (atomica.optimization.pairedlinearspendingadjustment attribute)": [[86, "atomica.optimization.PairedLinearSpendingAdjustment.adjustables"]], "get_initialization() (atomica.optimization.pairedlinearspendingadjustment method)": [[86, "atomica.optimization.PairedLinearSpendingAdjustment.get_initialization"]], "spendingadjustment (class in atomica.optimization)": [[87, "atomica.optimization.SpendingAdjustment"]], "adjustables (atomica.optimization.spendingadjustment attribute)": [[87, "atomica.optimization.SpendingAdjustment.adjustables"]], "get_initialization() (atomica.optimization.spendingadjustment method)": [[87, "atomica.optimization.SpendingAdjustment.get_initialization"]], "spendingpackageadjustment (class in atomica.optimization)": [[88, "atomica.optimization.SpendingPackageAdjustment"]], "adjust_total_spend (atomica.optimization.spendingpackageadjustment property)": [[88, "atomica.optimization.SpendingPackageAdjustment.adjust_total_spend"]], "adjustables (atomica.optimization.spendingpackageadjustment attribute)": [[88, "atomica.optimization.SpendingPackageAdjustment.adjustables"]], "get_initialization() (atomica.optimization.spendingpackageadjustment method)": [[88, "atomica.optimization.SpendingPackageAdjustment.get_initialization"]], "starttimeadjustment (class in atomica.optimization)": [[89, "atomica.optimization.StartTimeAdjustment"]], "adjustables (atomica.optimization.starttimeadjustment attribute)": [[89, "atomica.optimization.StartTimeAdjustment.adjustables"]], "get_initialization() (atomica.optimization.starttimeadjustment method)": [[89, "atomica.optimization.StartTimeAdjustment.get_initialization"]], "totalspendconstraint (class in atomica.optimization)": [[90, "atomica.optimization.TotalSpendConstraint"]], "constrain_instructions() (atomica.optimization.totalspendconstraint method)": [[90, "atomica.optimization.TotalSpendConstraint.constrain_instructions"]], "get_hard_constraint() (atomica.optimization.totalspendconstraint method)": [[90, "atomica.optimization.TotalSpendConstraint.get_hard_constraint"]], "unresolvableconstraint": [[91, "atomica.optimization.UnresolvableConstraint"]], "constrain_sum_bounded() (in module atomica.optimization)": [[92, "atomica.optimization.constrain_sum_bounded"]], "optimize() (in module atomica.optimization)": [[93, "atomica.optimization.optimize"]], "atomica.parameters": [[94, "module-atomica.parameters"]], "parameter (class in atomica.parameters)": [[95, "atomica.parameters.Parameter"]], "has_values() (atomica.parameters.parameter method)": [[95, "atomica.parameters.Parameter.has_values"]], "interpolate() (atomica.parameters.parameter method)": [[95, "atomica.parameters.Parameter.interpolate"]], "pops (atomica.parameters.parameter property)": [[95, "atomica.parameters.Parameter.pops"]], "sample() (atomica.parameters.parameter method)": [[95, "atomica.parameters.Parameter.sample"]], "smooth() (atomica.parameters.parameter method)": [[95, "atomica.parameters.Parameter.smooth"]], "parameterset (class in atomica.parameters)": [[96, "atomica.parameters.ParameterSet"]], "all_pars() (atomica.parameters.parameterset method)": [[96, "atomica.parameters.ParameterSet.all_pars"]], "calibration_spreadsheet() (atomica.parameters.parameterset method)": [[96, "atomica.parameters.ParameterSet.calibration_spreadsheet"]], "get_par() (atomica.parameters.parameterset method)": [[96, "atomica.parameters.ParameterSet.get_par"]], "load_calibration() (atomica.parameters.parameterset method)": [[96, "atomica.parameters.ParameterSet.load_calibration"]], "sample() (atomica.parameters.parameterset method)": [[96, "atomica.parameters.ParameterSet.sample"]], "save_calibration() (atomica.parameters.parameterset method)": [[96, "atomica.parameters.ParameterSet.save_calibration"]], "y_factors (atomica.parameters.parameterset property)": [[96, "atomica.parameters.ParameterSet.y_factors"]], "atomica.plotting": [[97, "module-atomica.plotting"]], "plotdata (class in atomica.plotting)": [[98, "atomica.plotting.PlotData"]], "__getitem__() (atomica.plotting.plotdata method)": [[98, "atomica.plotting.PlotData.__getitem__"]], "accumulate() (atomica.plotting.plotdata method)": [[98, "atomica.plotting.PlotData.accumulate"]], "interpolate() (atomica.plotting.plotdata method)": [[98, "atomica.plotting.PlotData.interpolate"]], "programs() (atomica.plotting.plotdata static method)": [[98, "atomica.plotting.PlotData.programs"]], "set_colors() (atomica.plotting.plotdata method)": [[98, "atomica.plotting.PlotData.set_colors"]], "time_aggregate() (atomica.plotting.plotdata method)": [[98, "atomica.plotting.PlotData.time_aggregate"]], "tvals() (atomica.plotting.plotdata method)": [[98, "atomica.plotting.PlotData.tvals"]], "series (class in atomica.plotting)": [[99, "atomica.plotting.Series"]], "data_label (atomica.plotting.series attribute)": [[99, "atomica.plotting.Series.data_label"]], "data_pop (atomica.plotting.series attribute)": [[99, "atomica.plotting.Series.data_pop"]], "interpolate() (atomica.plotting.series method)": [[99, "atomica.plotting.Series.interpolate"]], "timescale (atomica.plotting.series attribute)": [[99, "atomica.plotting.Series.timescale"]], "unit_string (atomica.plotting.series property)": [[99, "atomica.plotting.Series.unit_string"]], "units (atomica.plotting.series attribute)": [[99, "atomica.plotting.Series.units"]], "plot_bars() (in module atomica.plotting)": [[100, "atomica.plotting.plot_bars"]], "plot_legend() (in module atomica.plotting)": [[101, "atomica.plotting.plot_legend"]], "plot_series() (in module atomica.plotting)": [[102, "atomica.plotting.plot_series"]], "relabel_legend() (in module atomica.plotting)": [[103, "atomica.plotting.relabel_legend"]], "reorder_legend() (in module atomica.plotting)": [[104, "atomica.plotting.reorder_legend"]], "save_figs() (in module atomica.plotting)": [[105, "atomica.plotting.save_figs"]], "atomica.programs": [[106, "module-atomica.programs"]], "covout (class in atomica.programs)": [[107, "atomica.programs.Covout"]], "compute_impact_interaction() (atomica.programs.covout method)": [[107, "atomica.programs.Covout.compute_impact_interaction"]], "get_outcome() (atomica.programs.covout method)": [[107, "atomica.programs.Covout.get_outcome"]], "n_progs (atomica.programs.covout property)": [[107, "atomica.programs.Covout.n_progs"]], "sample() (atomica.programs.covout method)": [[107, "atomica.programs.Covout.sample"]], "update_outcomes() (atomica.programs.covout method)": [[107, "atomica.programs.Covout.update_outcomes"]], "program (class in atomica.programs)": [[108, "atomica.programs.Program"]], "baseline_spend (atomica.programs.program attribute)": [[108, "atomica.programs.Program.baseline_spend"]], "capacity_constraint (atomica.programs.program attribute)": [[108, "atomica.programs.Program.capacity_constraint"]], "coverage (atomica.programs.program attribute)": [[108, "atomica.programs.Program.coverage"]], "get_capacity() (atomica.programs.program method)": [[108, "atomica.programs.Program.get_capacity"]], "get_prop_covered() (atomica.programs.program method)": [[108, "atomica.programs.Program.get_prop_covered"]], "get_spend() (atomica.programs.program method)": [[108, "atomica.programs.Program.get_spend"]], "is_one_off (atomica.programs.program property)": [[108, "atomica.programs.Program.is_one_off"]], "label (atomica.programs.program attribute)": [[108, "atomica.programs.Program.label"]], "name (atomica.programs.program attribute)": [[108, "atomica.programs.Program.name"]], "sample() (atomica.programs.program method)": [[108, "atomica.programs.Program.sample"]], "saturation (atomica.programs.program attribute)": [[108, "atomica.programs.Program.saturation"]], "spend_data (atomica.programs.program attribute)": [[108, "atomica.programs.Program.spend_data"]], "target_comps (atomica.programs.program attribute)": [[108, "atomica.programs.Program.target_comps"]], "target_pops (atomica.programs.program attribute)": [[108, "atomica.programs.Program.target_pops"]], "unit_cost (atomica.programs.program attribute)": [[108, "atomica.programs.Program.unit_cost"]], "programinstructions (class in atomica.programs)": [[109, "atomica.programs.ProgramInstructions"]], "scale_alloc() (atomica.programs.programinstructions method)": [[109, "atomica.programs.ProgramInstructions.scale_alloc"]], "programset (class in atomica.programs)": [[110, "atomica.programs.ProgramSet"]], "add_comp() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.add_comp"]], "add_par() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.add_par"]], "add_pop() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.add_pop"]], "add_program() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.add_program"]], "from_spreadsheet() (atomica.programs.programset class method)": [[110, "atomica.programs.ProgramSet.from_spreadsheet"]], "get_alloc() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.get_alloc"]], "get_capacities() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.get_capacities"]], "get_outcomes() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.get_outcomes"]], "get_prop_coverage() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.get_prop_coverage"]], "new() (atomica.programs.programset static method)": [[110, "atomica.programs.ProgramSet.new"]], "remove_comp() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.remove_comp"]], "remove_par() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.remove_par"]], "remove_pop() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.remove_pop"]], "remove_program() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.remove_program"]], "sample() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.sample"]], "to_spreadsheet() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.to_spreadsheet"]], "to_workbook() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.to_workbook"]], "validate() (atomica.programs.programset method)": [[110, "atomica.programs.ProgramSet.validate"]], "atomica.project": [[111, "module-atomica.project"]], "project (class in atomica.project)": [[112, "atomica.project.Project"]], "calibrate() (atomica.project.project method)": [[112, "atomica.project.Project.calibrate"]], "create_databook() (atomica.project.project method)": [[112, "atomica.project.Project.create_databook"]], "load() (atomica.project.project static method)": [[112, "atomica.project.Project.load"]], "load_databook() (atomica.project.project method)": [[112, "atomica.project.Project.load_databook"]], "load_progbook() (atomica.project.project method)": [[112, "atomica.project.Project.load_progbook"]], "make_parset() (atomica.project.project method)": [[112, "atomica.project.Project.make_parset"]], "make_progbook() (atomica.project.project method)": [[112, "atomica.project.Project.make_progbook"]], "make_scenario() (atomica.project.project method)": [[112, "atomica.project.Project.make_scenario"]], "optim() (atomica.project.project method)": [[112, "atomica.project.Project.optim"]], "parset() (atomica.project.project method)": [[112, "atomica.project.Project.parset"]], "parsets (atomica.project.project attribute)": [[112, "atomica.project.Project.parsets"]], "progset() (atomica.project.project method)": [[112, "atomica.project.Project.progset"]], "result() (atomica.project.project method)": [[112, "atomica.project.Project.result"]], "run_optimization() (atomica.project.project method)": [[112, "atomica.project.Project.run_optimization"]], "run_sampled_sims() (atomica.project.project method)": [[112, "atomica.project.Project.run_sampled_sims"]], "run_scenarios() (atomica.project.project method)": [[112, "atomica.project.Project.run_scenarios"]], "run_sim() (atomica.project.project method)": [[112, "atomica.project.Project.run_sim"]], "save() (atomica.project.project method)": [[112, "atomica.project.Project.save"]], "scen() (atomica.project.project method)": [[112, "atomica.project.Project.scen"]], "update_settings() (atomica.project.project method)": [[112, "atomica.project.Project.update_settings"]], "projectsettings (class in atomica.project)": [[113, "atomica.project.ProjectSettings"]], "tvec (atomica.project.projectsettings property)": [[113, "atomica.project.ProjectSettings.tvec"]], "update_time_vector() (atomica.project.projectsettings method)": [[113, "atomica.project.ProjectSettings.update_time_vector"]], "atomica.reconciliation": [[114, "module-atomica.reconciliation"]], "reconcile() (in module atomica.reconciliation)": [[115, "atomica.reconciliation.reconcile"]], "atomica.results": [[116, "module-atomica.results"]], "ensemble (class in atomica.results)": [[117, "atomica.results.Ensemble"]], "add() (atomica.results.ensemble method)": [[117, "atomica.results.Ensemble.add"]], "baseline (atomica.results.ensemble attribute)": [[117, "atomica.results.Ensemble.baseline"]], "boxplot() (atomica.results.ensemble method)": [[117, "atomica.results.Ensemble.boxplot"]], "mapping_function (atomica.results.ensemble attribute)": [[117, "atomica.results.Ensemble.mapping_function"]], "n_samples (atomica.results.ensemble property)": [[117, "atomica.results.Ensemble.n_samples"]], "outputs (atomica.results.ensemble property)": [[117, "atomica.results.Ensemble.outputs"]], "plot_bars() (atomica.results.ensemble method)": [[117, "atomica.results.Ensemble.plot_bars"]], "plot_distribution() (atomica.results.ensemble method)": [[117, "atomica.results.Ensemble.plot_distribution"]], "plot_series() (atomica.results.ensemble method)": [[117, "atomica.results.Ensemble.plot_series"]], "pops (atomica.results.ensemble property)": [[117, "atomica.results.Ensemble.pops"]], "results (atomica.results.ensemble property)": [[117, "atomica.results.Ensemble.results"]], "run_sims() (atomica.results.ensemble method)": [[117, "atomica.results.Ensemble.run_sims"]], "samples (atomica.results.ensemble attribute)": [[117, "atomica.results.Ensemble.samples"]], "set_baseline() (atomica.results.ensemble method)": [[117, "atomica.results.Ensemble.set_baseline"]], "tvec (atomica.results.ensemble property)": [[117, "atomica.results.Ensemble.tvec"]], "update() (atomica.results.ensemble method)": [[117, "atomica.results.Ensemble.update"]], "result (class in atomica.results)": [[118, "atomica.results.Result"]], "charac_names() (atomica.results.result method)": [[118, "atomica.results.Result.charac_names"]], "check_for_nans() (atomica.results.result method)": [[118, "atomica.results.Result.check_for_nans"]], "comp_names() (atomica.results.result method)": [[118, "atomica.results.Result.comp_names"]], "dt (atomica.results.result property)": [[118, "atomica.results.Result.dt"]], "export_raw() (atomica.results.result method)": [[118, "atomica.results.Result.export_raw"]], "framework (atomica.results.result property)": [[118, "atomica.results.Result.framework"]], "get_alloc() (atomica.results.result method)": [[118, "atomica.results.Result.get_alloc"]], "get_coverage() (atomica.results.result method)": [[118, "atomica.results.Result.get_coverage"]], "get_equivalent_alloc() (atomica.results.result method)": [[118, "atomica.results.Result.get_equivalent_alloc"]], "get_variable() (atomica.results.result method)": [[118, "atomica.results.Result.get_variable"]], "link_names() (atomica.results.result method)": [[118, "atomica.results.Result.link_names"]], "par_names() (atomica.results.result method)": [[118, "atomica.results.Result.par_names"]], "plot() (atomica.results.result method)": [[118, "atomica.results.Result.plot"]], "pop_labels (atomica.results.result property)": [[118, "atomica.results.Result.pop_labels"]], "t (atomica.results.result property)": [[118, "atomica.results.Result.t"]], "used_programs (atomica.results.result property)": [[118, "atomica.results.Result.used_programs"]], "export_results() (in module atomica.results)": [[119, "atomica.results.export_results"]], "atomica.scenarios": [[120, "module-atomica.scenarios"]], "budgetscenario (class in atomica.scenarios)": [[121, "atomica.scenarios.BudgetScenario"]], "active (atomica.scenarios.budgetscenario attribute)": [[121, "atomica.scenarios.BudgetScenario.active"]], "get_instructions() (atomica.scenarios.budgetscenario method)": [[121, "atomica.scenarios.BudgetScenario.get_instructions"]], "get_parset() (atomica.scenarios.budgetscenario method)": [[121, "atomica.scenarios.BudgetScenario.get_parset"]], "get_progset() (atomica.scenarios.budgetscenario method)": [[121, "atomica.scenarios.BudgetScenario.get_progset"]], "parsetname (atomica.scenarios.budgetscenario attribute)": [[121, "atomica.scenarios.BudgetScenario.parsetname"]], "progsetname (atomica.scenarios.budgetscenario attribute)": [[121, "atomica.scenarios.BudgetScenario.progsetname"]], "run() (atomica.scenarios.budgetscenario method)": [[121, "atomica.scenarios.BudgetScenario.run"]], "combinedscenario (class in atomica.scenarios)": [[122, "atomica.scenarios.CombinedScenario"]], "active (atomica.scenarios.combinedscenario attribute)": [[122, "atomica.scenarios.CombinedScenario.active"]], "get_instructions() (atomica.scenarios.combinedscenario method)": [[122, "atomica.scenarios.CombinedScenario.get_instructions"]], "get_parset() (atomica.scenarios.combinedscenario method)": [[122, "atomica.scenarios.CombinedScenario.get_parset"]], "get_progset() (atomica.scenarios.combinedscenario method)": [[122, "atomica.scenarios.CombinedScenario.get_progset"]], "interpolation (atomica.scenarios.combinedscenario attribute)": [[122, "atomica.scenarios.CombinedScenario.interpolation"]], "parsetname (atomica.scenarios.combinedscenario attribute)": [[122, "atomica.scenarios.CombinedScenario.parsetname"]], "progsetname (atomica.scenarios.combinedscenario attribute)": [[122, "atomica.scenarios.CombinedScenario.progsetname"]], "run() (atomica.scenarios.combinedscenario method)": [[122, "atomica.scenarios.CombinedScenario.run"]], "scenario_values (atomica.scenarios.combinedscenario attribute)": [[122, "atomica.scenarios.CombinedScenario.scenario_values"]], "coveragescenario (class in atomica.scenarios)": [[123, "atomica.scenarios.CoverageScenario"]], "active (atomica.scenarios.coveragescenario attribute)": [[123, "atomica.scenarios.CoverageScenario.active"]], "get_instructions() (atomica.scenarios.coveragescenario method)": [[123, "atomica.scenarios.CoverageScenario.get_instructions"]], "get_parset() (atomica.scenarios.coveragescenario method)": [[123, "atomica.scenarios.CoverageScenario.get_parset"]], "get_progset() (atomica.scenarios.coveragescenario method)": [[123, "atomica.scenarios.CoverageScenario.get_progset"]], "parsetname (atomica.scenarios.coveragescenario attribute)": [[123, "atomica.scenarios.CoverageScenario.parsetname"]], "progsetname (atomica.scenarios.coveragescenario attribute)": [[123, "atomica.scenarios.CoverageScenario.progsetname"]], "run() (atomica.scenarios.coveragescenario method)": [[123, "atomica.scenarios.CoverageScenario.run"]], "parameterscenario (class in atomica.scenarios)": [[124, "atomica.scenarios.ParameterScenario"]], "active (atomica.scenarios.parameterscenario attribute)": [[124, "atomica.scenarios.ParameterScenario.active"]], "add() (atomica.scenarios.parameterscenario method)": [[124, "atomica.scenarios.ParameterScenario.add"]], "get_instructions() (atomica.scenarios.parameterscenario method)": [[124, "atomica.scenarios.ParameterScenario.get_instructions"]], "get_parset() (atomica.scenarios.parameterscenario method)": [[124, "atomica.scenarios.ParameterScenario.get_parset"]], "get_progset() (atomica.scenarios.parameterscenario method)": [[124, "atomica.scenarios.ParameterScenario.get_progset"]], "interpolation (atomica.scenarios.parameterscenario attribute)": [[124, "atomica.scenarios.ParameterScenario.interpolation"]], "parsetname (atomica.scenarios.parameterscenario attribute)": [[124, "atomica.scenarios.ParameterScenario.parsetname"]], "progsetname (atomica.scenarios.parameterscenario attribute)": [[124, "atomica.scenarios.ParameterScenario.progsetname"]], "run() (atomica.scenarios.parameterscenario method)": [[124, "atomica.scenarios.ParameterScenario.run"]], "scenario_values (atomica.scenarios.parameterscenario attribute)": [[124, "atomica.scenarios.ParameterScenario.scenario_values"]], "scenario (class in atomica.scenarios)": [[125, "atomica.scenarios.Scenario"]], "active (atomica.scenarios.scenario attribute)": [[125, "atomica.scenarios.Scenario.active"]], "get_instructions() (atomica.scenarios.scenario method)": [[125, "atomica.scenarios.Scenario.get_instructions"]], "get_parset() (atomica.scenarios.scenario method)": [[125, "atomica.scenarios.Scenario.get_parset"]], "get_progset() (atomica.scenarios.scenario method)": [[125, "atomica.scenarios.Scenario.get_progset"]], "parsetname (atomica.scenarios.scenario attribute)": [[125, "atomica.scenarios.Scenario.parsetname"]], "progsetname (atomica.scenarios.scenario attribute)": [[125, "atomica.scenarios.Scenario.progsetname"]], "run() (atomica.scenarios.scenario method)": [[125, "atomica.scenarios.Scenario.run"]], "atomica.system": [[126, "module-atomica.system"]], "frameworksettings (class in atomica.system)": [[127, "atomica.system.FrameworkSettings"]], "notfounderror": [[128, "atomica.system.NotFoundError"]], "atomica_path() (in module atomica.system)": [[129, "atomica.system.atomica_path"]], "atomica.utils": [[130, "module-atomica.utils"]], "ndict (class in atomica.utils)": [[131, "atomica.utils.NDict"]], "__add__() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.__add__"]], "append() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.append"]], "clear() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.clear"]], "copy() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.copy"]], "dict_items() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.dict_items"]], "dict_keys() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.dict_keys"]], "dict_values() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.dict_values"]], "disp() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.disp"]], "enumitems() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.enumitems"]], "enumkeys() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.enumkeys"]], "enumvals() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.enumvals"]], "enumvalues() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.enumvalues"]], "export() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.export"]], "filter() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.filter"]], "filtervals() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.filtervals"]], "findbykey() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.findbykey"]], "findbyval() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.findbyval"]], "findkeys() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.findkeys"]], "fromeach() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.fromeach"]], "fromkeys() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.fromkeys"]], "get() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.get"]], "getnested() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.getnested"]], "index() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.index"]], "insert() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.insert"]], "items() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.items"]], "iteritems() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.iteritems"]], "iternested() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.iternested"]], "keys() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.keys"]], "make() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.make"]], "makefrom() (atomica.utils.ndict class method)": [[131, "atomica.utils.NDict.makefrom"]], "makenested() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.makenested"]], "map() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.map"]], "pop() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.pop"]], "popitem() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.popitem"]], "promote() (atomica.utils.ndict class method)": [[131, "atomica.utils.NDict.promote"]], "remove() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.remove"]], "rename() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.rename"]], "reverse() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.reverse"]], "reversed() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.reversed"]], "setdefault() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.setdefault"]], "setitem() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.setitem"]], "setnested() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.setnested"]], "sort() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.sort"]], "sorted() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.sorted"]], "toeach() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.toeach"]], "update() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.update"]], "valind() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.valind"]], "values() (atomica.utils.ndict method)": [[131, "atomica.utils.NDict.values"]], "nameditem (class in atomica.utils)": [[132, "atomica.utils.NamedItem"]], "quiet (class in atomica.utils)": [[133, "atomica.utils.Quiet"]], "timeseries (class in atomica.utils)": [[134, "atomica.utils.TimeSeries"]], "assumption (atomica.utils.timeseries attribute)": [[134, "atomica.utils.TimeSeries.assumption"]], "copy() (atomica.utils.timeseries method)": [[134, "atomica.utils.TimeSeries.copy"]], "get() (atomica.utils.timeseries method)": [[134, "atomica.utils.TimeSeries.get"]], "get_arrays() (atomica.utils.timeseries method)": [[134, "atomica.utils.TimeSeries.get_arrays"]], "has_data (atomica.utils.timeseries property)": [[134, "atomica.utils.TimeSeries.has_data"]], "has_time_data (atomica.utils.timeseries property)": [[134, "atomica.utils.TimeSeries.has_time_data"]], "insert() (atomica.utils.timeseries method)": [[134, "atomica.utils.TimeSeries.insert"]], "interpolate() (atomica.utils.timeseries method)": [[134, "atomica.utils.TimeSeries.interpolate"]], "remove() (atomica.utils.timeseries method)": [[134, "atomica.utils.TimeSeries.remove"]], "remove_after() (atomica.utils.timeseries method)": [[134, "atomica.utils.TimeSeries.remove_after"]], "remove_before() (atomica.utils.timeseries method)": [[134, "atomica.utils.TimeSeries.remove_before"]], "remove_between() (atomica.utils.timeseries method)": [[134, "atomica.utils.TimeSeries.remove_between"]], "sample() (atomica.utils.timeseries method)": [[134, "atomica.utils.TimeSeries.sample"]], "sigma (atomica.utils.timeseries attribute)": [[134, "atomica.utils.TimeSeries.sigma"]], "t (atomica.utils.timeseries attribute)": [[134, "atomica.utils.TimeSeries.t"]], "units (atomica.utils.timeseries attribute)": [[134, "atomica.utils.TimeSeries.units"]], "vals (atomica.utils.timeseries attribute)": [[134, "atomica.utils.TimeSeries.vals"]], "datetime_to_year() (in module atomica.utils)": [[135, "atomica.utils.datetime_to_year"]], "evaluate_plot_string() (in module atomica.utils)": [[136, "atomica.utils.evaluate_plot_string"]], "format_duration() (in module atomica.utils)": [[137, "atomica.utils.format_duration"]], "nested_loop() (in module atomica.utils)": [[138, "atomica.utils.nested_loop"]], "parallel_progress() (in module atomica.utils)": [[139, "atomica.utils.parallel_progress"]], "parent_dir() (in module atomica.utils)": [[140, "atomica.utils.parent_dir"]], "start_logging() (in module atomica.utils)": [[141, "atomica.utils.start_logging"]], "stop_logging() (in module atomica.utils)": [[142, "atomica.utils.stop_logging"]], "atomica.version": [[143, "module-atomica.version"]]}})