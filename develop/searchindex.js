Search.setIndex({"docnames": ["_autosummary/atomica", "_autosummary/atomica.calibration", "_autosummary/atomica.calibration.calibrate", "_autosummary/atomica.cascade", "_autosummary/atomica.cascade.CascadeEnsemble", "_autosummary/atomica.cascade.InvalidCascade", "_autosummary/atomica.cascade.cascade_summary", "_autosummary/atomica.cascade.get_cascade_data", "_autosummary/atomica.cascade.get_cascade_vals", "_autosummary/atomica.cascade.plot_cascade", "_autosummary/atomica.cascade.plot_multi_cascade", "_autosummary/atomica.cascade.plot_single_cascade", "_autosummary/atomica.cascade.plot_single_cascade_series", "_autosummary/atomica.cascade.sanitize_cascade", "_autosummary/atomica.cascade.sanitize_pops", "_autosummary/atomica.cascade.validate_cascade", "_autosummary/atomica.data", "_autosummary/atomica.data.ProjectData", "_autosummary/atomica.demos", "_autosummary/atomica.demos.demo", "_autosummary/atomica.demos.make_demo_scenarios", "_autosummary/atomica.excel", "_autosummary/atomica.excel.TimeDependentConnections", "_autosummary/atomica.excel.TimeDependentValuesEntry", "_autosummary/atomica.excel.apply_widths", "_autosummary/atomica.excel.cell_get_number", "_autosummary/atomica.excel.cell_get_string", "_autosummary/atomica.excel.copy_sheet", "_autosummary/atomica.excel.read_dataframes", "_autosummary/atomica.excel.read_tables", "_autosummary/atomica.excel.standard_formats", "_autosummary/atomica.excel.transfer_comments", "_autosummary/atomica.excel.update_widths", "_autosummary/atomica.excel.validate_category", "_autosummary/atomica.framework", "_autosummary/atomica.framework.InvalidFramework", "_autosummary/atomica.framework.ProjectFramework", "_autosummary/atomica.framework.generate_framework_doc", "_autosummary/atomica.function_parser", "_autosummary/atomica.function_parser.parse_function", "_autosummary/atomica.function_parser.sdiv", "_autosummary/atomica.function_parser.vector_max", "_autosummary/atomica.function_parser.vector_min", "_autosummary/atomica.migration", "_autosummary/atomica.migration.Migration", "_autosummary/atomica.migration.all_frameworks", "_autosummary/atomica.migration.all_progsets", "_autosummary/atomica.migration.all_results", "_autosummary/atomica.migration.migrate", "_autosummary/atomica.migration.migration", "_autosummary/atomica.migration.register_migration", "_autosummary/atomica.model", "_autosummary/atomica.model.BadInitialization", "_autosummary/atomica.model.Characteristic", "_autosummary/atomica.model.Compartment", "_autosummary/atomica.model.JunctionCompartment", "_autosummary/atomica.model.Link", "_autosummary/atomica.model.Model", "_autosummary/atomica.model.ModelError", "_autosummary/atomica.model.Parameter", "_autosummary/atomica.model.Population", "_autosummary/atomica.model.ResidualJunctionCompartment", "_autosummary/atomica.model.SinkCompartment", "_autosummary/atomica.model.SourceCompartment", "_autosummary/atomica.model.TimedCompartment", "_autosummary/atomica.model.TimedLink", "_autosummary/atomica.model.Variable", "_autosummary/atomica.model.run_model", "_autosummary/atomica.optimization", "_autosummary/atomica.optimization.Adjustable", "_autosummary/atomica.optimization.Adjustment", "_autosummary/atomica.optimization.AtLeastMeasurable", "_autosummary/atomica.optimization.AtMostMeasurable", "_autosummary/atomica.optimization.Constraint", "_autosummary/atomica.optimization.DecreaseByMeasurable", "_autosummary/atomica.optimization.ExponentialSpendingAdjustment", "_autosummary/atomica.optimization.FailedConstraint", "_autosummary/atomica.optimization.IncreaseByMeasurable", "_autosummary/atomica.optimization.InvalidInitialConditions", "_autosummary/atomica.optimization.MaximizeCascadeConversionRate", "_autosummary/atomica.optimization.MaximizeCascadeStage", "_autosummary/atomica.optimization.MaximizeMeasurable", "_autosummary/atomica.optimization.Measurable", "_autosummary/atomica.optimization.MinimizeMeasurable", "_autosummary/atomica.optimization.Optimization", "_autosummary/atomica.optimization.PairedLinearSpendingAdjustment", "_autosummary/atomica.optimization.SpendingAdjustment", "_autosummary/atomica.optimization.SpendingPackageAdjustment", "_autosummary/atomica.optimization.StartTimeAdjustment", "_autosummary/atomica.optimization.TotalSpendConstraint", "_autosummary/atomica.optimization.UnresolvableConstraint", "_autosummary/atomica.optimization.constrain_sum_bounded", "_autosummary/atomica.optimization.optimize", "_autosummary/atomica.parameters", "_autosummary/atomica.parameters.Parameter", "_autosummary/atomica.parameters.ParameterSet", "_autosummary/atomica.plotting", "_autosummary/atomica.plotting.PlotData", "_autosummary/atomica.plotting.Series", "_autosummary/atomica.plotting.plot_bars", "_autosummary/atomica.plotting.plot_legend", "_autosummary/atomica.plotting.plot_series", "_autosummary/atomica.plotting.relabel_legend", "_autosummary/atomica.plotting.reorder_legend", "_autosummary/atomica.plotting.save_figs", "_autosummary/atomica.programs", "_autosummary/atomica.programs.Covout", "_autosummary/atomica.programs.Program", "_autosummary/atomica.programs.ProgramInstructions", "_autosummary/atomica.programs.ProgramSet", "_autosummary/atomica.project", "_autosummary/atomica.project.Project", "_autosummary/atomica.project.ProjectSettings", "_autosummary/atomica.reconciliation", "_autosummary/atomica.reconciliation.reconcile", "_autosummary/atomica.results", "_autosummary/atomica.results.Ensemble", "_autosummary/atomica.results.Result", "_autosummary/atomica.results.export_results", "_autosummary/atomica.scenarios", "_autosummary/atomica.scenarios.BudgetScenario", "_autosummary/atomica.scenarios.CombinedScenario", "_autosummary/atomica.scenarios.CoverageScenario", "_autosummary/atomica.scenarios.ParameterScenario", "_autosummary/atomica.scenarios.Scenario", "_autosummary/atomica.system", "_autosummary/atomica.system.FrameworkSettings", "_autosummary/atomica.system.NotFoundError", "_autosummary/atomica.system.atomica_path", "_autosummary/atomica.utils", "_autosummary/atomica.utils.NDict", "_autosummary/atomica.utils.NamedItem", "_autosummary/atomica.utils.Quiet", "_autosummary/atomica.utils.TimeSeries", "_autosummary/atomica.utils.datetime_to_year", "_autosummary/atomica.utils.evaluate_plot_string", "_autosummary/atomica.utils.format_duration", "_autosummary/atomica.utils.nested_loop", "_autosummary/atomica.utils.parallel_progress", "_autosummary/atomica.utils.parent_dir", "_autosummary/atomica.utils.start_logging", "_autosummary/atomica.utils.stop_logging", "_autosummary/atomica.version", "examples/Basic-workflow", "examples/Frameworks", "examples/Model-dev", "examples/Model-user", "examples/Plot-Programs", "examples/Plot-Units", "examples/Plotting", "examples/Probability-Rescaling", "examples/Scenarios", "examples/Uncertainty", "examples/databooks/Databooks", "examples/index", "examples/override_cost_coverage/override_cost_coverage", "general/Compartment-Initialization", "general/Contextual-Overview", "general/File-Logging", "general/Optimization", "general/Parameters", "general/index", "general/junctions/Junctions", "general/population-types/Population-Types", "general/programs/Programs", "general/stochastic/stochastic", "general/timed-transitions/Timed-Transitions", "index", "library/cervicalcancer", "library/diabetes", "library/dt", "library/hiv", "library/hiv_dyn", "library/hypertension", "library/hypertension_dyn", "library/index", "library/service", "library/sir", "library/tb", "library/tb_simple", "library/tb_simple_dyn", "library/udt", "library/udt_dyn", "library/usdt", "tutorial/T1-Defining-a-model", "tutorial/T2-Calibration", "tutorial/T3-Multiple-populations", "tutorial/T4-Characteristics", "tutorial/T5-Junctions", "tutorial/T6-Programs", "tutorial/index"], "filenames": ["_autosummary/atomica.rst", "_autosummary/atomica.calibration.rst", "_autosummary/atomica.calibration.calibrate.rst", "_autosummary/atomica.cascade.rst", "_autosummary/atomica.cascade.CascadeEnsemble.rst", "_autosummary/atomica.cascade.InvalidCascade.rst", "_autosummary/atomica.cascade.cascade_summary.rst", "_autosummary/atomica.cascade.get_cascade_data.rst", "_autosummary/atomica.cascade.get_cascade_vals.rst", "_autosummary/atomica.cascade.plot_cascade.rst", "_autosummary/atomica.cascade.plot_multi_cascade.rst", "_autosummary/atomica.cascade.plot_single_cascade.rst", "_autosummary/atomica.cascade.plot_single_cascade_series.rst", "_autosummary/atomica.cascade.sanitize_cascade.rst", "_autosummary/atomica.cascade.sanitize_pops.rst", "_autosummary/atomica.cascade.validate_cascade.rst", "_autosummary/atomica.data.rst", "_autosummary/atomica.data.ProjectData.rst", "_autosummary/atomica.demos.rst", "_autosummary/atomica.demos.demo.rst", "_autosummary/atomica.demos.make_demo_scenarios.rst", "_autosummary/atomica.excel.rst", "_autosummary/atomica.excel.TimeDependentConnections.rst", "_autosummary/atomica.excel.TimeDependentValuesEntry.rst", "_autosummary/atomica.excel.apply_widths.rst", "_autosummary/atomica.excel.cell_get_number.rst", "_autosummary/atomica.excel.cell_get_string.rst", "_autosummary/atomica.excel.copy_sheet.rst", "_autosummary/atomica.excel.read_dataframes.rst", "_autosummary/atomica.excel.read_tables.rst", "_autosummary/atomica.excel.standard_formats.rst", "_autosummary/atomica.excel.transfer_comments.rst", "_autosummary/atomica.excel.update_widths.rst", "_autosummary/atomica.excel.validate_category.rst", "_autosummary/atomica.framework.rst", "_autosummary/atomica.framework.InvalidFramework.rst", "_autosummary/atomica.framework.ProjectFramework.rst", "_autosummary/atomica.framework.generate_framework_doc.rst", "_autosummary/atomica.function_parser.rst", "_autosummary/atomica.function_parser.parse_function.rst", "_autosummary/atomica.function_parser.sdiv.rst", "_autosummary/atomica.function_parser.vector_max.rst", "_autosummary/atomica.function_parser.vector_min.rst", "_autosummary/atomica.migration.rst", "_autosummary/atomica.migration.Migration.rst", "_autosummary/atomica.migration.all_frameworks.rst", "_autosummary/atomica.migration.all_progsets.rst", "_autosummary/atomica.migration.all_results.rst", "_autosummary/atomica.migration.migrate.rst", "_autosummary/atomica.migration.migration.rst", "_autosummary/atomica.migration.register_migration.rst", "_autosummary/atomica.model.rst", "_autosummary/atomica.model.BadInitialization.rst", "_autosummary/atomica.model.Characteristic.rst", "_autosummary/atomica.model.Compartment.rst", "_autosummary/atomica.model.JunctionCompartment.rst", "_autosummary/atomica.model.Link.rst", "_autosummary/atomica.model.Model.rst", "_autosummary/atomica.model.ModelError.rst", "_autosummary/atomica.model.Parameter.rst", "_autosummary/atomica.model.Population.rst", "_autosummary/atomica.model.ResidualJunctionCompartment.rst", "_autosummary/atomica.model.SinkCompartment.rst", "_autosummary/atomica.model.SourceCompartment.rst", "_autosummary/atomica.model.TimedCompartment.rst", "_autosummary/atomica.model.TimedLink.rst", "_autosummary/atomica.model.Variable.rst", "_autosummary/atomica.model.run_model.rst", "_autosummary/atomica.optimization.rst", "_autosummary/atomica.optimization.Adjustable.rst", "_autosummary/atomica.optimization.Adjustment.rst", "_autosummary/atomica.optimization.AtLeastMeasurable.rst", "_autosummary/atomica.optimization.AtMostMeasurable.rst", "_autosummary/atomica.optimization.Constraint.rst", "_autosummary/atomica.optimization.DecreaseByMeasurable.rst", "_autosummary/atomica.optimization.ExponentialSpendingAdjustment.rst", "_autosummary/atomica.optimization.FailedConstraint.rst", "_autosummary/atomica.optimization.IncreaseByMeasurable.rst", "_autosummary/atomica.optimization.InvalidInitialConditions.rst", "_autosummary/atomica.optimization.MaximizeCascadeConversionRate.rst", "_autosummary/atomica.optimization.MaximizeCascadeStage.rst", "_autosummary/atomica.optimization.MaximizeMeasurable.rst", "_autosummary/atomica.optimization.Measurable.rst", "_autosummary/atomica.optimization.MinimizeMeasurable.rst", "_autosummary/atomica.optimization.Optimization.rst", "_autosummary/atomica.optimization.PairedLinearSpendingAdjustment.rst", "_autosummary/atomica.optimization.SpendingAdjustment.rst", "_autosummary/atomica.optimization.SpendingPackageAdjustment.rst", "_autosummary/atomica.optimization.StartTimeAdjustment.rst", "_autosummary/atomica.optimization.TotalSpendConstraint.rst", "_autosummary/atomica.optimization.UnresolvableConstraint.rst", "_autosummary/atomica.optimization.constrain_sum_bounded.rst", "_autosummary/atomica.optimization.optimize.rst", "_autosummary/atomica.parameters.rst", "_autosummary/atomica.parameters.Parameter.rst", "_autosummary/atomica.parameters.ParameterSet.rst", "_autosummary/atomica.plotting.rst", "_autosummary/atomica.plotting.PlotData.rst", "_autosummary/atomica.plotting.Series.rst", "_autosummary/atomica.plotting.plot_bars.rst", "_autosummary/atomica.plotting.plot_legend.rst", "_autosummary/atomica.plotting.plot_series.rst", "_autosummary/atomica.plotting.relabel_legend.rst", "_autosummary/atomica.plotting.reorder_legend.rst", "_autosummary/atomica.plotting.save_figs.rst", "_autosummary/atomica.programs.rst", "_autosummary/atomica.programs.Covout.rst", "_autosummary/atomica.programs.Program.rst", "_autosummary/atomica.programs.ProgramInstructions.rst", "_autosummary/atomica.programs.ProgramSet.rst", "_autosummary/atomica.project.rst", "_autosummary/atomica.project.Project.rst", "_autosummary/atomica.project.ProjectSettings.rst", "_autosummary/atomica.reconciliation.rst", "_autosummary/atomica.reconciliation.reconcile.rst", "_autosummary/atomica.results.rst", "_autosummary/atomica.results.Ensemble.rst", "_autosummary/atomica.results.Result.rst", "_autosummary/atomica.results.export_results.rst", "_autosummary/atomica.scenarios.rst", "_autosummary/atomica.scenarios.BudgetScenario.rst", "_autosummary/atomica.scenarios.CombinedScenario.rst", "_autosummary/atomica.scenarios.CoverageScenario.rst", "_autosummary/atomica.scenarios.ParameterScenario.rst", "_autosummary/atomica.scenarios.Scenario.rst", "_autosummary/atomica.system.rst", "_autosummary/atomica.system.FrameworkSettings.rst", "_autosummary/atomica.system.NotFoundError.rst", "_autosummary/atomica.system.atomica_path.rst", "_autosummary/atomica.utils.rst", "_autosummary/atomica.utils.NDict.rst", "_autosummary/atomica.utils.NamedItem.rst", "_autosummary/atomica.utils.Quiet.rst", "_autosummary/atomica.utils.TimeSeries.rst", "_autosummary/atomica.utils.datetime_to_year.rst", "_autosummary/atomica.utils.evaluate_plot_string.rst", "_autosummary/atomica.utils.format_duration.rst", "_autosummary/atomica.utils.nested_loop.rst", "_autosummary/atomica.utils.parallel_progress.rst", "_autosummary/atomica.utils.parent_dir.rst", "_autosummary/atomica.utils.start_logging.rst", "_autosummary/atomica.utils.stop_logging.rst", "_autosummary/atomica.version.rst", "examples/Basic-workflow.ipynb", "examples/Frameworks.ipynb", "examples/Model-dev.ipynb", "examples/Model-user.ipynb", "examples/Plot-Programs.ipynb", "examples/Plot-Units.ipynb", "examples/Plotting.ipynb", "examples/Probability-Rescaling.ipynb", "examples/Scenarios.ipynb", "examples/Uncertainty.ipynb", "examples/databooks/Databooks.ipynb", "examples/index.rst", "examples/override_cost_coverage/override_cost_coverage.ipynb", "general/Compartment-Initialization.md", "general/Contextual-Overview.rst", "general/File-Logging.md", "general/Optimization.md", "general/Parameters.rst", "general/index.rst", "general/junctions/Junctions.rst", "general/population-types/Population-Types.rst", "general/programs/Programs.rst", "general/stochastic/stochastic.rst", "general/timed-transitions/Timed-Transitions.rst", "index.rst", "library/cervicalcancer.md", "library/diabetes.md", "library/dt.md", "library/hiv.md", "library/hiv_dyn.md", "library/hypertension.md", "library/hypertension_dyn.md", "library/index.rst", "library/service.md", "library/sir.md", "library/tb.md", "library/tb_simple.md", "library/tb_simple_dyn.md", "library/udt.md", "library/udt_dyn.md", "library/usdt.md", "tutorial/T1-Defining-a-model.ipynb", "tutorial/T2-Calibration.ipynb", "tutorial/T3-Multiple-populations.ipynb", "tutorial/T4-Characteristics.ipynb", "tutorial/T5-Junctions.ipynb", "tutorial/T6-Programs.ipynb", "tutorial/index.rst"], "titles": ["atomica", "atomica.calibration", "atomica.calibration.calibrate", "atomica.cascade", "atomica.cascade.CascadeEnsemble", "atomica.cascade.InvalidCascade", "atomica.cascade.cascade_summary", "atomica.cascade.get_cascade_data", "atomica.cascade.get_cascade_vals", "atomica.cascade.plot_cascade", "atomica.cascade.plot_multi_cascade", "atomica.cascade.plot_single_cascade", "atomica.cascade.plot_single_cascade_series", "atomica.cascade.sanitize_cascade", "atomica.cascade.sanitize_pops", "atomica.cascade.validate_cascade", "atomica.data", "atomica.data.ProjectData", "atomica.demos", "atomica.demos.demo", "atomica.demos.make_demo_scenarios", "atomica.excel", "atomica.excel.TimeDependentConnections", "atomica.excel.TimeDependentValuesEntry", "atomica.excel.apply_widths", "atomica.excel.cell_get_number", "atomica.excel.cell_get_string", "atomica.excel.copy_sheet", "atomica.excel.read_dataframes", "atomica.excel.read_tables", "atomica.excel.standard_formats", "atomica.excel.transfer_comments", "atomica.excel.update_widths", "atomica.excel.validate_category", "atomica.framework", "atomica.framework.InvalidFramework", "atomica.framework.ProjectFramework", "atomica.framework.generate_framework_doc", "atomica.function_parser", "atomica.function_parser.parse_function", "atomica.function_parser.sdiv", "atomica.function_parser.vector_max", "atomica.function_parser.vector_min", "atomica.migration", "atomica.migration.Migration", "atomica.migration.all_frameworks", "atomica.migration.all_progsets", "atomica.migration.all_results", "atomica.migration.migrate", "atomica.migration.migration", "atomica.migration.register_migration", "atomica.model", "atomica.model.BadInitialization", "atomica.model.Characteristic", "atomica.model.Compartment", "atomica.model.JunctionCompartment", "atomica.model.Link", "atomica.model.Model", "atomica.model.ModelError", "atomica.model.Parameter", "atomica.model.Population", "atomica.model.ResidualJunctionCompartment", "atomica.model.SinkCompartment", "atomica.model.SourceCompartment", "atomica.model.TimedCompartment", "atomica.model.TimedLink", "atomica.model.Variable", "atomica.model.run_model", "atomica.optimization", "atomica.optimization.Adjustable", "atomica.optimization.Adjustment", "atomica.optimization.AtLeastMeasurable", "atomica.optimization.AtMostMeasurable", "atomica.optimization.Constraint", "atomica.optimization.DecreaseByMeasurable", "atomica.optimization.ExponentialSpendingAdjustment", "atomica.optimization.FailedConstraint", "atomica.optimization.IncreaseByMeasurable", "atomica.optimization.InvalidInitialConditions", "atomica.optimization.MaximizeCascadeConversionRate", "atomica.optimization.MaximizeCascadeStage", "atomica.optimization.MaximizeMeasurable", "atomica.optimization.Measurable", "atomica.optimization.MinimizeMeasurable", "atomica.optimization.Optimization", "atomica.optimization.PairedLinearSpendingAdjustment", "atomica.optimization.SpendingAdjustment", "atomica.optimization.SpendingPackageAdjustment", "atomica.optimization.StartTimeAdjustment", "atomica.optimization.TotalSpendConstraint", "atomica.optimization.UnresolvableConstraint", "atomica.optimization.constrain_sum_bounded", "atomica.optimization.optimize", "atomica.parameters", "atomica.parameters.Parameter", "atomica.parameters.ParameterSet", "atomica.plotting", "atomica.plotting.PlotData", "atomica.plotting.Series", "atomica.plotting.plot_bars", "atomica.plotting.plot_legend", "atomica.plotting.plot_series", "atomica.plotting.relabel_legend", "atomica.plotting.reorder_legend", "atomica.plotting.save_figs", "atomica.programs", "atomica.programs.Covout", "atomica.programs.Program", "atomica.programs.ProgramInstructions", "atomica.programs.ProgramSet", "atomica.project", "atomica.project.Project", "atomica.project.ProjectSettings", "atomica.reconciliation", "atomica.reconciliation.reconcile", "atomica.results", "atomica.results.Ensemble", "atomica.results.Result", "atomica.results.export_results", "atomica.scenarios", "atomica.scenarios.BudgetScenario", "atomica.scenarios.CombinedScenario", "atomica.scenarios.CoverageScenario", "atomica.scenarios.ParameterScenario", "atomica.scenarios.Scenario", "atomica.system", "atomica.system.FrameworkSettings", "atomica.system.NotFoundError", "atomica.system.atomica_path", "atomica.utils", "atomica.utils.NDict", "atomica.utils.NamedItem", "atomica.utils.Quiet", "atomica.utils.TimeSeries", "atomica.utils.datetime_to_year", "atomica.utils.evaluate_plot_string", "atomica.utils.format_duration", "atomica.utils.nested_loop", "atomica.utils.parallel_progress", "atomica.utils.parent_dir", "atomica.utils.start_logging", "atomica.utils.stop_logging", "atomica.version", "Basic workflow", "Frameworks", "Models (implementation)", "Results and Models", "Plotting programs", "Plot unit conversions", "Plotting Documentation", "Probability rescaling", "Scenarios", "Uncertainty", "Data and Databooks", "Examples", "Overriding coverage calculations", "Initializing compartments", "Contextual overview", "Logging cookbook", "Optimization", "Parameters", "General content", "Junction overview", "Population types", "Program System", "Stochastic models", "Timed transitions", "Atomica", "Cervical cancer", "Diabetes", "Diagnosis-Treated", "HIV without dynamics", "HIV with dynamics", "Hypertension", "Hypertension with dynamics", "Model library", "Service modalities", "SIR model", "TB full model", "TB simple model", "TB simple with dynamics", "UDT model", "UDT model with dynamics", "USDT model", "T1 - Defining a model", "T2 - Calibration", "T3 - Multiple populations", "T4 - Characteristics", "T5 - Junctions", "T6 - Programs", "Tutorials"], "terms": {"root": [0, 149, 160, 165], "modul": [0, 1, 3, 16, 21, 34, 38, 43, 48, 50, 51, 68, 96, 105, 119, 128, 142, 155, 164], "The": [0, 3, 4, 13, 14, 15, 17, 20, 22, 23, 25, 27, 31, 33, 36, 37, 40, 48, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 121, 123, 124, 130, 133, 134, 135, 138, 140, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 177, 184, 185, 186, 187, 188, 189], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 21, 22, 23, 25, 26, 27, 29, 31, 32, 33, 36, 39, 41, 42, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 123, 124, 130, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "entri": [0, 1, 21, 22, 23, 36, 43, 69, 92, 95, 100, 103, 106, 109, 111, 130, 144, 145, 152, 153, 159, 163, 164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "point": [0, 1, 3, 4, 7, 8, 10, 17, 43, 48, 59, 60, 64, 65, 71, 72, 74, 77, 82, 86, 89, 92, 94, 97, 101, 107, 108, 109, 111, 116, 117, 133, 144, 145, 149, 151, 152, 153, 156, 159, 160, 164, 184, 185, 189], "run": [0, 2, 4, 17, 19, 34, 36, 43, 48, 50, 57, 67, 84, 95, 97, 106, 108, 109, 111, 113, 116, 117, 120, 121, 122, 123, 124, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 164, 165, 184, 185, 186, 187, 188, 189], "simul": [0, 4, 7, 17, 52, 57, 59, 60, 62, 66, 67, 74, 77, 82, 84, 95, 108, 109, 111, 112, 116, 117, 120, 121, 122, 123, 124, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 184, 185, 186, 187, 188, 189], "perform": [0, 4, 17, 27, 48, 51, 53, 54, 55, 56, 59, 61, 63, 66, 67, 68, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 92, 97, 109, 111, 114, 116, 117, 123, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 157, 163, 164, 166, 184, 185, 186, 187, 189], "analysi": [0, 55, 61, 146, 153, 157, 184, 185], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 17, 21, 22, 23, 25, 27, 28, 30, 32, 34, 36, 39, 43, 44, 48, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 119, 120, 121, 122, 123, 124, 128, 129, 130, 132, 133, 135, 136, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "implement": [1, 3, 4, 16, 17, 21, 34, 38, 51, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 73, 89, 92, 93, 96, 97, 105, 108, 110, 113, 115, 116, 119, 143, 144, 149, 150, 151, 152, 154, 155, 156, 157, 160, 162, 163, 164, 165, 184, 186, 188, 189], "automat": [1, 3, 4, 36, 48, 50, 57, 89, 97, 104, 107, 108, 109, 111, 113, 116, 133, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 158, 159, 160, 163, 164, 166, 184, 185, 186, 187, 188, 189], "thi": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 31, 33, 34, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 121, 123, 124, 126, 127, 128, 130, 132, 133, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "defin": [1, 3, 4, 13, 15, 16, 17, 18, 34, 36, 43, 60, 66, 67, 84, 87, 97, 105, 106, 114, 117, 119, 121, 123, 125, 126, 129, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 166, 185, 186, 187, 189, 190], "function": [1, 2, 3, 4, 6, 7, 9, 13, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 31, 33, 34, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 77, 79, 80, 81, 82, 83, 84, 87, 94, 95, 96, 97, 98, 103, 104, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 123, 125, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "which": [1, 2, 3, 4, 6, 10, 11, 13, 14, 16, 17, 19, 22, 23, 25, 27, 28, 29, 32, 34, 36, 44, 50, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 77, 86, 87, 89, 90, 92, 94, 96, 97, 98, 101, 103, 105, 106, 107, 108, 109, 111, 114, 116, 117, 119, 120, 121, 122, 123, 124, 130, 133, 137, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 184, 185, 186, 187, 189], "project": [2, 4, 17, 18, 19, 20, 36, 43, 45, 46, 47, 48, 50, 67, 92, 95, 97, 98, 109, 114, 116, 117, 120, 121, 122, 123, 124, 128, 144, 147, 148, 149, 151, 152, 153, 155, 157, 159, 160, 164, 165, 166, 184, 185, 186, 187, 188, 189], "parset": [2, 4, 57, 59, 60, 64, 67, 92, 93, 95, 110, 111, 114, 116, 117, 120, 121, 122, 123, 124, 130, 143, 145, 147, 149, 151, 152, 159, 184, 185, 189], "pars_to_adjust": 2, "output_quant": 2, "max_tim": [2, 111, 114, 143, 185], "60": [2, 111, 143, 149, 150, 156, 162], "method": [2, 4, 16, 17, 20, 22, 23, 27, 36, 44, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 97, 98, 106, 107, 108, 109, 111, 112, 115, 116, 117, 120, 121, 122, 123, 124, 126, 130, 131, 132, 133, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 164, 184, 185, 186, 189], "asd": [2, 52, 69, 70, 75, 84, 85, 86, 87, 88, 89, 114, 143, 159, 189], "sourc": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 149, 152, 153, 155, 156, 160, 164, 165, 166, 182, 184, 188, 189], "autom": [2, 149, 151, 152, 185], "paramet": [2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 146, 147, 150, 152, 153, 155, 157, 159, 161, 162, 163, 165, 166, 184, 185, 186, 187, 188, 189], "A": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 34, 36, 37, 39, 43, 45, 46, 47, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 101, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 120, 121, 122, 123, 124, 130, 131, 133, 135, 136, 138, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 178, 184, 185, 186, 189], "instanc": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 25, 27, 36, 37, 43, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 73, 84, 89, 92, 94, 95, 97, 99, 101, 106, 107, 108, 109, 111, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 133, 134, 143, 145, 147, 149, 150, 152, 153, 155, 158, 159, 163, 185], "provid": [2, 4, 16, 17, 22, 34, 36, 41, 42, 59, 67, 69, 74, 77, 82, 84, 89, 97, 100, 103, 104, 108, 109, 111, 112, 115, 116, 117, 123, 130, 133, 143, 144, 145, 146, 149, 150, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 189], "data": [2, 3, 4, 7, 9, 10, 11, 12, 21, 22, 23, 26, 36, 53, 54, 56, 59, 60, 63, 64, 65, 66, 71, 72, 74, 77, 79, 80, 81, 82, 83, 93, 94, 95, 97, 98, 101, 104, 107, 108, 109, 110, 111, 113, 116, 117, 118, 133, 143, 145, 146, 147, 151, 152, 154, 155, 156, 157, 159, 160, 163, 165, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189], "sim": [2, 60], "set": [2, 4, 7, 17, 19, 22, 23, 25, 32, 36, 43, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 84, 86, 87, 89, 92, 94, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 111, 116, 118, 121, 124, 126, 130, 132, 133, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 158, 159, 160, 163, 164, 166, 184, 185, 186, 187, 188, 189], "parameterset": [2, 4, 59, 60, 67, 92, 93, 94, 111, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 143, 152, 160, 163, 184, 185, 189], "list": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 22, 23, 28, 29, 36, 39, 44, 47, 48, 50, 59, 60, 70, 74, 75, 77, 79, 82, 84, 85, 86, 87, 88, 89, 94, 97, 99, 100, 101, 102, 103, 104, 107, 110, 111, 116, 117, 118, 123, 128, 130, 133, 135, 137, 138, 143, 144, 145, 146, 147, 149, 150, 152, 153, 155, 159, 160, 163, 164, 184, 185, 187], "tupl": [2, 4, 7, 8, 13, 17, 29, 36, 39, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 69, 84, 97, 109, 114, 116, 118, 123, 130, 133, 137, 144, 149], "par_nam": [2, 36, 60, 117, 123, 145, 146, 152, 160, 186], "pop_nam": [2, 57, 71, 72, 74, 77, 79, 80, 81, 82, 83, 94, 117, 123, 149, 152, 184], "lower_limit": 2, "upper_limit": 2, "pop": [2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 17, 22, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 79, 94, 95, 97, 98, 101, 106, 107, 109, 111, 116, 117, 118, 130, 143, 145, 146, 147, 148, 149, 150, 152, 153, 163, 184, 186, 188], "name": [2, 3, 4, 6, 7, 13, 14, 15, 17, 22, 23, 27, 36, 37, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 74, 77, 79, 82, 84, 86, 87, 88, 94, 95, 97, 98, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 120, 121, 122, 123, 124, 130, 131, 140, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 158, 159, 160, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189], "can": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 17, 22, 23, 25, 27, 34, 36, 39, 43, 50, 51, 52, 55, 56, 57, 59, 60, 63, 64, 69, 73, 84, 87, 89, 95, 97, 98, 101, 103, 104, 108, 109, 110, 111, 116, 118, 123, 124, 128, 130, 132, 135, 140, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "none": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 25, 27, 31, 32, 33, 36, 37, 44, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 74, 77, 81, 82, 83, 84, 86, 87, 89, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 128, 130, 131, 133, 138, 140, 141, 143, 144, 145, 149, 150, 151, 152, 153, 159, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 189], "expand": [2, 36, 95, 97, 166], "all": [2, 3, 4, 7, 8, 12, 14, 15, 17, 22, 23, 27, 34, 36, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 73, 74, 77, 79, 80, 82, 84, 86, 87, 89, 90, 94, 95, 97, 106, 108, 109, 110, 111, 114, 116, 117, 118, 124, 130, 132, 133, 137, 140, 143, 144, 145, 146, 147, 149, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 166, 168, 184, 185, 186, 187, 188, 189], "popul": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 22, 23, 36, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 74, 77, 79, 82, 94, 95, 97, 98, 99, 106, 107, 109, 111, 116, 117, 118, 123, 127, 130, 143, 144, 146, 147, 149, 151, 152, 156, 157, 159, 161, 164, 166, 184, 185, 187, 189, 190], "relev": [2, 145, 149, 153, 160, 164, 184, 188], "independ": [2, 84, 86, 87, 89, 94, 95, 107, 109, 111, 133, 143, 146, 152, 153, 155, 157, 159, 160, 163, 164, 184, 186], "instead": [2, 12, 17, 25, 28, 33, 48, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 94, 98, 130, 140, 143, 144, 145, 146, 147, 149, 151, 152, 153, 155, 156, 158, 159, 160, 162, 163, 166, 184, 186, 187, 188], "oper": [2, 27, 28, 36, 39, 40, 57, 59, 67, 84, 94, 97, 104, 111, 130, 133, 143, 144, 145, 146, 149, 150, 152, 153, 155, 156, 159, 160, 163, 164, 186, 187], "meta": [2, 166], "y": [2, 22, 39, 94, 95, 123, 130, 143, 144, 145, 149, 150, 153, 156, 159, 160, 164, 166, 186, 188, 189], "factor": [2, 79, 82, 89, 95, 108, 143, 145, 149, 155, 157, 159, 160, 184, 185, 186], "var_label": 2, "weight": [2, 59, 79, 80, 82, 97, 111, 144, 149, 153, 159, 163, 186], "metric": [2, 73, 111, 159], "object": [2, 3, 4, 9, 10, 11, 12, 14, 17, 22, 23, 36, 39, 44, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 97, 98, 100, 106, 107, 108, 109, 112, 116, 117, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 138, 139, 143, 144, 146, 147, 149, 151, 152, 158, 159, 160, 163, 164, 184, 185, 186, 188, 189], "support": [2, 4, 7, 8, 9, 10, 11, 12, 13, 15, 19, 27, 36, 41, 42, 74, 77, 82, 97, 107, 111, 116, 123, 126, 130, 137, 145, 146, 147, 149, 152, 159, 160, 163], "If": [2, 4, 6, 7, 8, 9, 10, 15, 17, 19, 25, 26, 28, 31, 33, 36, 37, 55, 57, 59, 60, 61, 65, 67, 69, 73, 74, 77, 82, 86, 87, 89, 94, 95, 97, 98, 99, 100, 103, 104, 107, 108, 109, 111, 116, 117, 118, 120, 121, 122, 123, 124, 130, 132, 133, 137, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 159, 160, 163, 164, 166, 184, 186, 187, 188, 189], "maximum": [2, 41, 69, 84, 87, 94, 114, 117, 143, 144, 146, 147, 149, 150, 151, 152, 164, 165], "time": [2, 4, 7, 8, 10, 11, 12, 14, 17, 21, 22, 23, 36, 48, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 75, 77, 79, 82, 84, 85, 86, 89, 94, 95, 97, 98, 99, 101, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 123, 132, 133, 137, 143, 145, 146, 148, 150, 151, 152, 153, 155, 157, 159, 160, 161, 163, 164, 165, 184, 185, 186, 187, 188, 189], "pso": [2, 84], "upper": [2, 84, 86, 88, 89, 90, 91, 92, 97, 114, 145, 149, 159, 164], "lower": [2, 84, 86, 88, 89, 91, 92, 97, 114, 145, 149, 159, 166, 185, 188, 189], "limit": [2, 4, 59, 63, 69, 84, 86, 111, 116, 143, 144, 145, 146, 147, 149, 150, 151, 153, 159, 164, 165, 185, 189], "must": [2, 4, 6, 9, 10, 11, 12, 14, 15, 22, 23, 41, 42, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 77, 82, 84, 87, 94, 95, 97, 98, 107, 108, 109, 111, 116, 117, 118, 120, 121, 122, 123, 124, 131, 133, 143, 145, 150, 152, 153, 155, 156, 159, 160, 163, 164, 166, 184, 186, 188, 189], "finit": [2, 78, 84, 94, 133, 189], "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 128, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 164, 165, 166, 185, 189], "type": [2, 3, 4, 6, 8, 12, 13, 14, 15, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 36, 39, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74, 75, 77, 81, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 116, 117, 119, 120, 121, 122, 123, 124, 126, 128, 130, 133, 134, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 161, 162, 164, 165, 166, 184, 186], "util": [3, 21, 143, 151, 152, 153, 184], "work": [3, 4, 13, 17, 97, 98, 106, 109, 111, 115, 116, 133, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 159, 160, 163, 164, 165, 184, 185, 186, 187, 188, 189], "ar": [3, 4, 7, 9, 10, 15, 17, 21, 22, 23, 27, 28, 36, 38, 39, 41, 42, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 73, 74, 77, 82, 84, 87, 89, 90, 92, 93, 94, 95, 97, 98, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 123, 124, 130, 133, 135, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "projectframework": [3, 4, 7, 13, 15, 17, 34, 37, 48, 59, 60, 67, 95, 109, 111, 117, 143, 152, 153, 165, 184, 186, 188], "includ": [3, 4, 36, 56, 65, 66, 79, 87, 94, 97, 98, 118, 130, 133, 144, 145, 146, 147, 149, 152, 155, 156, 159, 160, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 189], "valid": [3, 4, 5, 6, 13, 15, 17, 33, 36, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 71, 72, 109, 130, 143, 146, 149, 152, 153, 156, 159, 160, 163, 166, 184], "plot": [3, 4, 7, 9, 10, 11, 12, 13, 14, 17, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 115, 116, 117, 118, 135, 136, 143, 144, 145, 150, 151, 153, 154, 155, 159, 160, 165, 184, 185, 186, 188, 189], "valu": [3, 4, 6, 7, 8, 10, 17, 22, 23, 25, 26, 27, 31, 32, 36, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 121, 123, 130, 133, 137, 143, 144, 145, 147, 148, 150, 151, 152, 153, 155, 157, 159, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "extract": [3, 17, 22, 59, 69, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 97, 133, 147, 159], "On": [3, 17, 144, 150, 151, 159, 163, 184, 189], "side": [3, 17, 48, 144, 156, 164, 184], "two": [3, 4, 7, 17, 22, 59, 65, 67, 74, 77, 82, 85, 90, 94, 95, 97, 99, 119, 130, 133, 137, 143, 144, 145, 147, 149, 150, 151, 152, 155, 156, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "kei": [3, 4, 7, 14, 17, 32, 36, 94, 95, 97, 100, 102, 108, 109, 111, 116, 117, 123, 126, 130, 133, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 164, 166, 185, 187, 189], "plot_single_cascad": [3, 9], "make": [3, 4, 7, 17, 33, 48, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 69, 86, 94, 97, 98, 102, 111, 130, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 184, 185, 186, 188, 189], "singl": [3, 4, 8, 9, 10, 11, 12, 14, 23, 36, 39, 50, 59, 61, 69, 74, 77, 79, 82, 85, 86, 89, 94, 95, 97, 105, 106, 107, 109, 111, 116, 117, 123, 130, 133, 138, 145, 146, 147, 149, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 166, 184, 185, 186, 189], "complet": [3, 4, 55, 92, 117, 143, 145, 150, 156, 157, 160, 163, 184], "shade": [3, 4, 12, 116, 149, 152], "region": 3, "between": [3, 7, 9, 17, 22, 31, 36, 56, 57, 59, 65, 73, 89, 94, 97, 108, 109, 111, 117, 133, 144, 145, 146, 149, 150, 151, 153, 155, 156, 157, 159, 160, 163, 164, 165, 166, 184, 185, 186, 187, 189], "bar": [3, 4, 10, 99, 116, 128, 138, 139, 140, 152, 163], "convers": [3, 4, 57, 79, 116, 130, 145, 150, 154, 160, 164], "arrow": [3, 166, 184], "plot_multi_cascad": [3, 4, 9, 152], "scenario": [3, 4, 19, 20, 94, 97, 108, 109, 110, 111, 116, 145, 146, 147, 149, 152, 154, 157, 159, 160, 163, 184, 189], "comparison": [3, 111, 114, 152], "group": [3, 4, 10, 14, 22, 53, 55, 61, 64, 97, 99, 101, 117, 118, 137, 144, 145, 146, 149, 152, 157, 164, 184, 187], "stage": [3, 4, 5, 10, 12, 13, 15, 17, 36, 55, 57, 79, 108, 118, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 159, 164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189], "possibl": [3, 10, 15, 17, 55, 61, 69, 73, 76, 91, 94, 97, 102, 106, 130, 133, 144, 145, 146, 147, 149, 151, 152, 153, 156, 157, 159, 160, 163, 164, 165, 166, 184, 185, 186, 187, 189], "normal": [3, 4, 12, 13, 17, 36, 44, 55, 61, 63, 84, 92, 94, 97, 98, 101, 107, 109, 118, 133, 140, 141, 144, 145, 147, 149, 150, 151, 152, 155, 158, 160, 163, 164, 186, 188], "plot_bar": [3, 4, 10, 97, 104, 116, 137, 143, 147, 148, 149, 152], "take": [3, 4, 6, 17, 36, 37, 39, 41, 42, 48, 50, 55, 56, 57, 59, 60, 63, 64, 74, 77, 82, 84, 97, 100, 107, 108, 111, 116, 121, 123, 124, 130, 136, 137, 143, 144, 145, 147, 149, 150, 151, 152, 153, 159, 160, 163, 164, 166, 184, 186, 187, 188, 189], "argument": [3, 4, 6, 39, 50, 89, 92, 94, 97, 104, 106, 111, 116, 128, 130, 138, 146, 147, 149, 150, 152, 155, 158, 185, 186, 189], "user": [3, 4, 13, 15, 17, 23, 36, 89, 92, 98, 110, 116, 127, 136, 143, 144, 145, 149, 150, 153, 156, 157, 158, 159, 160, 163, 184, 186, 187], "specifi": [3, 4, 6, 7, 8, 13, 14, 17, 22, 23, 36, 50, 55, 59, 60, 61, 67, 69, 70, 73, 74, 77, 82, 84, 86, 87, 89, 92, 94, 95, 97, 98, 100, 101, 106, 107, 108, 109, 111, 114, 116, 117, 118, 120, 121, 122, 123, 124, 127, 130, 133, 135, 143, 144, 145, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 189], "framework": [3, 4, 7, 13, 15, 17, 28, 38, 45, 51, 55, 57, 59, 60, 61, 67, 79, 94, 95, 109, 111, 117, 118, 123, 135, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 179, 180, 183, 184, 185, 186, 187, 188, 189], "index": [3, 4, 13, 22, 23, 32, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 97, 102, 116, 130, 144, 145, 146, 149, 153, 159], "comp": [3, 17, 36, 59, 60, 109, 143, 144, 145, 146], "charac": [3, 13, 17, 36, 59, 60, 144, 145], "order": [3, 4, 17, 48, 55, 57, 60, 61, 73, 95, 103, 108, 116, 117, 118, 130, 133, 137, 144, 145, 146, 150, 152, 153, 155, 159, 160, 163, 164, 184, 185, 186], "match": [3, 4, 6, 7, 14, 17, 23, 36, 73, 94, 97, 98, 101, 107, 109, 113, 114, 117, 118, 124, 130, 133, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 159, 160, 163, 164, 166, 185, 186, 188, 189], "dict": [3, 4, 7, 13, 14, 17, 22, 23, 32, 36, 39, 59, 79, 89, 92, 94, 95, 97, 100, 102, 106, 108, 109, 116, 117, 121, 123, 130, 135, 143, 144, 145, 146, 147, 149, 152, 153, 159], "custom": [3, 27, 97, 144, 145, 146, 149, 155], "refer": [3, 4, 15, 22, 23, 28, 43, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 69, 97, 116, 124, 143, 144, 145, 146, 157, 159, 160, 163, 164, 166, 184, 185, 189], "code": [3, 4, 14, 17, 22, 25, 36, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 86, 94, 95, 104, 106, 107, 109, 111, 116, 117, 123, 130, 144, 145, 146, 147, 149, 152, 153, 155, 158, 159, 163, 164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187], "first": [3, 4, 12, 13, 17, 22, 23, 56, 89, 94, 97, 99, 106, 107, 116, 118, 130, 133, 137, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 163, 164, 166, 184, 185, 186, 187, 188, 189], "represent": [3, 4, 7, 8, 13, 14, 15, 16, 34, 36, 38, 39, 44, 51, 59, 93, 98, 107, 108, 109, 130, 135, 136, 143, 144, 146, 153, 164, 166, 184, 189], "map": [3, 4, 13, 17, 22, 23, 36, 56, 59, 60, 68, 84, 89, 97, 103, 108, 111, 114, 116, 130, 138, 143, 144, 145, 149, 150, 151, 152, 153, 155, 157, 159, 163, 164, 165, 166, 185, 189], "while": [3, 4, 36, 53, 55, 59, 61, 66, 72, 90, 97, 98, 107, 109, 114, 137, 143, 145, 149, 150, 152, 153, 155, 159, 163, 164, 166, 184, 185, 186, 189], "last": [3, 36, 104, 108, 111, 130, 141, 144, 145, 149, 151, 156, 164, 166, 185, 187], "relat": [3, 17, 97, 108, 109, 143, 145, 146, 147, 156, 163, 164, 184, 185, 186, 187, 189], "fly": [3, 124, 152], "thei": [3, 4, 17, 23, 36, 43, 55, 60, 61, 65, 69, 92, 95, 97, 108, 109, 111, 114, 116, 117, 124, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "therefor": [3, 17, 36, 50, 55, 56, 61, 63, 64, 65, 73, 84, 93, 94, 97, 106, 108, 109, 140, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 189], "sanit": [3, 4, 7, 14], "sanitize_cascade_input": 3, "turn": [3, 13, 59, 86, 108, 117, 145, 146, 151, 153, 156, 163, 164, 166, 184], "indic": [3, 22, 29, 54, 55, 61, 62, 63, 64, 65, 103, 110, 130, 133, 145, 147, 149, 152, 164, 184, 185, 186], "string": [3, 4, 13, 14, 17, 22, 23, 25, 26, 33, 36, 38, 39, 47, 50, 59, 84, 94, 95, 97, 98, 103, 104, 106, 107, 109, 111, 116, 117, 120, 121, 122, 123, 124, 130, 131, 133, 135, 136, 144, 149, 152, 159, 164], "predefin": 3, "allow": [3, 4, 17, 23, 27, 36, 39, 45, 46, 47, 48, 55, 56, 57, 59, 60, 61, 65, 71, 72, 84, 87, 89, 97, 103, 104, 109, 114, 121, 124, 130, 133, 143, 144, 145, 149, 151, 152, 153, 155, 158, 159, 160, 164, 166, 184, 185, 187, 188, 189], "titl": [3, 11, 13, 23, 144, 146, 147, 149, 150, 151, 152, 189], "get_cascade_output": 3, "dictionari": [3, 4, 13, 23, 32, 36, 50, 89, 92, 95, 106, 109, 111, 117, 123, 130, 145, 149, 153, 159], "alwai": [3, 9, 55, 61, 97, 109, 111, 118, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160, 163, 164, 166, 185, 187, 189], "requir": [3, 4, 9, 17, 25, 32, 36, 39, 44, 50, 53, 56, 57, 59, 60, 66, 67, 68, 69, 74, 77, 84, 94, 95, 97, 107, 108, 109, 116, 117, 121, 123, 133, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 159, 160, 162, 164, 165, 166, 184, 185, 186, 187, 188], "when": [3, 4, 17, 22, 23, 27, 36, 48, 50, 54, 56, 57, 59, 63, 65, 66, 84, 87, 89, 92, 97, 98, 104, 106, 109, 111, 116, 117, 120, 121, 122, 123, 124, 127, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 189], "retriev": [3, 4, 7, 8, 17, 36, 57, 59, 60, 84, 95, 97, 106, 107, 109, 116, 117, 133, 144, 145, 146, 149, 151, 158, 159, 187], "There": [3, 17, 62, 90, 119, 130, 133, 143, 145, 151, 152, 153, 156, 159, 163, 164, 165, 166, 184, 185, 186, 189], "get_cascade_v": [3, 4, 7], "each": [3, 4, 9, 11, 12, 22, 23, 29, 36, 43, 60, 64, 65, 66, 67, 70, 75, 79, 82, 84, 85, 86, 87, 88, 94, 95, 97, 99, 101, 104, 106, 107, 108, 109, 111, 116, 117, 130, 133, 137, 138, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 178, 184, 185, 186, 187, 188, 189], "from": [3, 4, 7, 12, 14, 17, 22, 23, 25, 26, 27, 28, 29, 31, 36, 43, 50, 55, 56, 57, 59, 60, 61, 64, 65, 68, 69, 73, 84, 86, 89, 92, 94, 95, 96, 97, 107, 108, 109, 110, 111, 114, 116, 117, 118, 121, 123, 124, 130, 133, 136, 137, 140, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "model": [3, 7, 17, 19, 34, 36, 50, 71, 72, 74, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 97, 106, 107, 109, 111, 113, 115, 117, 144, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 180, 185, 186, 187, 188, 189, 190], "result": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 19, 23, 25, 41, 42, 44, 45, 46, 47, 48, 50, 59, 67, 90, 97, 98, 99, 101, 103, 107, 109, 110, 111, 120, 121, 122, 123, 124, 130, 137, 138, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "get_cascade_data": 3, "attempt": [3, 4, 111, 116, 149, 152], "comput": [3, 4, 36, 51, 53, 55, 57, 59, 60, 61, 66, 73, 75, 84, 86, 89, 92, 97, 98, 106, 107, 108, 109, 116, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 163, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189], "projectdata": [3, 7, 9, 10, 11, 12, 16, 22, 23, 27, 95, 109, 111, 143, 152, 153, 184, 186, 188, 189], "compart": [3, 13, 15, 17, 36, 51, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 97, 98, 107, 108, 109, 117, 143, 144, 146, 147, 149, 150, 152, 153, 155, 157, 161, 162, 163, 164, 166, 184, 185, 186, 187, 188, 189], "characterist": [3, 17, 23, 36, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 97, 111, 117, 144, 146, 147, 149, 152, 153, 159, 160, 163, 184, 185, 186, 190], "sum": [3, 54, 55, 60, 61, 62, 63, 64, 65, 74, 77, 79, 82, 87, 89, 90, 91, 97, 145, 147, 149, 150, 152, 156, 159, 160, 162, 163, 164, 184, 186, 187, 188, 189], "onli": [3, 4, 11, 14, 17, 22, 23, 28, 36, 37, 39, 48, 50, 55, 57, 59, 60, 61, 62, 63, 64, 69, 73, 89, 97, 98, 99, 101, 102, 103, 106, 107, 109, 111, 114, 116, 117, 118, 130, 133, 135, 137, 143, 144, 145, 146, 147, 149, 150, 152, 155, 157, 158, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 188, 189], "displai": [3, 4, 9, 22, 33, 97, 98, 107, 109, 116, 117, 136, 144, 146, 147, 148, 149, 152, 158, 184, 187], "ha": [3, 4, 22, 25, 32, 33, 55, 59, 61, 62, 86, 89, 94, 97, 98, 104, 109, 114, 116, 124, 130, 133, 135, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "quantiti": [3, 4, 17, 22, 23, 27, 36, 37, 39, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 74, 77, 82, 86, 95, 97, 98, 101, 108, 116, 117, 118, 126, 133, 145, 146, 147, 148, 149, 151, 152, 153, 155, 159, 160, 163, 164, 184, 185, 186, 187, 188, 189], "year": [3, 4, 6, 7, 8, 9, 10, 11, 17, 23, 59, 60, 65, 74, 77, 82, 87, 88, 89, 97, 98, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 123, 134, 136, 143, 145, 147, 148, 149, 150, 152, 155, 156, 157, 159, 160, 163, 164, 166, 184, 185, 186, 188, 189], "being": [3, 4, 13, 25, 28, 36, 52, 59, 69, 70, 75, 85, 86, 87, 88, 89, 90, 92, 97, 106, 108, 109, 116, 118, 130, 138, 140, 143, 145, 146, 147, 148, 149, 150, 152, 153, 155, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 188, 189], "class": [3, 4, 16, 17, 21, 22, 23, 25, 27, 34, 36, 43, 44, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 143, 144, 145, 152, 153, 162, 164, 184], "except": [3, 5, 25, 28, 33, 34, 35, 51, 52, 58, 60, 68, 76, 78, 90, 97, 109, 125, 127, 130, 145, 152, 153, 159, 162, 163, 166, 184, 186, 189], "baseline_result": [4, 116, 152, 165], "base": [4, 9, 16, 17, 22, 23, 36, 44, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 97, 98, 104, 106, 107, 108, 109, 110, 111, 112, 116, 117, 120, 121, 122, 123, 124, 126, 130, 131, 132, 133, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 159, 160, 164, 165, 166, 184, 185, 188, 189], "ensembl": [4, 6, 52, 111, 165], "special": [4, 36, 59, 111, 116, 133, 144, 145, 149, 153, 162, 163, 166, 184, 186, 187, 188], "orient": [4, 99, 117, 145, 149, 163, 184], "It": [4, 13, 17, 23, 36, 39, 44, 51, 55, 59, 66, 73, 74, 76, 77, 82, 94, 95, 98, 106, 108, 109, 111, 116, 117, 124, 128, 136, 137, 143, 144, 145, 146, 149, 150, 151, 152, 153, 156, 159, 160, 163, 164, 166, 167, 184, 185, 187, 188, 189], "pre": [4, 55, 61, 106, 123, 143, 152, 159, 184, 186, 188, 189], "wrapper": [4, 67, 92, 115, 117, 159], "conceptu": [4, 23, 97, 149, 150, 159, 163, 187], "idea": [4, 150, 152, 184, 185, 186, 189], "do": [4, 10, 17, 48, 54, 55, 56, 61, 63, 87, 89, 97, 106, 123, 130, 133, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 163, 166, 184, 185, 186, 187, 188, 189], "thing": [4, 22, 97, 123, 130, 143, 149, 152, 163, 164, 166, 167, 184], "have": [4, 7, 9, 17, 22, 23, 25, 48, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 84, 87, 89, 94, 97, 98, 104, 106, 111, 114, 116, 118, 123, 133, 137, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "gener": [4, 7, 9, 10, 11, 12, 17, 27, 36, 37, 45, 46, 47, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 94, 95, 96, 97, 98, 104, 106, 109, 111, 114, 116, 117, 118, 133, 137, 140, 143, 144, 145, 146, 147, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 185, 186, 189], "plotdata": [4, 14, 98, 99, 101, 116, 117, 143, 146, 148, 149, 150, 151, 152, 160, 163, 165, 184, 185, 186, 188, 189], "where": [4, 7, 8, 9, 17, 23, 36, 40, 55, 57, 59, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 87, 89, 94, 97, 100, 102, 104, 107, 108, 109, 111, 116, 123, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "output": [4, 7, 10, 25, 50, 55, 61, 64, 67, 71, 72, 74, 77, 79, 80, 81, 82, 83, 96, 97, 98, 99, 101, 106, 107, 109, 114, 115, 116, 117, 118, 132, 133, 135, 138, 140, 141, 143, 145, 146, 148, 149, 150, 152, 153, 156, 157, 159, 160, 163, 164, 165, 166, 185, 186, 187, 188, 189], "same": [4, 7, 15, 17, 41, 42, 55, 56, 59, 60, 61, 64, 65, 67, 69, 84, 86, 87, 89, 91, 94, 97, 98, 99, 100, 102, 104, 107, 108, 111, 116, 117, 118, 130, 133, 135, 137, 140, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 188, 189], "color": [4, 97, 98, 143], "rule": [4, 94, 97, 145, 149, 152, 163, 166, 188], "out": [4, 7, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 67, 71, 72, 104, 109, 130, 143, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 163, 164, 166, 184, 187, 188], "store": [4, 6, 17, 19, 22, 23, 33, 36, 44, 50, 54, 55, 56, 59, 61, 63, 64, 66, 69, 73, 74, 77, 84, 93, 94, 95, 97, 98, 106, 108, 111, 116, 117, 121, 123, 126, 130, 133, 143, 144, 145, 146, 149, 151, 152, 153, 155, 158, 159, 160, 164, 166, 187, 188, 189], "rather": [4, 7, 17, 26, 36, 40, 55, 57, 60, 61, 73, 84, 89, 97, 107, 108, 112, 116, 117, 130, 133, 144, 145, 146, 147, 149, 150, 152, 153, 155, 156, 159, 160, 162, 163, 164, 166, 187, 189], "than": [4, 7, 17, 22, 26, 31, 36, 40, 55, 56, 57, 60, 61, 71, 72, 73, 84, 85, 87, 89, 90, 97, 98, 107, 108, 112, 116, 117, 130, 133, 144, 145, 146, 147, 149, 150, 152, 153, 155, 156, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 188, 189], "both": [4, 22, 41, 42, 60, 67, 73, 84, 97, 108, 111, 117, 121, 130, 140, 143, 145, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 166, 184, 185, 186, 187, 189], "abov": [4, 60, 71, 130, 132, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 188, 189], "step": [4, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 89, 97, 107, 112, 117, 123, 133, 143, 145, 147, 148, 149, 150, 152, 155, 156, 157, 159, 160, 163, 164, 165, 166, 184, 185, 189], "constructor": [4, 17, 56, 65, 84, 94, 95, 97, 107, 109, 111, 116, 117, 120, 121, 122, 123, 124, 131, 145, 147, 149, 152, 159, 163, 184], "intern": [4, 36, 65, 94, 106, 109, 113, 114, 125, 133, 145, 146, 149, 151, 152, 153, 160, 164, 166, 184], "suitabl": [4, 22, 97, 98, 155, 163, 166, 184, 185], "handl": [4, 10, 57, 107, 109, 116, 119, 140, 144, 145, 147, 148, 149, 156, 160, 164], "multi": [4, 9, 152, 187], "error": [4, 5, 15, 17, 25, 26, 33, 36, 52, 58, 62, 76, 78, 86, 90, 97, 112, 116, 127, 133, 141, 144, 145, 150, 152, 153, 156, 158, 160, 163, 164, 187, 189], "sanitize_cascad": [4, 7, 8, 9, 10, 11, 12, 15], "howev": [4, 7, 17, 27, 36, 55, 56, 61, 67, 94, 97, 98, 106, 108, 124, 130, 133, 140, 144, 145, 147, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "advanc": [4, 36, 94, 123, 163, 164, 184], "aggreg": [4, 6, 9, 10, 11, 12, 14, 57, 59, 79, 97, 98, 117, 118, 145, 146, 148, 152, 159, 160, 163, 185, 186, 187], "one": [4, 6, 7, 13, 17, 22, 23, 28, 31, 36, 43, 54, 55, 57, 59, 60, 61, 63, 68, 69, 70, 72, 75, 79, 84, 85, 86, 87, 88, 94, 95, 97, 99, 106, 107, 108, 109, 111, 114, 116, 117, 133, 137, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 188, 189], "record": [4, 55, 61, 140, 156], "multipl": [4, 9, 10, 11, 56, 57, 59, 74, 77, 82, 85, 87, 95, 104, 108, 111, 116, 144, 145, 146, 147, 149, 152, 153, 156, 159, 160, 163, 164, 166, 184, 185, 188, 189, 190], "creat": [4, 17, 19, 20, 23, 31, 36, 56, 60, 65, 95, 99, 100, 101, 109, 111, 130, 132, 144, 146, 149, 151, 152, 158, 163, 166, 184, 185, 186, 187, 188, 189], "further": [4, 71, 72, 74, 77, 79, 80, 81, 82, 83, 97, 143, 145, 151, 152, 155, 160, 163, 164, 166, 184, 185, 186, 187, 189], "option": [4, 7, 8, 11, 22, 23, 36, 50, 55, 59, 60, 61, 67, 69, 84, 86, 87, 92, 94, 95, 97, 99, 100, 102, 104, 107, 108, 109, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 128, 130, 133, 138, 143, 144, 145, 146, 147, 151, 152, 153, 158, 159, 160, 163, 164, 184, 189], "interpol": [4, 54, 56, 59, 63, 66, 94, 97, 98, 107, 108, 109, 116, 121, 123, 133, 143, 145, 147, 152, 153, 156, 184, 189], "onto": [4, 97, 98, 108, 116, 123, 145, 147, 149, 151, 152, 156, 160, 163, 164, 184], "reduc": [4, 71, 72, 74, 77, 79, 80, 81, 82, 83, 143, 152, 157, 166, 185, 189], "storag": [4, 32, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 111, 117, 145, 152, 163, 164, 187], "baselin": [4, 71, 72, 74, 77, 79, 80, 81, 82, 83, 84, 92, 106, 107, 114, 116, 123, 143, 149, 151, 152, 155, 164, 165, 189], "obtain": [4, 64, 65, 84, 133, 145, 149, 150, 152, 160, 164, 165, 184, 187], "without": [4, 48, 56, 65, 104, 109, 116, 123, 133, 140, 141, 144, 145, 148, 149, 151, 152, 153, 156, 160, 163, 164, 166, 175, 179, 183, 184, 185, 186, 188, 189], "uncertainti": [4, 22, 23, 94, 106, 107, 109, 116, 133, 154, 156, 164, 165, 184, 185, 189], "evalu": [4, 14, 57, 59, 64, 84, 97, 109, 114, 135, 143, 145, 146, 149, 150, 151, 159, 160, 163, 187, 189], "more": [4, 22, 28, 31, 36, 43, 69, 70, 85, 87, 98, 108, 116, 123, 133, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "nameditem": [4, 84, 94, 95, 107, 109, 111, 116, 117, 120, 121, 122, 123, 124, 143, 152, 184], "attribut": [4, 17, 22, 23, 36, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 75, 84, 85, 86, 87, 88, 94, 95, 98, 106, 107, 111, 112, 114, 116, 117, 120, 121, 122, 123, 124, 126, 133, 145, 146, 149, 151, 153, 157, 159, 160, 185, 189], "add": [4, 17, 22, 27, 59, 94, 97, 109, 116, 123, 130, 143, 144, 151, 152, 160, 163, 164, 166, 184, 185, 186, 188, 189], "kwarg": [4, 49, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 94, 111, 116, 130, 133], "sampl": [4, 52, 94, 95, 106, 107, 109, 111, 116, 133, 143, 150, 151, 153, 160, 165, 184], "ani": [4, 6, 13, 15, 17, 22, 23, 36, 41, 42, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 84, 86, 89, 94, 95, 97, 101, 106, 107, 108, 109, 113, 116, 117, 118, 130, 133, 140, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 184, 185, 186, 188, 189], "other": [4, 17, 36, 54, 56, 57, 59, 63, 66, 72, 76, 90, 94, 97, 101, 104, 111, 116, 123, 124, 130, 140, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 159, 160, 162, 163, 164, 165, 166, 167, 184, 185, 186, 187, 189], "need": [4, 7, 17, 27, 36, 48, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 89, 97, 109, 116, 117, 135, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "": [4, 17, 20, 22, 26, 48, 50, 55, 56, 59, 60, 61, 64, 67, 73, 84, 89, 91, 94, 95, 96, 106, 107, 108, 109, 111, 114, 116, 130, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "call": [4, 9, 13, 17, 22, 39, 41, 42, 43, 48, 50, 53, 54, 55, 56, 57, 59, 61, 63, 66, 73, 84, 94, 97, 106, 107, 109, 111, 116, 133, 138, 139, 144, 145, 146, 149, 151, 152, 155, 165, 185, 189], "addit": [4, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 84, 98, 106, 107, 108, 110, 116, 128, 143, 144, 145, 146, 147, 149, 151, 152, 153, 156, 157, 160, 163, 164, 165, 166, 184, 185, 188, 189], "keyword": [4, 39, 92, 116, 126, 149], "pass": [4, 6, 22, 23, 36, 54, 60, 63, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 92, 94, 97, 109, 111, 116, 124, 133, 138, 143, 144, 145, 146, 147, 149, 152, 153, 159, 163, 164, 184, 185, 189], "e": [4, 6, 14, 15, 17, 19, 21, 22, 23, 25, 27, 32, 36, 39, 44, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 74, 77, 79, 80, 81, 82, 83, 84, 87, 89, 95, 97, 98, 100, 105, 106, 107, 108, 109, 111, 112, 116, 117, 118, 126, 128, 130, 133, 135, 136, 139, 140, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 166, 184, 185, 189], "outcom": [4, 106, 107, 108, 109, 114, 116, 143, 144, 146, 152, 155, 157, 160, 163, 185, 189], "boxplot": [4, 116, 152], "fig": [4, 6, 100, 102, 103, 104, 116, 149, 150, 152, 165], "render": [4, 10, 98, 99, 100, 103, 116, 147, 149], "box": [4, 116, 166], "effect": [4, 17, 48, 59, 68, 73, 108, 116, 143, 144, 149, 152, 154, 155, 157, 158, 159, 160, 163, 164, 165, 166, 184, 185, 186, 188, 189], "an": [4, 6, 11, 13, 17, 22, 23, 25, 26, 27, 28, 29, 33, 36, 38, 39, 41, 42, 43, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 92, 93, 94, 95, 97, 98, 102, 103, 104, 106, 107, 108, 109, 110, 111, 116, 117, 118, 123, 124, 127, 130, 133, 137, 138, 139, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 160, 163, 164, 165, 166, 171, 172, 184, 185, 186, 187, 188, 189], "altern": [4, 97, 111, 116, 130, 143, 145, 149, 150, 153, 158, 159, 166, 189], "approach": [4, 116, 149, 150, 152, 153, 155, 156, 159, 164, 165, 166, 184, 185], "kernel": [4, 116], "densiti": [4, 116], "estim": [4, 116, 144, 152, 165, 184, 185], "distribut": [4, 116, 149, 156, 164, 165, 166, 187], "figur": [4, 9, 10, 11, 12, 99, 100, 101, 102, 103, 104, 116, 117, 147, 148, 150, 151, 152, 164, 166], "show": [4, 12, 116, 143, 145, 146, 147, 149, 152, 158, 159, 163, 164, 166, 188], "quantil": [4, 116], "whisker": [4, 116], "select": [4, 14, 22, 97, 99, 101, 104, 111, 114, 116, 118, 149, 152, 157, 160, 163, 166, 186, 189], "filter": [4, 97, 116, 130, 149, 152, 159], "exist": [4, 7, 15, 17, 22, 31, 94, 95, 97, 102, 103, 109, 116, 127, 130, 133, 143, 144, 146, 149, 151, 152, 153, 156, 157, 158, 159, 163, 184, 185, 186, 189], "otherwis": [4, 13, 15, 17, 26, 27, 36, 57, 59, 71, 72, 74, 77, 89, 94, 97, 111, 116, 117, 120, 121, 122, 123, 124, 133, 135, 143, 145, 149, 152, 153, 158, 159, 160, 163, 166, 184, 189], "matplotlib": [4, 100, 116, 143, 146, 147, 148, 149, 150, 151, 152, 153, 189], "note": [4, 7, 17, 22, 23, 26, 27, 36, 39, 48, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 74, 77, 79, 80, 81, 82, 83, 84, 86, 89, 95, 97, 98, 106, 108, 109, 111, 116, 117, 118, 130, 133, 144, 145, 146, 147, 149, 150, 152, 153, 155, 156, 158, 159, 160, 163, 164, 165, 166, 173, 184, 185, 186, 188, 189], "ever": [4, 48, 116, 149, 187, 189], "get_val": 4, "arrai": [4, 7, 8, 9, 10, 17, 22, 23, 40, 41, 42, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 84, 86, 87, 91, 94, 97, 98, 104, 106, 107, 109, 112, 116, 117, 123, 130, 133, 138, 143, 145, 146, 149, 150, 151, 153, 155], "unlik": [4, 12, 89, 97, 98, 133, 147, 149, 151, 153, 160, 184, 186], "now": [4, 17, 130, 137, 143, 144, 145, 146, 149, 150, 152, 153, 155, 159, 163, 164, 166, 184, 185, 186, 187, 188, 189], "becaus": [4, 5, 6, 17, 27, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 73, 86, 89, 90, 92, 95, 97, 98, 106, 107, 109, 116, 117, 118, 133, 140, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 188, 189], "we": [4, 17, 36, 48, 54, 55, 59, 61, 63, 64, 65, 71, 72, 74, 77, 79, 80, 81, 82, 83, 89, 97, 109, 116, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 159, 160, 163, 164, 166, 184, 185, 186, 187, 188, 189], "certain": [4, 64, 89, 147, 148, 156, 159, 160, 163, 164, 166, 186, 189], "assumpt": [4, 22, 23, 73, 94, 97, 133, 145, 151, 152, 153, 156, 157, 160, 163, 164, 166, 184, 185, 189], "specif": [4, 9, 10, 11, 12, 15, 17, 23, 27, 52, 54, 56, 59, 63, 66, 84, 89, 94, 95, 97, 98, 103, 106, 107, 108, 109, 111, 116, 133, 135, 143, 144, 146, 147, 149, 150, 152, 153, 156, 157, 160, 163, 164, 166, 184, 185, 186, 187, 189], "correspond": [4, 9, 10, 11, 12, 17, 23, 36, 39, 51, 56, 59, 60, 65, 74, 77, 84, 85, 86, 89, 95, 106, 107, 109, 111, 116, 118, 123, 133, 139, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 188, 189], "contain": [4, 6, 9, 10, 11, 14, 15, 17, 22, 23, 25, 26, 29, 31, 34, 36, 39, 45, 46, 50, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 84, 89, 94, 95, 97, 98, 100, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 121, 123, 128, 139, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 163, 164, 184, 187, 188, 189], "made": [4, 14, 27, 60, 73, 89, 109, 144, 149, 150, 157, 159, 185, 189], "find": [4, 17, 23, 130, 144, 150, 165, 187], "mai": [4, 7, 27, 36, 45, 46, 47, 50, 52, 53, 54, 55, 56, 59, 61, 63, 65, 66, 67, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 94, 97, 98, 104, 107, 109, 113, 114, 116, 133, 143, 145, 149, 152, 155, 156, 157, 159, 160, 163, 164, 165, 166, 184, 185, 186, 189], "occur": [4, 50, 71, 72, 74, 77, 79, 80, 81, 82, 83, 116, 145, 150, 152, 156, 158, 160, 164, 166, 185, 187], "wa": [4, 6, 9, 13, 15, 22, 23, 25, 36, 50, 55, 91, 103, 108, 109, 111, 116, 117, 118, 127, 144, 146, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 163, 166, 184, 185, 189], "initi": [4, 17, 22, 36, 52, 54, 55, 57, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 97, 109, 111, 114, 116, 130, 132, 143, 144, 145, 146, 149, 150, 151, 152, 157, 159, 160, 161, 163, 164, 165, 177, 184, 185, 186, 187, 189], "case": [4, 27, 48, 64, 65, 67, 69, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 89, 90, 92, 97, 98, 104, 107, 108, 109, 111, 113, 116, 120, 121, 122, 123, 124, 130, 138, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 164, 173, 179, 183, 184, 185, 186, 187, 188, 189], "doubl": [4, 20, 106, 143, 146, 149, 152, 155, 185], "incorrect": [4, 36, 149, 163], "g": [4, 14, 17, 19, 21, 22, 23, 25, 27, 32, 36, 39, 44, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 74, 77, 79, 80, 81, 82, 83, 84, 87, 95, 97, 98, 100, 105, 107, 108, 109, 111, 112, 117, 118, 126, 130, 133, 135, 136, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 166, 184, 185, 189], "again": [4, 55, 59, 67, 145, 149, 152, 155, 164, 184, 185], "part": [4, 17, 48, 64, 84, 89, 111, 124, 143, 146, 149, 150, 151, 155, 159, 160, 166, 184, 185, 187], "get": [4, 5, 7, 8, 36, 48, 52, 54, 55, 56, 57, 58, 59, 63, 66, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 94, 97, 109, 111, 116, 120, 121, 122, 123, 124, 127, 130, 133, 137, 143, 146, 148, 149, 150, 151, 152, 153, 155, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189, 190], "To": [4, 7, 13, 17, 23, 36, 67, 97, 98, 109, 111, 116, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 163, 164, 166, 184, 185, 186, 187, 188, 189], "prevent": [4, 17, 55, 57, 61, 109, 112, 145, 160, 163, 166], "happen": [4, 48, 52, 97, 135, 149, 150, 152, 164, 186, 187, 189], "here": [4, 17, 21, 22, 23, 36, 57, 60, 63, 64, 89, 97, 98, 109, 116, 118, 120, 121, 122, 123, 124, 130, 140, 143, 144, 145, 146, 147, 149, 151, 152, 156, 159, 160, 163, 164, 166, 184, 185, 186, 188, 189], "should": [4, 7, 17, 23, 36, 47, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 86, 87, 89, 90, 94, 97, 98, 103, 106, 107, 108, 109, 111, 113, 116, 120, 121, 122, 123, 124, 133, 137, 138, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 158, 159, 160, 163, 164, 166, 184, 185, 186, 187, 188, 189], "been": [4, 17, 22, 25, 32, 54, 55, 57, 59, 63, 65, 89, 97, 116, 123, 133, 135, 143, 144, 145, 146, 147, 149, 151, 152, 153, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188], "were": [4, 5, 11, 12, 17, 117, 148, 149, 150, 151, 152, 153, 156, 157, 159, 164, 185, 186, 188, 189], "load": [4, 17, 19, 36, 48, 50, 95, 109, 110, 111, 143, 144, 145, 149, 152, 153, 155, 157, 160, 163, 164, 184, 186, 187, 189], "thu": [4, 7, 9, 12, 17, 36, 52, 54, 55, 56, 59, 61, 63, 66, 71, 72, 74, 77, 79, 80, 81, 82, 83, 95, 107, 108, 109, 117, 123, 143, 145, 146, 149, 150, 151, 152, 156, 157, 159, 160, 163, 164, 166, 184, 186, 187, 188, 189], "prompt": [4, 184], "subset": [4, 7, 8, 39, 102, 103, 106, 114, 116, 130, 147, 149, 152, 164], "item": [4, 6, 41, 42, 59, 84, 97, 99, 116, 118, 127, 130, 133, 137, 140, 143, 145, 149, 153, 158, 164], "self": [4, 57, 106, 111, 120, 121, 122, 123, 124, 133, 145, 155, 159], "tvec": [4, 17, 22, 23, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 94, 98, 107, 109, 112, 116, 143, 153, 155, 160, 184, 186, 188, 189], "val": [4, 59, 64, 65, 97, 98, 109, 130, 133, 145, 146, 148, 149, 151, 152, 153, 186, 187], "t": [4, 7, 8, 17, 22, 23, 33, 36, 48, 54, 57, 59, 60, 63, 71, 72, 74, 75, 77, 79, 80, 81, 82, 83, 85, 86, 87, 89, 94, 95, 97, 106, 111, 116, 117, 118, 123, 133, 136, 140, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 159, 160, 163, 164, 166, 184, 185, 186, 187, 188, 189], "doubli": 4, "nest": [4, 5, 15, 95, 106, 130, 137, 152, 156, 164], "form": [4, 7, 8, 51, 60, 95, 111, 130, 133, 144, 145, 152, 156, 164], "result_nam": [4, 111, 116, 143, 147, 149, 150, 151, 152, 165, 185, 189], "stage_nam": [4, 7, 8], "np": [4, 7, 8, 23, 40, 41, 42, 71, 72, 73, 74, 77, 86, 89, 98, 106, 109, 123, 130, 133, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 165], "sie": 4, "input": [4, 7, 13, 14, 25, 36, 39, 41, 42, 55, 62, 67, 92, 94, 97, 102, 111, 114, 116, 120, 121, 122, 123, 124, 127, 137, 138, 143, 145, 146, 149, 151, 153, 155, 156, 160, 163, 164, 165, 166, 184, 185, 187, 188, 189], "mapping_funct": [4, 116, 152, 165], "add_sampl": [4, 116], "properti": [4, 17, 23, 33, 36, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 73, 87, 94, 95, 98, 104, 106, 107, 108, 112, 116, 117, 124, 130, 133, 143, 144, 145, 149, 151, 152, 153, 156, 159, 184], "n_sampl": [4, 111, 116, 152, 165], "int": [4, 22, 23, 25, 32, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 106, 111, 116, 130], "number": [4, 12, 17, 22, 25, 28, 36, 48, 54, 55, 56, 59, 61, 63, 64, 65, 74, 77, 84, 97, 98, 102, 106, 107, 109, 111, 116, 117, 126, 130, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 165, 166, 184, 185, 186, 187, 188, 189], "present": [4, 13, 22, 23, 33, 36, 84, 94, 95, 109, 116, 117, 118, 123, 130, 133, 135, 144, 145, 146, 149, 150, 152, 153, 159, 160, 163, 164, 165, 184, 185, 186, 189], "yet": [4, 92, 116, 147, 150, 156, 159, 184, 189], "empti": [4, 17, 22, 23, 25, 29, 36, 55, 61, 104, 111, 116, 118, 130, 144, 145, 149, 150, 153, 157, 162, 163, 164, 166, 184, 188], "assum": [4, 97, 104, 107, 109, 111, 116, 133, 144, 145, 150, 160, 163, 164, 184, 185, 188, 189], "horizont": [4, 99, 116], "fals": [4, 11, 13, 15, 26, 28, 37, 44, 50, 87, 94, 95, 97, 99, 107, 109, 111, 116, 130, 132, 133, 136, 140, 145, 149, 150, 151, 152, 153, 155, 164, 165, 185, 189], "offset": [4, 94, 95, 107, 109, 116, 133], "veri": [4, 73, 116, 144, 146, 149, 150, 153, 159, 160, 163, 164, 166, 186], "similar": [4, 71, 72, 74, 77, 79, 80, 81, 82, 83, 106, 116, 117, 118, 144, 146, 149, 150, 152, 153, 163, 164, 165, 186, 188, 189], "doesn": [4, 33, 59, 116, 149, 152, 159, 166, 186, 188, 189], "stack": [4, 12, 99, 101, 116, 143, 147, 150, 152, 163, 186, 188, 189], "mislead": [4, 98, 116, 152], "sinc": [4, 48, 55, 61, 84, 89, 109, 111, 116, 130, 149, 153, 155, 159, 164, 184, 185, 187, 188, 189], "appli": [4, 11, 59, 73, 76, 84, 87, 89, 94, 95, 97, 107, 108, 109, 116, 121, 123, 130, 133, 145, 149, 150, 151, 152, 159, 160, 164, 166, 184, 185, 189], "cumul": [4, 73, 116, 149, 150, 159], "within": [4, 17, 23, 33, 54, 57, 60, 64, 87, 97, 98, 109, 111, 116, 117, 118, 121, 130, 145, 146, 147, 149, 152, 153, 155, 157, 159, 163, 164, 165, 166, 184, 185, 186, 189], "new": [4, 17, 20, 22, 23, 31, 56, 57, 65, 94, 95, 97, 98, 100, 103, 108, 109, 111, 112, 116, 117, 123, 130, 135, 140, 143, 145, 146, 147, 152, 153, 159, 163, 166, 179, 184, 185, 186, 188, 189], "rel": [4, 69, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 89, 92, 97, 106, 111, 116, 128, 143, 144, 149, 159, 160, 162, 163, 164, 166, 185, 186, 188], "current": [4, 10, 22, 23, 31, 36, 43, 48, 57, 84, 107, 111, 116, 130, 132, 139, 145, 147, 149, 151, 159, 160, 168, 184, 185, 188, 189], "axi": [4, 12, 23, 97, 98, 101, 116, 143, 146, 147, 148, 150, 151, 152, 160, 185, 189], "intend": [4, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 97, 116, 136, 144, 149, 184, 185], "facilit": [4, 13, 27, 97, 104, 116, 144, 145, 146, 152, 153, 155, 164, 189], "compar": [4, 109, 114, 116, 143, 146, 147, 149, 156, 163, 184, 185, 186, 189], "across": [4, 23, 57, 60, 65, 74, 77, 82, 97, 111, 116, 130, 144, 145, 149, 152, 156, 162, 163, 164, 166, 184, 186, 187], "iter": [4, 11, 45, 46, 47, 57, 67, 76, 84, 90, 95, 111, 116, 130, 133, 137, 149, 152, 185], "appear": [4, 15, 17, 23, 37, 39, 48, 74, 77, 82, 93, 99, 101, 103, 116, 117, 144, 145, 149, 150, 152, 153, 155, 156, 159, 160, 163, 164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189], "permut": [4, 116], "true": [4, 6, 9, 10, 15, 17, 19, 23, 28, 36, 37, 50, 59, 87, 94, 95, 97, 99, 107, 109, 111, 116, 117, 120, 121, 122, 123, 124, 130, 132, 133, 136, 138, 140, 143, 145, 149, 150, 152, 153, 158, 163, 165, 166, 189], "float": [4, 6, 17, 25, 40, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 73, 74, 77, 79, 81, 82, 83, 84, 87, 89, 91, 106, 108, 111, 112, 114, 116, 117, 133, 134, 136], "posit": [4, 103, 111, 116, 130, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 164, 185, 187, 189], "determin": [4, 22, 26, 55, 61, 84, 107, 111, 116, 145, 149, 160, 162, 164, 166, 184, 185], "content": [4, 17, 22, 26, 27, 32, 36, 44, 109, 111, 116, 133, 144, 146, 152, 153, 167, 184, 186], "plot_distribut": [4, 116, 152], "could": [4, 13, 14, 17, 23, 25, 48, 59, 69, 73, 87, 89, 90, 94, 97, 111, 116, 133, 143, 144, 146, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "superimpos": [4, 7, 116, 149, 152], "default": [4, 7, 17, 18, 20, 25, 28, 36, 48, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 73, 74, 77, 86, 87, 89, 94, 95, 97, 98, 99, 100, 101, 104, 109, 111, 114, 116, 128, 130, 138, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "most": [4, 69, 97, 111, 116, 130, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 163, 164, 166, 184, 185, 186, 187, 189], "would": [4, 13, 15, 17, 23, 27, 44, 48, 55, 61, 64, 65, 69, 71, 72, 73, 74, 77, 87, 89, 92, 94, 103, 107, 109, 111, 114, 116, 118, 134, 139, 140, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "so": [4, 7, 12, 13, 17, 22, 41, 42, 43, 48, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 73, 89, 95, 97, 104, 106, 108, 113, 114, 116, 117, 118, 133, 135, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "probabl": [4, 7, 22, 36, 59, 98, 116, 118, 126, 136, 145, 148, 149, 154, 155, 160, 163, 164, 166, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 186, 188], "wouldn": [4, 116], "matter": [4, 73, 94, 116, 151, 166, 186, 189], "target": [4, 31, 73, 88, 91, 107, 109, 116, 118, 146, 149, 152, 155, 159, 160, 163, 166, 185, 186, 189], "differ": [4, 7, 17, 21, 23, 44, 55, 61, 67, 89, 94, 95, 97, 98, 107, 108, 109, 111, 116, 118, 126, 133, 137, 144, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 160, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "primarili": [4, 109, 184, 186], "fact": [4, 15, 64, 116, 130, 144, 146, 149, 150, 153, 156, 159, 163, 164, 166, 186, 187], "around": [4, 110, 117, 150, 152, 160, 185, 189], "simplifi": [4, 55, 149, 155, 166, 184], "routin": [4, 156, 163], "properli": 4, "actual": [4, 17, 22, 36, 48, 51, 55, 57, 59, 84, 94, 97, 117, 118, 135, 144, 145, 146, 147, 149, 150, 152, 153, 155, 159, 160, 163, 164, 166, 184, 185, 186, 188, 189], "flexibl": [4, 130, 144, 159, 164, 184], "term": [4, 59, 60, 150, 159, 160, 164, 185, 189], "arbitrari": [4, 73, 133, 137, 144, 146, 149, 152, 153, 155, 160, 186], "like": [4, 14, 17, 33, 60, 63, 89, 97, 98, 104, 106, 108, 109, 117, 123, 130, 133, 135, 143, 144, 146, 149, 150, 151, 152, 153, 156, 157, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 189], "virtual": 4, "usag": [4, 13, 17, 36, 39, 46, 47, 50, 71, 72, 74, 77, 79, 80, 81, 82, 83, 87, 109, 111, 116, 123, 128, 130, 132, 136, 137, 145, 149, 152, 153, 159, 160, 166], "One": [4, 11, 12, 84, 117, 148, 149, 152, 153, 164, 166], "OR": [4, 87, 97, 102, 133, 138], "legend": [4, 99, 100, 101, 102, 103, 104, 116, 147, 152, 153], "either": [4, 6, 14, 17, 22, 36, 57, 86, 87, 89, 97, 109, 116, 130, 133, 143, 145, 148, 149, 153, 159, 160, 163, 165, 166, 184, 185, 186], "done": [4, 17, 27, 57, 59, 64, 111, 143, 144, 145, 147, 149, 151, 153, 155, 160, 166, 184, 186, 189], "simpli": [4, 73, 86, 87, 89, 133, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 164, 166, 184, 186, 188, 189], "alreadi": [4, 6, 17, 36, 54, 63, 89, 97, 106, 109, 133, 145, 149, 150, 151, 152, 153, 158, 160, 163, 166, 184, 185], "onc": [4, 54, 55, 56, 59, 63, 66, 67, 107, 117, 143, 144, 145, 150, 152, 158, 159, 163, 164], "applic": [4, 64, 145, 149, 152, 153, 156, 157, 160, 163, 164, 184], "clearer": [4, 149, 152, 159, 160], "plot_seri": [4, 97, 104, 116, 143, 146, 147, 148, 149, 150, 151, 152, 165, 184, 185, 186, 188, 189], "style": [4, 116, 147, 149], "quartil": [4, 116, 152], "seri": [4, 23, 36, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 94, 95, 97, 101, 107, 109, 116, 133, 143, 144, 146, 147, 148, 150, 151, 152, 153, 155, 157, 185, 187, 189], "whether": [4, 9, 22, 23, 27, 36, 56, 97, 99, 100, 107, 116, 117, 120, 121, 122, 123, 124, 130, 133, 137, 144, 145, 147, 149, 152, 153, 155, 157, 159, 160, 163, 164, 166, 186, 187, 189], "transpar": [4, 116, 145, 149, 185], "line": [4, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 97, 100, 101, 116, 147, 149, 152, 153, 164, 185], "area": [4, 12, 116, 149, 152, 189], "For": [4, 13, 14, 17, 21, 22, 23, 36, 39, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 73, 74, 77, 84, 87, 89, 94, 95, 97, 98, 99, 103, 107, 108, 109, 114, 116, 127, 130, 134, 135, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "std": [4, 116], "ci": [4, 116], "depend": [4, 22, 23, 36, 39, 44, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 75, 84, 100, 104, 107, 109, 113, 116, 145, 146, 149, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189], "how": [4, 84, 95, 97, 116, 137, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 163, 164, 166, 184, 185, 186, 187, 188, 189], "size": [4, 7, 41, 42, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 89, 91, 97, 98, 107, 108, 109, 111, 112, 116, 117, 133, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 159, 160, 164, 165, 166, 184, 185, 186, 187, 188, 189], "run_sim": [4, 52, 111, 116, 132, 143, 147, 148, 149, 150, 151, 152, 155, 165, 184, 185, 189], "proj": [4, 20, 45, 46, 47, 48, 50, 116, 130, 149, 152, 160], "progset": [4, 46, 57, 59, 60, 67, 70, 75, 84, 85, 86, 87, 88, 89, 92, 109, 110, 111, 114, 116, 117, 120, 121, 122, 123, 124, 143, 145, 147, 148, 149, 152, 155, 159, 189], "progset_instruct": [4, 111, 116, 143, 147, 152, 155, 189], "1": [4, 11, 13, 32, 36, 41, 42, 48, 50, 54, 57, 59, 61, 63, 64, 79, 80, 82, 87, 89, 97, 101, 103, 109, 111, 114, 116, 117, 130, 134, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "parallel": [4, 92, 111, 116, 138, 140, 152, 158], "max_attempt": [4, 111, 116], "insuffici": [4, 116, 150, 152, 156, 185], "memori": [4, 116], "avail": [4, 14, 22, 23, 36, 48, 63, 89, 94, 98, 106, 109, 116, 117, 143, 145, 147, 149, 153, 156, 157, 160, 163, 164, 184, 185, 186, 187, 189], "prior": [4, 17, 57, 84, 97, 98, 106, 109, 116, 143, 145, 147, 149, 152, 156, 159, 160, 164, 166], "insert": [4, 32, 94, 95, 109, 116, 130, 133, 151, 152, 153, 159, 160, 163, 184], "never": [4, 55, 61, 71, 72, 116, 145, 151, 159, 163, 164, 166], "taken": [4, 97, 116, 150, 159, 160, 186], "typic": [4, 17, 22, 23, 36, 48, 54, 56, 59, 63, 66, 71, 72, 89, 107, 109, 116, 140, 143, 144, 145, 147, 149, 150, 151, 152, 156, 157, 158, 159, 164, 166, 184, 185, 186, 187, 189], "budget": [4, 20, 85, 89, 108, 109, 111, 116, 117, 119, 121, 123, 146, 147, 151, 152, 159, 164, 189], "separ": [4, 13, 36, 48, 55, 61, 86, 100, 101, 104, 111, 116, 118, 130, 143, 144, 145, 146, 147, 152, 156, 157, 159, 163, 164, 184, 187], "_sample_and_map": [4, 116], "doe": [4, 15, 17, 26, 27, 36, 48, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 72, 88, 89, 97, 98, 106, 111, 116, 130, 144, 147, 149, 150, 151, 152, 153, 155, 156, 159, 160, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189], "reduct": [4, 116, 148, 152, 159], "worker": [4, 111, 116, 140, 158, 159], "multiprocess": [4, 116], "accumul": [4, 84, 97, 98, 112, 116, 117, 148, 160], "integ": [4, 6, 13, 59, 111, 112, 116, 118, 130, 138, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "programset": [4, 48, 59, 60, 67, 70, 75, 84, 85, 86, 87, 88, 92, 105, 106, 107, 108, 111, 113, 114, 116, 117, 120, 121, 122, 123, 124, 143, 152, 155, 159, 164, 189], "instruct": [4, 52, 67, 68, 69, 70, 73, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 92, 107, 108, 109, 111, 116, 117, 120, 121, 122, 123, 124, 143, 145, 147, 152, 159, 163, 189], "common": [4, 9, 21, 39, 66, 87, 111, 116, 123, 144, 145, 147, 149, 151, 152, 153, 155, 158, 159, 160, 166, 184, 186], "program": [4, 19, 21, 23, 57, 59, 60, 67, 68, 69, 70, 74, 77, 82, 84, 85, 86, 87, 88, 89, 90, 97, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 145, 146, 152, 154, 155, 157, 159, 160, 161, 165, 166, 184, 185, 190], "length": [4, 11, 32, 84, 86, 87, 100, 102, 106, 111, 116, 130, 133, 137, 149, 156], "element": [4, 59, 111, 116, 130, 133, 144, 145, 147, 153, 159], "window": [4, 111, 116, 152], "__name__": [4, 111, 116, 152], "__main__": [4, 111, 116, 152], "gate": [4, 111, 116, 140, 158], "retri": [4, 111, 116], "bad": [4, 52, 111, 116, 152, 159], "set_baselin": [4, 116, 152], "assign": [4, 13, 17, 36, 50, 54, 56, 59, 61, 63, 66, 67, 89, 97, 108, 111, 116, 133, 145, 147, 149, 153, 160, 162, 163, 184, 187, 188], "unsampl": [4, 116], "wai": [4, 12, 17, 48, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 98, 116, 123, 130, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 164, 165, 166, 184, 185, 186, 187, 188, 189], "exampl": [4, 5, 12, 13, 17, 21, 23, 25, 36, 39, 41, 42, 46, 47, 50, 52, 53, 56, 65, 66, 67, 72, 73, 74, 75, 77, 84, 85, 87, 88, 90, 94, 95, 97, 98, 99, 103, 107, 108, 109, 114, 116, 118, 123, 127, 128, 130, 132, 133, 134, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 181, 182, 184, 185, 186, 187, 188, 189], "vertic": [4, 99, 116, 149, 152, 163], "solid": [4, 116, 152], "vector": [4, 17, 23, 57, 59, 60, 62, 97, 98, 107, 111, 112, 116, 117, 145, 149, 153, 155, 156, 159, 160, 163, 166], "updat": [4, 17, 36, 43, 48, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 84, 106, 109, 111, 112, 116, 130, 133, 144, 145, 148, 149, 152, 153, 157, 159, 160, 163, 187, 188], "result_list": [4, 116], "v": [4, 116, 130, 133, 143, 147, 151, 153, 163, 171, 172, 184], "meth": [4, 17, 109, 116], "behaviour": [4, 89, 116, 133, 149, 150, 163, 185], "python": [4, 16, 34, 38, 39, 108, 116, 130, 135, 143, 144, 149, 152, 153, 155, 160, 184], "built": [4, 67, 116, 152, 156, 159], "want": [4, 17, 59, 116, 117, 133, 143, 144, 146, 147, 149, 151, 152, 155, 156, 159, 160, 163, 184, 185, 186, 187], "dynam": [4, 36, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 97, 116, 145, 149, 150, 157, 160, 163, 166, 168, 169, 173, 175, 178, 179, 183, 184, 186, 187], "construct": [4, 17, 28, 39, 50, 54, 55, 60, 61, 62, 63, 64, 95, 97, 109, 111, 116, 143, 144, 145, 146, 147, 149, 151, 152, 153, 159, 160, 163], "after": [4, 23, 55, 57, 59, 64, 65, 67, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 89, 97, 107, 109, 114, 116, 117, 123, 143, 144, 145, 147, 149, 150, 151, 156, 157, 158, 159, 160, 163, 164, 165, 166, 184, 189], "everi": [4, 10, 17, 59, 89, 93, 106, 107, 116, 117, 118, 144, 145, 147, 148, 149, 150, 152, 153, 155, 159, 163, 164, 166, 184, 185, 186], "up": [4, 7, 22, 36, 53, 54, 55, 56, 57, 60, 61, 65, 66, 89, 97, 98, 108, 111, 113, 116, 118, 133, 143, 144, 145, 146, 147, 149, 150, 151, 152, 159, 160, 163, 166, 185, 186, 187, 188, 189], "individu": [4, 65, 90, 97, 116, 145, 147, 149, 151, 152, 153, 155, 156, 157, 159, 163, 164, 166, 184, 185, 189], "thrown": [5, 78, 90, 127, 144], "fail": [5, 89, 144, 163, 185], "request": [5, 7, 36, 73, 94, 97, 98, 111, 117, 133, 149, 152, 158, 159, 163], "correctli": [5, 25, 59, 60, 98, 108, 150, 155, 160, 164, 187], "source_data": 6, "0": [6, 17, 32, 40, 42, 48, 50, 60, 62, 71, 72, 73, 74, 77, 79, 80, 82, 86, 87, 89, 97, 98, 99, 103, 106, 111, 112, 114, 117, 118, 123, 130, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "print": [6, 7, 15, 23, 117, 130, 140, 144, 148, 149, 150, 152, 153, 158, 185, 186, 187, 189], "summari": [6, 152, 164], "cascadeensembl": [6, 152], "scalar": [6, 7, 8, 9, 10, 11, 17, 25, 41, 42, 55, 60, 61, 71, 72, 74, 77, 79, 80, 81, 82, 83, 86, 89, 94, 97, 106, 107, 108, 109, 116, 117, 123, 133, 147, 149, 155, 159, 160], "ignor": [6, 23, 27, 33, 47, 117, 143, 144, 159, 184, 185, 186, 189], "uniqu": [6, 36, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 111, 117, 144, 149, 156, 157, 159, 163], "pretti": 6, "absolut": [6, 69, 73, 74, 77, 86, 89, 91, 111, 128, 139, 143, 159, 189], "round": [6, 155], "percentag": [6, 74, 77, 164], "2": [6, 13, 32, 39, 41, 42, 48, 97, 103, 111, 114, 116, 130, 136, 137, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 164, 165, 166, 170, 171, 172, 173, 174, 179, 180, 184, 185, 186, 187, 188, 189], "sig": 6, "counterpart": 7, "slightli": [7, 164, 188], "still": [7, 36, 65, 144, 149, 155, 156, 159, 162, 163, 164, 165, 166, 187, 188], "guarante": [7, 9, 25, 27, 36, 159, 164, 166, 188, 189], "wherea": [7, 22, 84, 95, 97, 109, 111, 149, 150, 151, 152, 156, 160, 186], "omit": [7, 104, 118, 130, 146, 160, 163], "explicitli": [7, 36, 86, 89, 97, 133, 149, 151, 152, 160, 162, 163, 164, 184, 187, 189], "ensur": [7, 36, 48, 72, 84, 98, 108, 144, 145, 152, 155, 159, 160, 185], "nb": [7, 155], "In": [7, 17, 22, 27, 36, 48, 55, 56, 59, 65, 67, 71, 72, 74, 77, 79, 80, 81, 82, 83, 87, 89, 98, 107, 108, 110, 113, 117, 130, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 189], "NOT": [7, 27, 86, 97, 140, 158, 189], "log": [7, 140, 141, 161], "level": [7, 60, 99, 109, 126, 130, 132, 137, 138, 140, 145, 152, 153, 158, 160, 166, 186, 189], "debug": [7, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 146, 149, 156, 158], "messag": [7, 15, 33, 140, 158], "regard": [7, 17, 144, 149], "cascade_v": [7, 8], "param": [8, 97, 104, 123, 155], "sanitize_pop": [8, 9, 10, 11, 12], "show_tabl": [9, 10], "own": [9, 84, 158, 159, 160], "fe": [9, 14, 17], "decid": [9, 22, 149, 164, 187], "bool": [9, 15, 17, 19, 23, 36, 87, 94, 107, 109, 111, 117, 120, 121, 122, 123, 124, 130, 133], "loss": [9, 10, 12, 149, 152, 160, 170], "tabl": [9, 10, 17, 21, 22, 23, 27, 29, 118, 144, 146, 149, 152, 163, 164, 184, 186, 187, 189], "also": [9, 13, 15, 17, 23, 36, 44, 51, 55, 56, 57, 59, 60, 61, 65, 84, 89, 94, 95, 97, 98, 104, 108, 109, 111, 118, 121, 123, 124, 128, 130, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 166, 184, 185, 186, 187, 188, 189], "shown": [9, 28, 37, 99, 138, 143, 144, 146, 147, 148, 149, 151, 152, 153, 155, 160, 162, 163, 164, 166, 184, 185, 186, 188, 189], "produc": [9, 11, 17, 36, 44, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 84, 99, 101, 117, 120, 121, 122, 123, 124, 143, 146, 149, 151, 152, 153, 159, 160, 164, 165, 166, 185, 188, 189], "fanci": 11, "overrid": [11, 92, 99, 101, 109, 114, 143, 151, 153, 154, 160], "timeseri": [12, 17, 22, 23, 94, 98, 107, 108, 123, 147, 151, 152, 159, 160], "overal": [12, 79, 149, 153, 156, 164, 166, 185, 188, 189], "height": [12, 149], "peopl": [12, 14, 55, 60, 64, 65, 77, 97, 107, 108, 109, 117, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 160, 162, 163, 164, 166, 184, 185, 186, 187, 188, 189], "progress": [12, 138, 140, 144, 146, 152, 157, 166], "left": [12, 17, 25, 59, 145, 146, 149, 151, 153, 156, 163, 164, 166, 184], "right": [12, 145, 149, 156, 164, 184, 185], "top": [12, 149, 153, 162, 163, 166, 186], "bottom": [12, 149, 166, 186], "chang": [12, 17, 44, 48, 50, 59, 60, 67, 69, 70, 73, 84, 85, 87, 98, 102, 103, 104, 106, 107, 109, 114, 123, 130, 138, 143, 144, 145, 146, 147, 149, 150, 152, 154, 155, 159, 160, 163, 166, 184, 185, 186, 189], "flow": [12, 55, 57, 60, 65, 97, 118, 135, 145, 146, 147, 148, 160, 162, 164, 166, 178, 184, 185, 186, 188, 189], "over": [12, 41, 42, 45, 46, 47, 57, 59, 64, 65, 74, 77, 79, 82, 95, 97, 106, 111, 114, 116, 121, 130, 137, 145, 146, 147, 148, 149, 150, 151, 152, 155, 157, 159, 160, 163, 164, 165, 166, 184, 185, 186, 189], "fallback_us": [13, 15], "conveni": [13, 54, 56, 59, 63, 66, 98, 108, 109, 115, 146, 149, 159], "sever": [13, 75, 84, 87, 97, 111, 146, 149, 151, 153, 155, 159, 163, 166, 185], "backend": [13, 157, 184], "As": [13, 56, 60, 64, 94, 121, 130, 144, 145, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 162, 163, 164, 166, 184, 185, 186, 189], "suppos": [13, 111, 117, 144, 149, 150, 151, 153, 155, 156, 159, 160, 164, 166, 184, 187, 189], "spreadsheet": [13, 17, 21, 22, 23, 27, 29, 30, 31, 36, 95, 109, 110, 111, 143, 144, 146, 152, 164, 187], "had": [13, 17, 25, 64, 145, 149, 150, 156, 159, 163, 164, 166, 184, 187, 189], "su": [13, 97, 100, 144, 145, 146, 148, 149, 153, 156, 160, 164, 166, 168, 169, 172, 174, 177, 178, 180, 184, 185, 186, 187, 188, 189], "vac": [13, 97, 100, 144, 145, 146, 149, 153, 156, 160, 166, 178, 180], "inf": [13, 69, 71, 72, 73, 74, 77, 86, 89, 97, 117, 148, 151, 159, 177, 184, 185, 186, 187, 188, 189], "Then": [13, 97, 118, 145, 147, 149, 152, 153, 155, 159, 163, 164, 184, 185, 186, 189], "main": [13, 27, 92, 93, 111, 119, 140, 145, 146, 152, 163, 166, 184, 187, 189], "necessari": [13, 27, 36, 48, 50, 67, 73, 84, 95, 97, 143, 144, 145, 146, 149, 152, 155, 156, 159, 160, 165, 185], "validate_cascad": 13, "namep": 13, "three": [13, 20, 22, 143, 144, 146, 149, 153, 155, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 189], "format": [13, 21, 22, 23, 27, 30, 31, 95, 104, 136, 144, 147, 153, 160, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186], "cascade_nam": [13, 15, 79, 80], "cascade_dict": [13, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "pop_sourc": 14, "pop_typ": [14, 17, 22, 23, 36, 60, 109, 153, 184], "full": [14, 17, 22, 36, 39, 57, 60, 107, 109, 111, 117, 130, 143, 146, 153, 159, 166, 175, 186, 189], "total": [14, 65, 73, 84, 87, 89, 90, 97, 107, 108, 143, 144, 145, 146, 149, 156, 162, 163, 164, 166, 178, 184, 186, 187, 189], "shorthand": [14, 144], "purpos": [14, 50, 60, 64, 107, 145, 149, 159, 163, 184], "That": [14, 23, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 133, 144, 149, 150, 152, 155, 156, 159, 160, 162, 163, 164, 189], "draw": [14, 56, 101, 145, 149], "check": [15, 17, 23, 26, 33, 84, 94, 97, 98, 109, 117, 133, 144, 149, 152, 156, 159, 163, 184, 185, 186, 187], "invalid": [15, 36, 52, 78, 109, 156, 166], "subsequ": [15, 56, 71, 72, 74, 77, 79, 80, 81, 82, 83, 86, 109, 143, 149, 151, 152, 157, 160, 166, 184], "intrins": [15, 84, 108, 145, 149], "span": [15, 67, 97, 143, 145, 149, 163], "event": [15, 150], "reflect": [15, 73, 84, 95, 109, 144, 149, 152, 159, 160, 163, 164, 166, 185, 186, 187, 189], "str": [15, 17, 19, 22, 23, 26, 27, 32, 36, 39, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 94, 95, 98, 106, 109, 111, 116, 117, 121, 123, 124, 130, 131, 133, 135, 136, 140], "rais": [15, 17, 25, 26, 33, 52, 58, 62, 73, 76, 86, 90, 91, 109, 130, 133, 141, 152, 160, 164], "invalidcascad": 15, "databook": [16, 17, 21, 23, 27, 28, 36, 37, 57, 60, 93, 94, 95, 97, 106, 108, 109, 111, 143, 144, 145, 148, 149, 152, 154, 155, 156, 157, 160, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189], "serv": [16, 55, 67, 68, 110, 117, 145, 149, 152, 164], "well": [16, 41, 42, 89, 103, 109, 117, 143, 144, 145, 146, 149, 150, 153, 157, 159, 160, 163, 184, 185, 186, 187, 188], "read": [16, 17, 22, 23, 27, 28, 29, 64, 95, 109, 144, 149, 153, 156, 159, 160, 184, 187, 189], "save": [16, 17, 36, 67, 95, 104, 111, 117, 143, 144, 145, 147, 152, 153, 159, 184, 186, 189], "back": [16, 17, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 108, 109, 144, 145, 149, 151, 153, 159, 160, 164, 166, 185, 186], "excel": [16, 17, 36, 67, 111, 117, 118, 143, 144, 146, 153, 164, 184], "file": [16, 17, 21, 27, 34, 36, 37, 38, 95, 104, 109, 111, 117, 118, 128, 135, 139, 140, 141, 142, 143, 144, 145, 146, 149, 153, 155, 159, 162, 164, 166, 184, 186, 187, 188, 189], "prettyobj": 17, "equival": [17, 60, 97, 109, 134, 138, 143, 149, 151, 158, 166, 185, 189], "enter": [17, 22, 23, 25, 38, 106, 108, 109, 114, 133, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 160, 162, 163, 164, 166, 178, 184, 185, 186, 187, 188, 189], "interfac": [17, 66, 70, 109, 110, 115, 159, 163, 185], "modifi": [17, 36, 57, 94, 97, 98, 106, 109, 111, 114, 119, 120, 121, 122, 123, 124, 143, 144, 147, 149, 152, 155, 159, 160, 163, 166, 184, 185, 186], "ad": [17, 20, 23, 25, 27, 31, 36, 44, 48, 53, 59, 60, 66, 74, 77, 82, 94, 104, 107, 111, 130, 145, 149, 151, 152, 157, 159, 160, 163, 164, 165, 166, 184, 186], "remov": [17, 65, 94, 103, 109, 130, 133, 143, 149, 151, 152, 163, 166, 184, 186, 187, 189], "etc": [17, 27, 36, 97, 110, 114, 130, 138, 144, 146, 149, 160, 163], "write": [17, 22, 23, 27, 31, 36, 37, 109, 117, 118, 140, 143, 145, 146, 149, 152, 153, 156, 158, 159, 163, 184, 187, 188], "instanti": [17, 22, 23, 44, 56, 60, 64, 65, 107, 109, 116, 144, 145, 149, 152, 159, 184, 186, 189], "static": [17, 22, 23, 97, 109, 111, 147], "given": [17, 23, 36, 53, 55, 60, 61, 66, 76, 94, 97, 106, 109, 111, 113, 117, 130, 133, 137, 143, 144, 145, 146, 149, 150, 152, 153, 156, 157, 159, 163, 164, 184, 185, 189], "from_spreadsheet": [17, 109, 143, 152, 153, 186, 189], "simpl": [17, 27, 60, 97, 144, 147, 155, 156, 159, 163, 164, 166, 170, 175, 184, 185, 187, 188, 189], "add_interact": [17, 153, 186], "code_nam": [17, 22, 36, 109, 153], "full_nam": [17, 22, 109, 153], "from_pop_typ": [17, 22], "to_pop_typ": [17, 22], "interact": [17, 22, 36, 59, 60, 67, 95, 97, 106, 109, 123, 133, 144, 145, 146, 147, 149, 154, 163, 184, 189], "manual": [17, 27, 36, 48, 92, 97, 123, 149, 151, 153, 156, 163, 185, 186, 187, 189], "identifi": [17, 22, 36, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 95, 98, 111, 121, 123, 124, 144, 146, 149, 159, 187], "timedependentconnect": [17, 95], "newli": [17, 56, 65, 99, 101, 111, 143], "interpop": 17, "add_pop": [17, 22, 109, 143, 153, 186], "label": [17, 36, 60, 97, 98, 99, 100, 101, 102, 103, 104, 107, 117, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 159, 160, 163, 184, 185, 187, 189], "add_transf": [17, 143, 153, 186], "transfer": [17, 22, 56, 60, 64, 65, 95, 123, 143, 145, 146, 150, 159, 163, 184, 188, 189], "change_tvec": [17, 153], "tdve": [17, 23, 98, 149, 152, 153], "tdc": [17, 22, 153], "directli": [17, 55, 61, 69, 73, 89, 94, 97, 124, 135, 143, 144, 145, 149, 150, 151, 152, 155, 156, 159, 160, 162, 164, 166, 184, 185, 187, 189], "affect": [17, 109, 118, 149, 151, 155, 157, 159, 160, 163, 164, 166, 186, 189], "keep": [17, 32, 97, 130, 143, 145, 149, 151, 152, 153, 156, 159, 166, 184], "pair": [17, 22, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 109, 130, 145, 149], "spars": [17, 94, 133, 153, 156, 160], "won": [17, 54, 63, 144, 149, 151, 155, 159, 184, 185], "next": [17, 22, 23, 76, 133, 143, 144, 145, 146, 149, 150, 151, 152, 157, 160, 163, 164, 166, 184, 186, 188], "written": [17, 22, 23, 50, 117, 118, 144, 146, 150, 152, 153, 156, 159, 162, 189], "prepar": [17, 159], "end_year": 17, "start": [17, 29, 33, 50, 57, 59, 60, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 88, 97, 108, 111, 112, 117, 133, 140, 141, 144, 145, 147, 149, 150, 152, 153, 156, 158, 159, 166, 184, 185, 186, 189, 190], "end": [17, 59, 60, 111, 112, 132, 143, 145, 149, 150, 159, 160, 162, 163, 166, 186, 188], "latest": [17, 48], "desir": [17, 36, 67, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 89, 94, 109, 133, 143, 149, 151, 152, 155, 160, 163, 184], "unit": [17, 22, 23, 36, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 97, 98, 107, 108, 109, 114, 117, 133, 136, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 160, 162, 165, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189], "associ": [17, 22, 23, 54, 55, 56, 57, 61, 62, 63, 64, 73, 98, 106, 109, 110, 135, 144, 145, 146, 147, 149, 153, 157, 159, 160, 163, 164, 166, 184, 188, 189], "sc": [17, 27, 36, 109, 111, 130, 147, 148, 149, 151, 152, 153, 155, 159], "get_tdve_pag": 17, "page": [17, 143, 144, 145, 146, 150, 151, 153, 154, 160, 162, 163, 165, 184, 187], "sheet": [17, 22, 27, 28, 29, 31, 36, 59, 107, 109, 118, 144, 145, 146, 152, 153, 160, 162, 163, 164, 184, 185, 186, 187, 189], "get_t": [17, 153], "build": [17, 57, 60, 67, 144, 147, 149, 187, 188, 190], "age_0": [17, 146, 149], "4_to_5": [17, 146, 149], "14": [17, 48, 79, 99, 143, 144, 145, 146, 147, 149, 150, 152, 153, 163, 166, 185, 186, 189], "mainli": [17, 36, 39, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 109, 136, 144, 145, 146, 149, 166], "variabl": [17, 36, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 92, 107, 117, 124, 126, 127, 130, 135, 143, 144, 145, 146, 149, 152, 155, 159, 163, 165, 185, 186, 187], "organ": [17, 36, 145], "accord": [17, 133, 159], "par": [17, 36, 54, 55, 60, 61, 62, 63, 64, 95, 106, 109, 143, 144, 145, 146, 149, 151, 152, 184, 185, 189], "from_pop": [17, 22, 123], "to_pop": [17, 22, 123], "ag": [17, 22, 123, 143, 145, 153, 157, 163, 166, 184, 185, 186], "4": [17, 39, 48, 79, 97, 99, 130, 133, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 163, 164, 166, 168, 183, 184, 185, 186, 187, 189], "5": [17, 39, 41, 48, 74, 77, 79, 97, 99, 110, 130, 134, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 162, 163, 164, 166, 169, 177, 178, 184, 185, 186, 188, 189], "former": [17, 90, 107, 111, 152, 163, 164, 184], "calibr": [17, 52, 93, 95, 111, 113, 144, 145, 151, 157, 160, 164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 189, 190], "latter": [17, 90, 111, 150, 152, 163, 184, 189], "encount": [17, 150, 151, 152, 155], "standard": [17, 87, 97, 106, 132, 133, 142, 144, 146, 147, 149, 152, 153, 155, 156, 159, 160, 163, 164, 165, 166, 186], "numpi": [17, 59, 60, 64, 65, 106, 133, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 165], "arang": [17, 23, 112, 143, 147, 149, 150, 151, 153], "place": [17, 20, 27, 48, 55, 57, 64, 73, 84, 94, 97, 106, 107, 111, 117, 145, 146, 149, 150, 151, 152, 155, 159, 160, 163, 164, 166, 184, 185, 186], "odict": [17, 23, 36, 97, 109, 110, 130, 144, 149, 153, 159, 184], "remove_interact": [17, 153], "remove_transf": [17, 153], "rename_pop": [17, 153], "existing_code_nam": 17, "new_code_nam": [17, 153], "new_full_nam": [17, 153], "renam": [17, 130, 149, 153], "rename_transf": [17, 153], "fname": [17, 36, 37, 95, 104, 140, 149], "disk": [17, 36, 104, 111, 139, 149, 153, 188], "shortcut": [17, 63, 108, 111, 117, 130, 163], "immedi": [17, 62, 76, 104, 111, 133, 149, 150, 160, 166, 184, 186, 188], "start_year": [17, 108, 120, 122, 143, 147, 148, 152, 155, 159, 189], "earliest": 17, "timedependentvaluesentri": [17, 95], "tdve_pag": [17, 153], "worksheet": [17, 22, 23, 24, 28, 29, 144, 153, 163], "to_spreadsheet": [17, 36, 109, 143, 153, 188], "sciri": [17, 36, 94, 109, 147, 148, 149, 151, 152, 153, 155], "to_workbook": [17, 27, 109, 143, 153], "open": [17, 22, 23, 109, 140, 141, 152, 153, 154, 165, 184, 186], "workbook": [17, 22, 23, 27, 30, 31, 33, 60, 109, 145, 146, 153], "xlsxwriter": [17, 22, 23, 109, 153], "manipul": [17, 109, 164], "close": [17, 109, 141, 149, 151, 153, 156, 158, 185, 189], "filestream": [17, 109], "append": [17, 104, 109, 111, 128, 130, 143, 145, 147, 149, 150, 152, 159, 160], "extra": [17, 23, 27, 59, 109, 130, 144, 145, 146, 151, 152, 153, 158, 184, 186], "issu": [17, 109, 150, 152, 153, 156, 160, 166], "cach": [17, 71, 72, 74, 77, 79, 80, 81, 82, 83, 106, 109, 145, 164], "reload": [17, 109], "warn": [17, 27, 109, 132, 138, 149, 153, 158, 184, 187], "bytesio": [17, 109, 153], "see": [17, 109, 121, 130, 143, 144, 145, 146, 149, 150, 151, 152, 153, 156, 158, 159, 160, 164, 166, 184, 185, 186, 187, 188, 189], "byte": [17, 109], "Not": [17, 76, 92], "_guaranteed_": 17, "sens": [17, 59, 71, 72, 73, 97, 147, 149, 150, 159], "adher": 17, "correct": [17, 25, 57, 106, 149, 150, 152, 155, 159, 166, 186], "syntax": [17, 48, 60, 145, 146, 149, 159, 160, 162, 186], "pars": [17, 27, 33, 39, 59, 144, 149], "suffici": [17, 150, 152, 156, 159, 166, 184], "inform": [17, 26, 34, 36, 56, 59, 68, 84, 98, 108, 143, 144, 145, 146, 149, 152, 153, 156, 158, 159, 164, 184, 187, 188, 189], "sometim": [17, 67, 71, 72, 74, 77, 79, 80, 81, 82, 83, 94, 144, 146, 153, 160, 184, 185, 189], "least": [17, 71, 72, 74, 77, 79, 80, 81, 82, 83, 94, 106, 150, 156, 159, 163, 166, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184], "_not_": [17, 65, 97, 106], "anoth": [17, 31, 43, 52, 68, 72, 84, 95, 108, 114, 130, 143, 145, 149, 150, 152, 153, 159, 160, 163, 164, 166, 184, 185, 186], "access": [17, 36, 108, 109, 110, 115, 117, 143, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 185, 186, 187, 189], "hand": [17, 150, 151, 156, 159, 165, 184, 186, 189], "_contents_": 17, "satisfi": [17, 73, 90, 143, 152, 156, 159, 162, 166, 187], "variou": [17, 68, 96, 106, 110, 149, 150, 151, 153, 189], "condit": [17, 52, 71, 72, 73, 74, 77, 78, 84, 94, 150, 152, 156, 157, 159, 160, 163, 164, 166, 185, 189], "These": [17, 28, 36, 39, 56, 57, 63, 94, 111, 124, 140, 144, 145, 146, 147, 148, 149, 152, 153, 155, 157, 159, 160, 163, 164, 166, 184, 185, 189, 190], "test": [17, 108, 137, 143, 148, 149, 150, 152, 160, 164, 165, 166, 184, 186], "workflow": [17, 55, 145, 147, 153, 154, 155, 157, 160, 164, 189], "go": [17, 28, 54, 60, 63, 64, 136, 145, 149, 152, 155, 157, 164, 166, 184, 185, 186, 187, 188, 189], "load_databook": [17, 111, 165], "might": [17, 22, 23, 27, 44, 55, 61, 71, 72, 74, 77, 79, 80, 81, 82, 83, 90, 97, 98, 109, 116, 143, 144, 145, 149, 150, 152, 153, 159, 163, 164, 166, 184, 185, 186], "expos": [17, 107, 164, 165], "throw": [17, 97], "problem": [17, 84, 143, 149, 150, 152, 159, 166], "against": [17, 25, 109, 166], "some": [18, 27, 56, 63, 67, 71, 72, 73, 94, 133, 143, 144, 145, 146, 148, 149, 150, 152, 153, 155, 156, 159, 160, 163, 164, 165, 166, 184, 185, 186, 187, 189], "version": [18, 36, 43, 48, 50, 120, 121, 122, 123, 124, 130, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 185, 187, 189], "2018sep24": 18, "do_run": [19, 111, 150, 155, 165, 185, 189], "addprog": 19, "sir": [19, 155, 163, 175, 184, 186, 188, 189], "tb": [19, 135, 144, 146, 147, 149, 150, 151, 156, 163, 166, 175, 185, 189], "progbook": [19, 107, 109, 111, 143, 147, 155, 159, 189], "zero": [20, 40, 55, 61, 106, 133, 138, 145, 146, 150, 164, 165, 166, 187, 188, 189], "miscellan": 21, "kind": [21, 110, 119, 143, 148, 185, 189], "book": [21, 23, 107, 108, 109, 111, 143, 152, 155, 163, 164, 165, 184, 189], "vari": [21, 22, 23, 52, 85, 106, 109, 111, 114, 137, 147, 152, 153, 155, 159, 163, 164, 166, 185], "interpop_typ": 22, "structur": [22, 36, 67, 95, 110, 123, 135, 144, 153, 160, 166, 184, 186, 188], "consist": [22, 69, 86, 89, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 160, 163, 185, 187, 189], "connect": [22, 54, 55, 60, 61, 62, 63, 64, 65, 166, 186], "matrix": [22, 60, 69, 144, 145, 153, 156, 160, 163, 164, 166, 184, 186], "n": [22, 25, 36, 116, 144, 152, 153, 164, 165], "pairwis": [22, 152, 153, 163], "diagon": [22, 152, 153, 166, 186], "cannot": [22, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 90, 97, 144, 149, 152, 153, 155, 156, 159, 160, 163, 164, 166, 184, 185, 186, 187], "infect": [22, 143, 144, 145, 146, 153, 156, 157, 159, 160, 166, 171, 184, 185, 186, 187, 188, 189], "itself": [22, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 84, 89, 143, 146, 152, 156, 157, 159, 160, 163, 165, 166, 184, 185, 186], "row": [22, 23, 28, 29, 36, 118, 144, 146, 147, 149, 153, 163, 164, 184, 186, 189], "column": [22, 23, 32, 36, 118, 144, 145, 146, 152, 153, 156, 160, 163, 164, 166, 184, 186, 187, 188, 189], "non": [22, 97, 107, 116, 127, 145, 149, 159, 160, 163, 164], "clariti": [22, 146, 185], "mark": [22, 59, 147, 160, 164, 166, 184, 189], "assumption_head": [22, 23, 153], "head": [22, 23, 48, 143, 144, 146, 152], "from_tabl": [22, 153], "interaction_typ": 22, "read_tabl": [22, 28], "parent": [22, 23, 54, 56, 59, 63, 65, 66, 73, 89, 128, 139], "respons": [22, 23, 94, 106], "them": [22, 55, 57, 60, 61, 64, 65, 82, 84, 95, 97, 98, 117, 120, 121, 122, 123, 124, 143, 144, 145, 146, 147, 149, 152, 154, 157, 159, 160, 162, 163, 164, 166, 184, 185, 186, 187, 188, 189], "split": [22, 28, 67, 118, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 164, 166, 185, 186, 187, 189], "those": [22, 23, 31, 54, 56, 59, 63, 66, 104, 144, 145, 146, 149, 151, 152, 153, 156, 159, 160, 163, 164, 166, 185, 186, 187, 188, 189], "expect": [22, 33, 52, 106, 111, 116, 144, 145, 149, 150, 152, 155, 159, 164, 166, 184, 185, 186, 187, 189], "cell": [22, 23, 25, 26, 28, 31, 144, 152, 153, 163, 164, 184, 186, 189], "ts_attribut": [22, 23, 153], "start_row": [22, 23], "width": [22, 23, 32, 101, 149], "standard_format": [22, 23], "write_assumpt": [22, 23, 153], "write_uncertainti": [22, 23, 152, 153], "write_unit": [22, 23, 153], "allowed_unit": [23, 153], "comment": [23, 27, 31, 149, 153, 164, 184, 186], "potenti": [23, 107, 140, 149, 152, 155], "underli": [23, 94, 97, 108, 133, 145, 146, 148, 149, 150, 152, 187], "mean": [23, 25, 56, 57, 59, 97, 104, 107, 114, 118, 140, 144, 145, 146, 149, 150, 152, 153, 155, 156, 158, 159, 160, 162, 164, 165, 166, 184, 187, 189], "abl": [23, 28, 145, 149, 152, 156, 159, 163, 166, 186, 189], "dropdown": 23, "descript": [23, 44, 50, 163, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183], "text": [23, 149], "from_row": [23, 153], "openpyxl": [23, 25, 26, 28, 29, 33], "skip": [23, 84, 90, 95, 145, 160, 163, 184], "unpars": 23, "constant": [23, 64, 94, 95, 106, 107, 108, 109, 114, 125, 133, 145, 150, 153, 155, 166, 184, 189], "has_data": [23, 133, 151, 152, 153], "th": [23, 98, 145], "along": [23, 152, 185, 186], "2000": [23, 111, 112, 143, 146, 148, 149, 151, 153, 155, 156, 157, 164, 185], "2019": [23, 120, 122, 146], "exactli": [23, 112, 149, 150, 151, 152, 153, 156, 159, 163, 164, 166, 185, 186, 189], "drawn": [23, 69, 86, 89, 101, 107, 118, 149, 156, 159, 160, 163, 184], "suppress": [23, 132, 140, 149, 153], "width_dict": [24, 32], "dtype": [25, 144], "numer": [25, 40, 51, 73, 84, 98, 112, 130, 146, 150, 160, 164], "guard": 25, "accident": 25, "treat": [25, 59, 60, 69, 130, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160, 163, 164, 166, 175, 178, 185, 187, 189], "though": [25, 27, 64, 111, 149, 152, 153, 156, 163, 164, 189], "cast": 25, "allow_empti": 26, "strip": [26, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "sheet_nam": 27, "copi": [27, 31, 48, 67, 94, 95, 107, 108, 120, 121, 122, 123, 124, 130, 133, 143, 144, 145, 151, 152, 153, 157, 184, 185, 186], "retain": [27, 31, 48, 145, 150, 151, 152, 166], "particular": [27, 33, 84, 86, 89, 97, 108, 113, 118, 133, 143, 144, 145, 146, 149, 153, 155, 159, 160, 163, 166, 185, 189], "about": [27, 36, 73, 94, 144, 146, 149, 151, 152, 156, 163, 164, 184, 185, 186, 187, 189], "formula": [27, 97, 145, 150, 160, 184, 187], "lost": [27, 152], "edit": [27, 143, 152, 153, 184, 185, 186, 189], "preserv": [27, 65, 149, 153, 166, 184, 186], "whatev": [27, 48, 84, 89, 118, 140, 149], "extrem": [27, 97, 146, 152, 166, 185], "just": [27, 33, 48, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 89, 93, 97, 98, 130, 135, 143, 144, 150, 152, 155, 156, 158, 159, 163, 164, 166, 184, 185, 186, 188], "helper": [27, 40, 45, 46, 47, 136, 145, 149], "merg": [28, 130], "datafram": [28, 36, 114, 117, 118, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "similarli": [28, 36, 147, 149, 150, 151, 152, 156, 159, 160, 163, 164, 166, 184, 189], "enabl": [28, 97, 98, 145, 157, 164], "quickli": [28, 166, 189], "expens": [28, 144, 164, 166, 184, 186], "track": [28, 32, 143, 145, 149, 152, 153, 160, 163, 166, 184, 185], "via": [28, 45, 46, 47, 55, 59, 61, 67, 94, 97, 109, 110, 117, 120, 121, 122, 123, 124, 133, 144, 145, 149, 151, 152, 156, 157, 158, 162, 163, 164, 165, 166, 184, 185, 186, 188, 189], "blank": [28, 109, 111, 144, 163, 184], "termin": [29, 144], "origin": [29, 36, 39, 48, 65, 74, 77, 84, 98, 103, 107, 135, 146, 149, 150, 152, 153, 156, 159, 166, 184, 185, 187, 188, 189], "comment_sourc": 31, "under": [31, 94, 146, 148, 149, 150, 151, 152, 153, 163, 166, 184, 185, 186, 187, 189], "hood": [31, 151, 152, 163, 187], "wise": 31, "drop": [31, 165, 186, 189], "column_index": 32, "longest": 32, "seen": [32, 149, 152, 164, 166, 185, 189], "expected_categori": 33, "sure": [33, 48, 151, 186], "categori": [33, 118, 185], "appropri": [33, 48, 52, 94, 100, 106, 109, 111, 118, 133, 148, 149, 150, 151, 152, 153, 159, 163, 166, 185, 189], "isn": [33, 118, 152, 159], "robust": 33, "transit": [36, 51, 55, 56, 57, 59, 60, 61, 65, 97, 107, 144, 145, 146, 150, 155, 157, 160, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188], "network": [36, 54, 145, 186], "readi": [36, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66], "upon": [36, 111, 152, 186], "overridden": 36, "partial": [36, 103, 130, 149], "befor": [36, 54, 56, 57, 59, 63, 64, 66, 67, 97, 104, 123, 145, 149, 150, 151, 153, 156, 159, 160, 164, 166, 185, 186, 188, 189], "cascad": [36, 54, 59, 60, 79, 118, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 163, 167, 184, 185, 187, 189], "fallback": [36, 94], "downstream": [36, 55, 57, 61, 64, 145, 166, 188], "differenti": [36, 155, 164], "pd": [36, 95, 144, 152, 153], "definit": [36, 84, 152, 153, 157, 163, 178, 184], "creation": [36, 110, 149], "get_charac": [36, 60, 144, 145, 146], "charac_nam": [36, 60, 117, 152], "get_charac_includ": 36, "eventu": [36, 189], "repres": [36, 51, 53, 59, 69, 70, 73, 86, 92, 98, 111, 119, 124, 144, 145, 149, 152, 157, 159, 160, 163, 164, 166, 184, 185, 186, 189], "collect": [36, 95, 107, 108, 109, 138, 143, 152, 153, 164, 165], "goe": [36, 64, 94, 145, 149], "through": [36, 57, 94, 97, 145, 146, 149, 150, 152, 157, 164, 184, 185, 190], "recurs": [36, 145], "replac": [36, 48, 57, 108, 145, 149, 151, 152, 153, 155, 159, 160, 189], "final": [36, 54, 55, 56, 59, 63, 66, 108, 123, 133, 144, 145, 146, 149, 150, 151, 152, 153, 155, 157, 159, 160, 163, 164, 166, 184, 186, 187, 189], "aliv": [36, 77, 143, 144, 146, 147, 149, 156, 168, 169, 172, 174, 178, 180, 185, 187], "codenam": 36, "get_comp": [36, 60, 144, 145, 146], "comp_nam": [36, 60, 117, 144, 152], "get_databook_unit": 36, "face": 36, "fraction": [36, 56, 64, 65, 74, 77, 87, 97, 107, 108, 109, 111, 114, 117, 145, 147, 149, 150, 153, 155, 159, 160, 164, 189], "denomin": [36, 40, 59, 98, 107, 109, 117, 136, 145, 146, 149, 155, 163, 164, 169, 176, 177, 178, 187, 189], "plu": [36, 145, 188, 189], "timescal": [36, 59, 97, 98, 148, 149], "inapplic": 36, "stai": [36, 166], "sync": [36, 130, 160], "programat": [36, 52, 144, 153, 163, 184, 186], "don": [36, 48, 95, 97, 106, 111, 117, 118, 144, 146, 149, 151, 152, 153, 160, 163, 164, 185, 186, 187, 189], "manag": [36, 43, 66, 116, 147, 153, 166], "technic": [36, 59, 144, 150, 163, 164], "dimensionless": [36, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 106, 108, 109, 117, 147, 149, 160], "report": [36, 149, 152, 185], "365": [36, 59, 136, 160, 178], "per": [36, 55, 60, 61, 95, 98, 107, 108, 147, 148, 149, 150, 151, 152, 153, 155, 160, 164, 166, 184, 185, 186, 188, 189], "dai": [36, 59, 97, 98, 136, 148, 160, 178, 185], "get_vari": [36, 60, 74, 77, 82, 109, 117, 144, 145, 146, 149, 152, 155, 159, 186, 187], "get_interact": [36, 144], "interaction_nam": 36, "get_label": 36, "convert": [36, 38, 54, 55, 56, 61, 63, 64, 65, 97, 98, 108, 130, 134, 144, 145, 148, 149, 150, 152, 153, 155, 159, 160, 164, 166, 184, 187], "unchang": [36, 59, 155, 163], "b_rate": [36, 143, 144, 149, 151, 178, 182, 185], "birth": [36, 60, 143, 145, 149, 151, 157, 184, 185, 186], "get_par": [36, 60, 95, 144, 145, 146, 149, 184], "entir": [36, 48, 55, 56, 59, 61, 65, 108, 109, 111, 143, 149, 151, 152, 153, 156, 159, 162, 164, 166, 184, 186, 187], "you": [36, 104, 130, 133, 143, 144, 146, 147, 149, 151, 152, 153, 154, 155, 158, 159, 160, 163, 165, 184, 185, 187, 188], "know": [36, 144, 146, 149, 156, 159, 166, 184, 187, 188, 189], "happi": [36, 149], "look": [36, 55, 97, 98, 144, 145, 146, 149, 150, 152, 156, 160, 166, 184, 185, 186, 189], "faster": [36, 133, 160], "panda": [36, 117, 144, 146, 153], "f": [36, 37, 130, 143, 144, 149, 150, 153, 155, 160, 165, 184, 185, 186, 188, 189], "key_compart": 36, "gitinfo": [36, 48, 143, 152], "git": 36, "repositori": [36, 154, 184, 186, 187], "programmat": [36, 153], "modif": [36, 60, 151, 160, 188], "view": [36, 97, 146, 149], "rtype": [36, 57, 106], "uid": [36, 47, 152], "databook_onli": 37, "document": [37, 130, 143, 144, 145, 146, 147, 153, 154, 155, 160, 165, 184, 186, 187, 189], "templat": [37, 109, 143, 144, 163, 184], "markdown": 37, "filenam": [37, 111, 117, 118, 146, 149, 158], "parser": 38, "execut": [38, 55, 61, 114, 138, 149, 152, 154, 160], "fcn_str": [39, 59, 145], "x": [39, 54, 63, 91, 130, 135, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164, 165, 185, 187, 189], "fcn": [39, 44, 138], "dep": [39, 59, 145, 146], "local": [39, 130], "3": [39, 48, 65, 130, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 163, 164, 166, 178, 184, 185, 186, 187, 189], "secur": 39, "mathemat": [39, 152], "max": [39, 59, 69, 133, 152, 160, 162, 168, 169, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183], "exp": [39, 150, 160, 164], "found": [39, 127, 160, 185], "py": [39, 59, 60, 135, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 164, 185, 187, 189], "pattern": [39, 130, 185, 189], "argdict": 39, "fromkei": [39, 130], "express": [39, 67, 135, 151, 156, 166, 186, 187], "safe": [40, 135, 184], "divis": [40, 109, 152], "nan": [40, 94, 97, 98, 117, 133, 144, 145, 146, 149, 152, 153], "arg": [41, 42, 49, 130], "repeat": [41, 42, 145, 160, 185], "elementwis": [41, 42], "repeatedli": [41, 42, 149], "10": [41, 48, 106, 114, 130, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 162, 164, 166, 185, 186, 189], "minimum": [42, 69, 74, 77, 87, 94, 108, 150, 155, 156, 159, 165, 187], "old": [43, 103, 130, 140, 153, 163, 166], "recent": [43, 111, 151], "transform": [43, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 111, 149, 150, 159, 164, 165], "sequenti": 43, "classnam": [44, 50, 130], "original_vers": [44, 50], "new_vers": [44, 50], "date": [44, 48, 50, 110, 142, 143, 149, 151, 152], "update_requir": [44, 50], "togeth": [44, 67, 82, 92, 97, 100, 104, 117, 145, 146, 147, 149, 152, 153, 159, 163, 164, 185, 189], "metadata": [44, 110, 145, 153], "decor": [44, 50], "regist": [44, 50], "flag": [44, 50, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 106, 107, 117, 120, 121, 122, 123, 124, 145, 149, 151, 153, 158, 160], "redo": 44, "calcul": [44, 56, 57, 59, 64, 106, 107, 108, 111, 113, 117, 143, 145, 149, 150, 152, 154, 156, 159, 160, 164, 184, 185, 186, 187, 188, 189], "standalon": [45, 46, 47], "yield": [45, 46, 47, 78, 137, 149, 150, 152, 160, 189], "do_stuff": [46, 47], "obj": [48, 130], "registri": [48, 50], "8": [48, 114, 130, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 184, 185, 186, 189], "9": [48, 130, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 156, 184, 185, 186, 189], "16": [48, 130, 143, 144, 146, 147, 149, 150, 152, 153, 164, 171, 172, 173, 174, 178, 179, 180, 189], "17": [48, 143, 144, 146, 147, 149, 150, 152, 153, 189], "23": [48, 143, 144, 146, 149, 152, 153], "6": [48, 130, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 162, 164, 166, 184, 185, 186, 189], "7": [48, 59, 130, 134, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 160, 184, 185, 186, 189], "11": [48, 143, 144, 146, 147, 149, 150, 151, 152, 153, 166, 186, 189], "12": [48, 130, 136, 143, 144, 146, 147, 149, 150, 151, 152, 153, 178, 180, 184, 186, 189], "13": [48, 143, 144, 146, 147, 149, 150, 151, 152, 153, 189], "15": [48, 99, 143, 144, 146, 147, 149, 150, 152, 153, 157, 163, 164, 166, 185, 186, 189], "30": [48, 143, 149, 152, 162, 178, 189], "18": [48, 143, 144, 146, 147, 149, 150, 152, 153, 189], "19": [48, 143, 144, 146, 149, 150, 152, 153, 189], "20": [48, 106, 130, 143, 144, 146, 149, 150, 152, 153, 156, 162, 164, 166, 188, 189], "24": [48, 143, 144, 146, 149, 152, 153, 164, 184], "27": [48, 143, 146, 149, 152, 153, 189], "28": [48, 143, 146, 149, 152, 153, 178], "26": [48, 143, 146, 149, 152, 153, 184], "branch": [48, 143, 152], "detach": [48, 143, 152], "2023": [48, 143, 146, 152, 153, 184], "09": [48, 152], "26t11": 48, "34": [48, 130, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 184, 185, 186, 187, 188, 189], "00": [48, 143, 152, 187, 189], "hash": [48, 143, 152], "9657c24": [48, 143, 152], "ascend": [48, 130], "long": [48, 149, 150, 156, 160, 164, 166, 184, 185], "introduc": [48, 145, 155, 157, 160, 164, 166, 184, 186, 189], "behav": [48, 59, 69, 97, 147, 150, 159, 164], "sensibli": 48, "futur": [48, 108, 133, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 164, 185, 187, 189], "reli": [48, 97, 144, 151, 187], "principl": [48, 156, 189], "dcp": [48, 151], "worth": [48, 150], "overhead": [48, 145], "moment": [48, 60, 144, 146, 159], "reus": [48, 149, 159], "whose": [50, 145, 187, 189], "brief": 50, "overview": [50, 145, 146, 149, 153, 161, 189], "_update_requir": 50, "plan": [50, 184], "upgrad": 50, "def": [50, 130, 149, 150, 152, 155], "_update_project": 50, "update_project": 50, "graph": [51, 55, 57, 61, 145, 157, 163], "fundament": [51, 144, 147, 149, 152, 155, 159, 164, 166], "node": [51, 145, 157], "edg": [51, 97, 145, 147, 149, 157, 164], "link": [51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 97, 98, 107, 117, 144, 146, 147, 149, 150, 152, 153, 155, 160, 163, 164, 166, 184, 185, 186, 188], "integr": [51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 77, 79, 80, 81, 82, 83, 84, 97, 98, 109, 117, 146, 147, 148, 149, 150, 151, 152, 156, 159, 160, 163, 164], "exit": [52, 163], "due": [52, 60, 95, 97, 98, 109, 143, 147, 150, 159, 166, 184, 185, 188, 189], "neg": [52, 54, 63, 145, 146, 152, 160, 164, 166, 187, 188, 189], "popsiz": [52, 60, 145, 149, 152, 164, 186], "excess": 52, "residu": [52, 56, 61, 156], "commonli": [52, 67, 69, 149, 159, 189], "caught": 52, "dealt": [52, 145], "catch": [52, 152], "reject": [52, 84, 159], "propos": [52, 84, 91, 145, 159, 164], "tri": 52, "id": [53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 145], "portion": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 164, 166], "duplic": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 97, 117, 149, 186, 188], "quick": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66], "basic": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 109, 149, 150, 151, 153, 154, 159, 184], "product": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 149, 164], "librari": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 96, 143, 147, 149, 152, 163, 167, 184, 189], "prealloc": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66], "dt": [53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 97, 98, 107, 109, 112, 117, 118, 134, 145, 150, 152, 155, 160, 170, 189], "set_dynam": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66], "noth": [53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 145, 155], "constraint": [53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 69, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 86, 89, 90, 91, 92, 107, 109, 114, 143, 145, 150, 155, 163, 164, 189], "enforc": [53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 71, 72, 149, 150, 155, 184], "overload": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 159], "deriv": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 97, 120, 121, 122, 123, 124, 145, 149, 150, 152, 159], "unknown": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 145, 149, 185, 187], "distinct": [53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 73, 149, 155, 159, 164], "ti": [53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 145, 160], "wrap": [54, 57, 60, 145, 146, 147, 149, 152, 153, 159], "dest": [54, 55, 56, 60, 61, 62, 63, 64, 65, 145, 146, 149], "outflow": [54, 55, 56, 61, 62, 63, 64, 65, 145, 149, 150, 162, 166, 184, 188], "outgo": [54, 55, 57, 61, 62, 63, 64, 145, 186, 188], "known": [54, 56, 59, 63, 66, 89, 117, 150, 157, 164, 166, 185], "improv": [54, 56, 59, 63, 66, 143, 145, 150, 152, 163, 164, 185, 189], "resolve_outflow": [54, 55, 57, 61, 62, 63, 64], "resolv": [54, 55, 61, 62, 63, 64, 65, 145, 159, 160, 166, 187, 189], "rescal": [54, 63, 73, 145, 154, 159, 160, 162, 188], "inflow": [54, 55, 56, 61, 63, 145, 150, 166, 188], "junction": [54, 55, 56, 57, 61, 63, 64, 144, 145, 146, 161, 184, 190], "flush": [54, 55, 56, 57, 61, 63, 64, 145, 153, 162, 166], "duration_group": [55, 61], "timedcompart": [55, 56, 61, 65, 166], "durat": [55, 56, 59, 61, 64, 65, 98, 136, 144, 148, 169, 171, 172, 173, 174, 179, 180, 184, 185], "virtu": [55, 61], "belong": [55, 60, 61, 64, 95, 149, 157, 163, 164, 166], "exclus": [55, 61, 150, 157, 160], "attach": [55, 61, 111, 152], "upstream": [55, 61], "membership": [55, 61, 156], "indirect": [55, 61, 166], "member": [55, 61, 144, 145, 153, 159], "balanc": [55, 56, 57, 61, 162, 188], "primari": [55, 57, 109, 110, 117, 145, 149], "adjust": [55, 73, 75, 84, 85, 86, 87, 88, 89, 97, 107, 109, 111, 113, 143, 150, 157, 185, 189], "equal": [55, 84, 87, 95, 106, 147, 150, 151, 160, 162, 164, 166, 184, 185, 187, 188, 189], "analog": [55, 150, 155, 189], "timestep": [55, 56, 61, 62, 65, 97, 98, 107, 108, 109, 110, 117, 145, 146, 147, 148, 149, 150, 152, 155, 160, 162, 164, 166, 184, 185, 187, 188, 189], "proport": [55, 87, 97, 101, 107, 108, 109, 144, 145, 149, 155, 162, 164, 166, 174, 184, 185, 186, 187, 188, 189], "dure": [55, 58, 59, 61, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 108, 109, 117, 144, 145, 150, 151, 159, 160, 162, 164, 166, 185, 189], "unless": [55, 61, 97, 144, 149, 151, 152, 163, 187], "timedlink": [55, 61, 64, 166], "initial_flush": [55, 61], "nonzero": [55, 57, 145, 156, 166, 187], "incom": [55, 145, 166, 186], "rebalanc": 55, "fill": [55, 60, 61, 109, 143, 144, 155, 157, 163, 184, 186, 187, 188], "logic": [55, 60, 61, 84, 97, 108, 144, 149, 150, 159, 163, 166, 184], "come": [55, 61, 64, 109, 146, 160, 162, 184, 186], "subgraph": [55, 61], "acycl": [55, 61], "system": [55, 61, 109, 143, 147, 150, 159, 161, 184, 187, 189], "cycl": [55, 61, 145, 185], "topolog": [55, 61], "solvabl": [55, 61], "But": [55, 59, 61, 97, 138, 150, 159, 163, 186], "regardless": [55, 61, 73, 133, 145, 149, 150, 153, 156, 160, 163, 164, 166, 189], "forward": [55, 61, 145, 166], "destin": [56, 60, 65, 145, 146, 149, 164, 166], "classmethod": [56, 65, 109, 130], "wire": [56, 65, 145], "infrastructur": [56, 65], "suppli": [56, 64, 65, 76, 107, 109, 145, 146, 149, 155, 160, 162, 164, 184, 189], "converted_frac": [56, 65], "move": [56, 65, 145, 150, 152, 153, 160, 162, 163, 166, 184, 186, 188, 189], "accordingli": [56, 97, 135, 143, 144, 149, 150, 158, 160, 189], "update_link": [56, 57, 145], "deleg": [56, 84], "program_instruct": [57, 67, 145], "cross": [57, 60, 67, 71, 72, 145, 152, 153, 163, 184, 186], "flush_junct": 57, "mcv1": 57, "junctioncompart": [57, 61, 146], "loop": [57, 144, 145, 152], "import": [57, 65, 87, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 164, 166, 184, 185, 186, 187, 188, 189], "get_pop": [57, 146], "process": [57, 67, 97, 138, 140, 145, 149, 150, 156, 158, 159, 160, 164, 165, 166, 184, 185, 189], "relink": [57, 145], "revers": [57, 103, 130, 137, 145, 149, 186], "unlink": [57, 176], "brand": 57, "circular": [57, 160], "pickl": [57, 59, 84, 144, 145], "unpickl": [57, 145], "remain": [57, 65, 107, 133, 145, 149, 150, 152, 159, 162, 164, 166, 184, 189], "scope": 57, "update_comp": [57, 145], "_t_index": [57, 145], "rate": [57, 59, 65, 79, 85, 97, 98, 109, 118, 143, 144, 145, 146, 147, 150, 151, 152, 155, 157, 159, 160, 163, 164, 166, 184, 185, 186, 188, 189], "update_par": [57, 109, 145], "overwritten": [57, 59, 84, 97, 106, 108, 114, 133, 143, 145, 149, 151, 155, 164, 189], "constrain": [57, 59, 73, 87, 89, 91, 156, 159, 162, 164, 185], "carri": [57, 59, 60, 67, 104, 149, 152, 155, 164], "pure": [57, 164], "aris": [58, 159], "xlsx": [59, 118, 143, 144, 146, 148, 152, 153, 155, 157, 160, 163, 165, 184, 185, 186, 187, 188, 189], "doth_rat": [59, 144, 146, 149, 178, 184, 185], "rang": [59, 98, 114, 133, 144, 145, 149, 150, 151, 152, 153, 159, 164, 184, 185, 186], "clip": [59, 86, 145, 164], "min": [59, 69, 133, 152, 160], "pop_aggreg": [59, 97, 145, 149], "scale_factor": [59, 108, 145], "y_factor": [59, 95, 143, 184, 185], "meta_y_factor": [59, 143], "drive": [59, 155, 160, 164, 166, 186], "context": [59, 73, 132, 147, 149, 152, 164], "indirectli": [59, 155, 160, 184], "advantag": [59, 144, 155], "its": [59, 60, 71, 72, 74, 77, 79, 80, 81, 82, 83, 104, 111, 123, 143, 145, 146, 149, 150, 153, 155, 159, 160, 163, 164, 166, 185], "bear": 59, "re": [59, 132, 143, 145, 148, 150, 151, 152, 153, 155, 162, 186, 189], "simpler": [59, 144, 155, 159], "gain": 59, "aren": [59, 60, 149], "larg": [59, 149, 150, 152, 166, 184, 185, 186], "enough": [59, 152, 159, 185], "justifi": 59, "complex": [59, 108, 144, 145, 147, 149, 152, 159, 160, 163, 164, 166, 185, 188], "set_fcn": 59, "follow": [59, 107, 130, 133, 145, 146, 149, 150, 151, 153, 155, 156, 157, 159, 162, 163, 164, 165, 166, 184, 185, 186, 188, 189], "_fcn": 59, "until": [59, 65, 133, 145, 151, 152, 164, 166, 188], "increas": [59, 74, 77, 143, 149, 150, 163, 164, 165, 185, 186, 188, 189], "skip_funct": [59, 151, 160], "stop": [59, 74, 77, 82, 97, 108, 117, 141, 151, 158], "period": [59, 97, 147, 148, 149, 150, 159, 160, 164, 166, 185], "52": [59, 136, 143, 149, 160], "25": [59, 98, 112, 143, 144, 146, 149, 150, 151, 152, 153, 164, 166, 186, 189], "entail": 59, "precomput": [59, 64], "postcomput": 59, "asid": [60, 157, 165], "transcend": 60, "higher": [60, 149, 150, 189], "compartment": [60, 167], "maintain": [60, 95, 133, 149, 163, 185], "crucial": [60, 146, 149, 166], "referenc": 60, "overwrit": [60, 69, 75, 84, 85, 86, 94, 97, 107, 108, 109, 117, 121, 123, 140, 143, 146, 149, 159, 160, 163, 164, 184, 189], "charac_lookup": 60, "comp_lookup": 60, "get_link": [60, 145, 146], "At": [60, 64, 108, 109, 144, 145, 146, 152, 159, 164, 166, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 186, 189], "source_nam": [60, 145, 186], "dest_nam": [60, 145, 186], "less": [60, 61, 87, 156, 159, 164, 166, 184, 186, 189], "effici": [60, 109, 145, 159, 164], "search": [60, 130, 144, 149], "initialize_compart": [60, 145], "t_init": 60, "solv": [60, 150, 156, 187], "linear": [60, 94, 97, 107, 121, 123, 133, 150, 151, 156, 159, 160, 164], "equat": [60, 156, 187], "link_lookup": 60, "par_lookup": 60, "exclud": [60, 130, 163, 185], "death": [60, 71, 72, 74, 77, 79, 80, 81, 82, 83, 98, 145, 146, 149, 157, 160, 163, 166, 168, 176, 184, 185, 189], "scale": [61, 89, 93, 95, 98, 107, 108, 111, 143, 147, 149, 150, 159, 160, 165, 166, 184, 185, 189], "proportion": [61, 145, 162], "sink": [62, 144, 149, 155, 160, 168, 169, 172, 174, 176, 177, 180, 184], "unlimit": 63, "reservoir": [63, 184], "subject": [63, 150, 159], "No": [63, 163, 164, 186], "henc": [64, 164], "flush_link": 64, "extern": [64, 109, 155, 164, 184, 185], "_cach": 64, "account": [64, 159, 160, 163, 164, 166, 184, 185, 186], "subcompart": [64, 166], "elig": [64, 107, 109, 117, 145, 147, 150, 155, 163, 164, 166, 188, 189], "count": [64, 149, 156, 184], "roll": [64, 111], "bin": [64, 65, 97, 147, 149], "forc": [65, 130, 143, 153, 160, 166, 184, 185, 186, 188], "vaccin": [65, 143, 144, 146, 149, 153, 156, 160, 164, 166, 188], "protect": [65, 160, 166], "latent": [65, 144, 146, 149, 156, 166, 184], "state": [65, 145, 149, 150, 152, 153, 156, 157, 160, 163, 164, 166, 184, 188, 189], "mismatch": 65, "endpoint": [65, 133], "lightweight": [66, 117], "abstract": 66, "accomplish": [67, 109, 149, 158], "optim": [67, 108, 110, 111, 114, 130, 146, 152, 157, 161, 185], "deep": [67, 151], "exot": 67, "programinstruct": [67, 70, 73, 75, 84, 85, 86, 87, 88, 89, 92, 111, 117, 119, 120, 121, 122, 123, 124, 143, 145, 147, 148, 152, 155, 159, 189], "limit_typ": [69, 86], "ab": [69, 74, 77, 86, 159, 186], "lower_bound": 69, "upper_bound": 69, "initial_valu": 69, "optimiz": [69, 89], "bound": [69, 86, 89, 90, 91, 92, 97, 114, 145, 149, 159, 185], "get_hard_bound": 69, "x0": [69, 84, 92], "hard": [69, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 89, 92, 145, 155, 159, 164, 185], "parametr": [69, 73, 75, 84, 85, 89, 159, 162, 189], "alon": [69, 150, 163], "govern": [70, 144, 145, 146, 149, 150, 160, 162, 164, 184], "get_initi": [70, 75, 84, 85, 86, 87, 88, 159], "measurable_nam": [71, 72, 74, 77, 81, 82, 83], "threshold": [71, 72, 159], "measur": [71, 72, 74, 77, 79, 80, 81, 83, 84, 92, 111, 143, 157, 185], "exce": [71, 145, 159, 164], "impos": [71, 72, 150, 163], "penalti": [71, 72, 73, 84, 159], "smaller": [71, 150, 152, 164, 166, 187], "monei": [71, 157, 159, 164, 189], "minim": [71, 73, 117, 145, 149, 156, 164, 184], "conjunct": [71, 72, 98, 123, 159, 160, 166, 185], "aim": [71, 109, 113, 143, 156, 164], "spend": [71, 73, 74, 75, 77, 82, 84, 86, 87, 88, 89, 90, 97, 107, 108, 109, 114, 117, 143, 150, 152, 155, 157, 163, 164, 166, 184, 189], "violat": [71, 72, 74, 77, 159, 166], "get_baselin": [71, 72, 74, 77, 79, 80, 81, 82, 83, 84], "get_hard_constraint": [71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 89, 159], "50": [71, 72, 74, 77, 79, 80, 81, 82, 83, 143, 149, 152, 156, 159, 162, 164, 185, 188, 189], "procedur": [71, 72, 74, 77, 79, 80, 81, 82, 83, 152], "receiv": [71, 72, 74, 77, 79, 80, 81, 82, 83, 156, 159, 164, 189], "get_objective_v": [71, 72, 74, 77, 79, 80, 81, 82, 83], "_unweighted_": [71, 72, 74, 77, 79, 80, 81, 82, 83], "below": [72, 138, 143, 144, 146, 149, 150, 151, 152, 154, 155, 159, 160, 162, 163, 164, 166, 184, 185, 186, 189], "larger": [72, 160, 164, 185, 186, 189], "although": [73, 87, 95, 107, 144, 149, 150, 152, 159, 160, 163, 166, 184, 189], "realli": [73, 166], "constrain_instruct": [73, 84, 89, 159], "hard_constraint": [73, 84, 89, 92, 159], "penal": [73, 156], "perhap": [73, 185], "qualiti": [73, 185, 189], "totalspendconstraint": [73, 143, 159], "distanc": [73, 89, 159], "failedconstraint": [73, 91], "often": [73, 82, 95, 143, 145, 146, 149, 150, 152, 156, 157, 166, 185, 189], "fix": [73, 87, 89, 111, 143, 147, 150, 155, 159, 184, 187, 188, 189], "what": [73, 97, 130, 133, 143, 144, 145, 149, 150, 151, 159, 166, 184, 185, 186, 187, 188, 189], "examin": [73, 109, 143, 149, 151, 152, 159, 184, 186, 188, 189], "consid": [73, 89, 117, 144, 145, 148, 149, 150, 151, 153, 156, 159, 162, 163, 164, 166, 185, 186, 187, 188, 189], "subclass": [73, 159], "decreas": [74, 143, 151, 163, 164, 166, 188, 189], "target_typ": [74, 77], "frac": [74, 77, 150, 164], "2030": [74, 77, 146, 147, 149, 151, 153, 157, 159, 189], "05": [74, 77, 123, 143, 150, 152, 168], "accept": [74, 76, 77, 82, 138, 156], "amount": [74, 77, 84, 89, 143, 147, 152, 157, 159, 164, 166, 189], "prog_nam": [75, 85, 86, 87, 106, 109, 117], "t_0": 75, "t_end": 75, "p1": 75, "a1": [75, 163], "a2": 75, "unabl": [76, 160], "signal": 76, "algorithm": [76, 84, 90, 92, 113, 143, 156, 164, 185], "proce": [76, 108, 143, 145, 164, 185, 188], "maxim": [79, 143, 144, 149, 152, 164], "2020": [79, 111, 143, 146, 147, 149, 152, 153, 155, 159, 185, 189], "foo": [79, 128, 130, 139], "cascade_stag": 80, "multipli": [82, 89, 97, 107, 108, 150, 160, 164, 184, 188, 189], "maxtim": [84, 111, 143], "maxit": [84, 111], "thought": [84, 143, 151, 155, 157, 164, 189], "hyperopt": 84, "particl": 84, "swarm": 84, "pyswarm": 84, "bayesian": 84, "compute_object": 84, "net": [84, 186], "get_adjust": 84, "pickled_model": 84, "script": [84, 143, 149, 153, 158, 160, 163], "choic": [84, 89, 143, 184, 189], "dictat": 84, "space": [84, 145, 149, 185, 187], "anyth": [84, 109, 133, 155, 156, 159, 186], "_before_": 84, "mani": [84, 118, 130, 145, 146, 149, 150, 153, 157, 159, 163, 164, 166, 167, 184, 185, 188, 189], "nontrivi": [84, 160], "low": [84, 152, 185, 189], "high": [84, 152, 159, 185, 189], "update_instruct": [84, 159], "asd_valu": 84, "demonstr": [85, 143, 146, 147, 148, 149, 151, 159], "reach": [85, 86, 89, 97, 107, 133, 143, 145, 147, 152, 159, 160, 163, 164, 166, 189], "simultan": [85, 121, 152, 156, 159, 160, 164, 187], "act": [85, 144, 160], "opposit": [85, 149], "direct": [85, 149, 155, 156, 157, 166, 185, 186], "By": [86, 87, 104, 114, 130, 144, 146, 149, 151, 152, 153, 156, 159, 160, 163, 164, 184, 186], "interpret": [86, 89, 92, 98, 149, 160, 164, 166, 189], "package_nam": 87, "initial_spend": 87, "min_prop": 87, "max_prop": 87, "min_total_spend": 87, "max_total_spend": 87, "fix_prop": 87, "packag": 87, "mdr": [87, 146], "short": [87, 107, 130, 150, 156, 166, 184], "spent": [87, 150, 159, 164, 166, 184, 189], "practic": [87, 140, 149, 156, 163, 164, 166, 184, 187, 189], "usual": [87, 106, 111, 121, 133, 144, 147, 149, 152, 166, 184, 187, 188], "ratio": [87, 143, 150, 166, 188, 189], "b": [87, 103, 118, 130, 137, 149, 159, 162, 164, 185], "half": [87, 155, 159, 189], "fund": [87, 155, 159, 164, 189], "essenti": [87, 94, 97, 138, 144, 149, 152, 153, 155, 159, 163, 166, 187, 188, 189], "intervent": [87, 149, 157, 164, 166, 184], "adjust_total_spend": 87, "total_spend": 89, "budget_factor": 89, "initial_total_spend": 89, "alloc": [89, 92, 108, 109, 116, 117, 120, 143, 147, 152, 157, 159], "caus": [89, 149, 159, 160, 166, 185, 186], "agre": 89, "explicit": [89, 185, 189], "sensibl": 89, "ask": [89, 150], "unresolv": [90, 144], "ill": 90, "pose": 90, "_impossible_": 90, "mode": [90, 99, 101, 104, 146, 149], "failur": 90, "imposs": [90, 155, 163, 164, 185], "inconsist": [90, 152, 187], "greater": [90, 149, 162, 164, 187, 188], "continu": [90, 107, 108, 147, 148, 150, 151, 152, 155, 159, 164, 189], "lb": 91, "ub": 91, "nearest": [91, 156], "toler": [91, 166], "len": [91, 144, 152], "xmin": 92, "xmax": 92, "optim_arg": 92, "intermedi": [93, 94, 145, 152, 155], "role": [93, 133, 143, 144, 149, 159, 162, 164, 189], "hold": [94, 152, 188], "disaggreg": [94, 145, 186], "has_valu": 94, "usabl": [94, 144, 145, 166], "pchip": [94, 133, 151], "previou": [94, 97, 123, 133, 140, 144, 145, 150, 151, 153, 155, 156, 162, 186, 188, 189], "strongli": [94, 149], "recommend": [94, 143, 160, 185], "smooth": 94, "perturb": [94, 95, 106, 107, 109, 133, 152, 165], "smoothinterp": [94, 151], "tempor": [94, 149, 159], "p": [94, 104, 132, 143, 146, 147, 148, 150, 151, 152, 155, 159, 160, 165, 184, 185, 186, 187, 188, 189], "basi": [95, 147, 149, 152, 153, 160], "segreg": 95, "all_par": [95, 184], "trivial": [95, 152, 156, 164, 184], "calibration_spreadsheet": 95, "tabular": 95, "miss": [95, 109, 144, 149, 153, 156, 157, 160, 185, 187, 189], "isna": 95, "load_calibr": [95, 184], "save_calibr": [95, 184], "permiss": 95, "path": [95, 104, 109, 111, 128, 139, 143, 147, 149, 150, 152, 166], "locat": [95, 142, 145, 154, 184, 188], "output_aggreg": [97, 149], "time_aggreg": [97, 149, 152], "t_bin": [97, 147, 148, 149, 152], "plottabl": [97, 98, 146], "visual": [97, 147, 149, 152, 164], "colour": [97, 100, 147, 163], "facili": 97, "tractabl": 97, "rare": [97, 185], "insid": [97, 144, 149, 160, 163, 166, 184], "Or": [97, 149, 150], "combin": [97, 106, 111, 121, 130, 143, 146, 147, 152, 156, 159, 160, 164, 165], "averag": [97, 145, 147, 148, 149, 150, 166, 185, 186], "unweight": [97, 186], "keyerror": [97, 130], "annual": [97, 107, 118, 145, 148, 149, 160, 164, 184, 185, 189], "cumsum": [97, 150], "__getitem__": [97, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "easili": [97, 149, 158, 159, 166, 184], "d": [97, 130, 135, 143, 146, 147, 148, 149, 150, 151, 152, 153, 184, 185, 186, 188, 189], "accumulation_method": 97, "summat": [97, 98, 117, 149, 163], "dali": [97, 144, 149], "trapezoid": 97, "concept": [97, 144, 149], "uniform": [97, 165], "cumtrapz": 97, "new_tvec": [97, 98], "tval": [97, 133], "nan_outsid": 97, "coverag": [97, 106, 107, 108, 109, 111, 117, 119, 121, 122, 148, 152, 154, 189], "treatment": [97, 107, 144, 146, 147, 148, 150, 155, 159, 160, 163, 164, 166, 185], "tx": [97, 150, 152, 166, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183], "permit": [97, 145, 149, 163], "modal": [97, 105, 106, 109, 147, 152, 164, 175, 184], "notic": [97, 137, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 163, 164, 166, 184, 185, 186, 188, 189], "coverage_numb": [97, 147, 148], "coverage_elig": [97, 147, 148], "coverage_fract": [97, 147], "outsid": [97, 98, 166, 185, 189], "set_color": [97, 149], "colormap": [97, 149, 152], "blue": [97, 100, 149, 166, 184], "interpolation_method": 97, "chain": [97, 146, 157, 166], "timepoint": [97, 133, 145, 149], "data_label": [98, 149], "data_pop": [98, 149], "extrapol": [98, 133, 153], "disabl": [98, 152, 160], "versatil": 98, "sophist": [98, 149, 159, 189], "rigor": 98, "unit_str": 98, "week": [98, 136, 160, 166], "stack_pop": [99, 149], "stack_output": [99, 143, 147, 149], "outer": [99, 137, 147, 149], "legend_mod": [99, 101, 143, 149], "show_all_label": 99, "64": [99, 143, 146, 149, 157, 163, 164, 166, 186], "second": [99, 118, 130, 133, 137, 144, 145, 149, 150, 158, 159, 164, 166, 184, 185, 186, 189], "unstack": [99, 149], "outermost": 99, "highest": [99, 189], "inner": [99, 111, 149, 152], "even": [99, 117, 130, 144, 147, 149, 150, 151, 152, 153, 159, 160, 163, 164, 165, 166, 184, 185, 188, 189], "plot_typ": [100, 101, 143, 149, 150, 186, 188, 189], "legendset": 100, "red": [100, 149, 164, 166, 184], "patch": [100, 149], "circl": 100, "param_entri": 100, "layout": [100, 162, 184], "lw": 101, "scatter": [101, 143, 149, 185], "wherev": 101, "c": [103, 130, 133, 149, 152, 162, 164], "prefix": [104, 149], "file_format": 104, "png": [104, 149], "graphic": 104, "deal": [104, 152, 160, 163, 166], "freeli": [104, 153, 166, 187], "prepend": [104, 149, 158], "pdf": 104, "svg": 104, "princip": [105, 164], "fsw": [105, 186], "respect": [105, 108, 145, 149, 155, 156, 159, 160, 163, 164, 184, 187, 189], "prog": [106, 109, 111, 143, 155, 189], "cov_interact": 106, "imp_interact": 106, "random": [106, 143, 150, 152, 164, 165, 189], "parsabl": 106, "prog1": 106, "prog2": 106, "prog3": 106, "deviat": [106, 133, 152, 165], "compute_impact_interact": 106, "delta": [106, 160], "boolean": [106, 130, 145], "activ": [106, 111, 117, 120, 121, 122, 123, 124, 135, 143, 144, 145, 146, 149, 160, 164, 184, 186], "get_outcom": [106, 109, 143, 155], "prop_cov": 106, "forget": [106, 149, 151, 160], "get_prop_coverag": [106, 109], "n_prog": 106, "update_outcom": 106, "whenev": [106, 153], "sort": [106, 130, 133, 159], "target_pop": 107, "target_comp": 107, "currenc": [107, 109, 143], "cost": [107, 108, 109, 114, 143, 155, 164, 189], "add_program": [107, 109, 143], "baseline_spend": 107, "capacity_constraint": [107, 109, 114], "capac": [107, 108, 109, 117, 119, 121, 155, 185, 189], "get_capac": [107, 109, 143, 155], "cover": [107, 109, 117, 147, 148, 155, 189], "off": [107, 108, 109, 148, 155, 160, 164, 166, 185], "person": [107, 149, 163, 164, 185, 189], "get_prop_cov": [107, 155], "satur": [107, 109, 164, 189], "sensit": [107, 144, 189], "get_spend": 107, "is_one_off": 107, "incur": [107, 164, 166], "impact": [107, 108, 155, 185, 189], "longer": [107, 144, 150, 155, 156, 159, 166, 184], "contrast": [107, 108, 144, 149, 159, 163, 164, 166], "art": [107, 147, 164, 185, 189], "spend_data": [107, 148], "unit_cost": [107, 148, 189], "stop_year": 108, "histor": [108, 151, 164, 185, 189], "switch": [108, 150, 160, 189], "wide": [108, 166, 184, 186, 189], "later": [108, 146, 155, 160, 166, 184, 188], "preced": [108, 121, 159, 184], "simplic": [108, 163], "ramp": 108, "scale_alloc": [108, 152], "down": [108, 149, 166, 185], "add_comp": [109, 143], "add_par": [109, 143], "arbitrarili": [109, 155, 160], "_allow_missing_data": 109, "get_alloc": [109, 117, 143, 152], "fuse": 109, "inclus": [109, 145, 160], "incid": [109, 146, 178, 185], "prop_coverag": 109, "covout": [109, 143, 164], "prop": 109, "best": [109, 113, 143, 149, 156, 164, 184, 185, 187, 189], "screen": [109, 140, 152, 163, 164], "easiest": [109, 149, 153, 184, 189], "popnam": 109, "flat": 109, "num_elig": 109, "reconcili": [109, 151, 157], "get_coverag": [109, 117, 148, 152, 155], "straight": [109, 144, 149], "converag": 109, "cap": [109, 143, 159, 164], "remove_comp": [109, 143], "remove_par": [109, 143], "remove_pop": [109, 143, 153], "remove_program": [109, 143], "sigma": [109, 133, 151, 152, 153, 165], "almost": [110, 149, 163, 185, 189], "major": [110, 159, 185], "scen": [110, 111, 143, 149, 151], "central": 111, "importantli": [111, 163, 166, 188], "projectset": 111, "save_to_project": [111, 143], "new_nam": [111, 130, 143], "default_min_scal": 111, "default_max_scal": 111, "default_weight": 111, "default_metr": 111, "par_name_1": 111, "par_name_2": 111, "charac_name_1": 111, "pop_1": 111, "min_scale_1": 111, "max_scale_1": 111, "min_scale_2": 111, "max_scale_2": 111, "pop_2": 111, "min_scale_3": 111, "max_scale_3": 111, "charac_name_2": 111, "weight_1": 111, "weight_2": 111, "wape": 111, "fit": [111, 156, 157, 159, 185, 187], "meansquar": 111, "create_databook": 111, "databook_path": [111, 165], "num_pop": 111, "num_transf": 111, "data_start": [111, 143, 189], "data_end": [111, 143, 189], "data_dt": 111, "filepath": 111, "binari": 111, "migrat": [111, 184], "make_default_parset": [111, 165], "load_progbook": [111, 143, 148, 152, 155, 189], "progbook_path": [111, 143], "atomicaspreadsheet": 111, "make_parset": 111, "make_progbook": [111, 143, 189], "temporari": [111, 166], "make_scenario": [111, 143, 149], "verbos": [111, 117, 130, 158], "littl": [111, 156, 186], "run_optim": [111, 159], "optimnam": 111, "store_result": [111, 120, 121, 122, 123, 124], "run_sampled_sim": [111, 140, 152, 158], "num_work": [111, 138], "reason": [111, 145, 149, 160, 163, 166, 185, 189], "avoid": [111, 112, 145, 148, 151, 152, 159, 160, 164, 185, 186, 188, 189], "inadvertantli": 111, "blow": 111, "predict": [111, 149, 150, 152, 163, 185], "cpu": [111, 138], "run_scenario": [111, 120, 121, 122, 123, 124, 146], "folder": [111, 139, 143, 149, 152, 154, 160], "blob": 111, "update_set": 111, "sim_start": [111, 112], "sim_end": [111, 112], "sim_dt": [111, 112], "2035": [112, 143, 146, 149, 151], "ndarrai": 112, "linspac": 112, "align": [112, 189], "update_time_vector": [112, 150, 189], "2018": [112, 143, 146, 147, 148, 151, 152, 153, 184, 186], "quarterli": [112, 150, 152, 166], "ideal": [113, 164, 185], "discontinu": [113, 157], "gather": [113, 157, 185], "reconciliation_year": [114, 143, 189], "unit_cost_bound": [114, 143, 189], "baseline_bound": 114, "capacity_bound": 114, "outcome_bound": 114, "eval_par": 114, "eval_rang": 114, "unreconcil": 114, "export": [115, 117, 118, 130, 145, 153, 185], "r": [116, 143, 149, 189], "m": [116, 159], "raw_result": 117, "optima": [117, 149, 156], "hiv": [117, 150, 163, 166, 175, 184, 185, 189], "relationship": [117, 145, 146, 155, 163, 185], "check_for_nan": [117, 152], "export_raw": [117, 146, 152], "raw": [117, 133, 145, 147, 149, 152, 153, 164], "queri": [117, 127, 145, 153], "caution": [117, 159], "get_equivalent_alloc": 117, "incorpor": [117, 145, 152, 156, 159, 160, 189], "lookup": [117, 145, 146, 159], "link_nam": [117, 152], "plot_nam": [117, 118], "plot_group": 117, "pop_label": [117, 152, 184], "used_program": [117, 152], "overlap": [117, 163, 164, 166], "took": 117, "output_ord": [118, 146], "cascade_ord": 118, "program_ord": 118, "instantan": 118, "2014": [118, 123, 143, 146, 153], "2015": [118, 123, 143, 146, 149, 153], "2016": [118, 143, 146, 152, 153, 157, 184, 186, 188], "divid": [118, 130, 145, 149, 155, 164, 184, 188, 189], "four": 119, "broadli": [119, 184], "involv": [119, 143, 145, 151, 159, 163, 164, 166, 186, 189], "parsetnam": [120, 121, 122, 123, 124], "progsetnam": [120, 121, 122, 123, 124], "get_instruct": [120, 121, 122, 123, 124], "get_parset": [120, 121, 122, 123, 124, 151], "get_progset": [120, 121, 122, 123, 124], "scenario_valu": [121, 123, 143, 149], "ovetoxr": 121, "parameterscenario": 121, "scvalu": [123, 143, 149], "birth_transit": 123, "pop1": 123, "3e6": 123, "1e4": 123, "2e6": [123, 149], "2003": [123, 146, 151], "2004": [123, 146, 151], "pscenario": 123, "examplep": 123, "parameter_label": 123, "pop_identifi": 123, "o": [123, 130], "smoothli": [123, 151, 160], "rec_rat": [123, 180, 185, 189], "pop2": 123, "06": [123, 143, 178, 180], "readabl": [123, 159], "assembl": [123, 145, 147], "end_overwrit": 123, "revert": 123, "share": [124, 145, 149, 166, 185], "subdir": 128, "directori": [128, 139, 149], "windowspath": 128, "subdirectori": 128, "throughout": [129, 164, 185], "init": 130, "ordereddict": 130, "defaultdict": 130, "__add__": 130, "dict2": 130, "dict1": 130, "dict3": 130, "clear": [130, 140, 141, 152, 158, 185], "reset": [130, 132, 140, 151, 158], "new_parset": [130, 143], "old_nam": 130, "dict_item": 130, "dict_kei": 130, "dict_valu": 130, "disp": 130, "maxlen": 130, "showmultilin": 130, "dividerthresh": 130, "numind": 130, "sigfig": 130, "numformat": 130, "maxitem": 130, "z": [130, 150], "293487": 130, "6f": 130, "enumitem": 130, "transpos": [130, 186], "enumkei": 130, "enumer": 130, "enumv": 130, "enumvalu": 130, "alia": 130, "doprint": 130, "findkei": 130, "detail": [130, 143, 144, 145, 146, 149, 155, 158, 159, 160, 163, 164, 165, 166, 184, 186, 187, 188, 189], "filterv": 130, "findbykei": 130, "findbyv": 130, "strict": [130, 166], "exact": [130, 144, 151, 160], "dog": 130, "cat": [130, 184], "mongoos": 130, "regex": 130, "startswith": 130, "endswith": 130, "fromeach": 130, "ind": 130, "asdict": 130, "slice": [130, 159], "simplest": [130, 144, 152, 159, 184, 186], "pick": 130, "els": [130, 159, 185], "getnest": 130, "makenest": 130, "po": [130, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "computation": [130, 144, 184], "ineffici": 130, "1492": 130, "1604": 130, "gang": 130, "1444": 130, "mekong": 130, "1234": 130, "iteritem": 130, "iternest": 130, "keys2": 130, "keys3": 130, "coerc": 130, "arr": 130, "third": [130, 145, 152, 159, 164, 186], "58": [130, 143, 149], "99": [130, 143, 149], "45": [130, 143, 149, 152, 189], "exis": 130, "h": [130, 155], "tripli": 130, "makefrom": 130, "keynam": 130, "l": 130, "monkei": 130, "musket": 130, "func": 130, "myfunc": 130, "mylist": 130, "popitem": 130, "lifo": 130, "promot": [130, 149], "promotetolist": 130, "od": [130, 150], "oldkei": 130, "newkei": 130, "speed": 130, "setdefault": 130, "setitem": 130, "regular": [130, 162], "setnest": 130, "sortbi": 130, "alphabet": 130, "toeach": 130, "invers": [130, 184], "666": [130, 143], "k": [130, 149, 150, 153], "lack": [130, 185], "valind": 130, "show_warn": [132, 153], "block": [132, 144, 146, 149], "temporarili": [132, 149, 153], "logger": [132, 138, 140, 150, 158], "captur": [132, 140, 150, 155, 158, 185, 189], "critic": [132, 144, 156, 160, 166, 185], "tend": [133, 164, 166, 184], "deprec": [133, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "interest": [133, 152, 166], "get_arrai": [133, 151, 152, 153], "has_time_data": [133, 151, 152, 153], "t2": [133, 150, 190], "gradient": [133, 159, 164], "legaci": [133, 160], "curvatur": 133, "t1": [133, 150, 190], "v1": [133, 186], "scipi": [133, 152, 159], "pchipinterpol": 133, "anywai": [133, 140, 145], "callabl": 133, "remove_aft": [133, 151, 152, 153], "t_remov": 133, "remove_befor": [133, 151, 152, 153], "remove_between": [133, 151, 152, 153], "datetim": [134, 143, 152, 184], "decim": 134, "2010": [134, 146, 149, 151, 185], "approxim": [134, 145, 149, 150, 166, 189], "plot_str": 135, "pd_div": [135, 178], "nd_div": [135, 178], "token": 135, "plural": 136, "friendli": 136, "suffix": 136, "fortnight": 136, "month": [136, 148, 150, 160, 166], "loop_ord": 137, "zip": 137, "control": [137, 145, 151, 152, 153, 158, 160, 163], "theori": 137, "show_progress": 138, "hide": 138, "baz": 139, "upward": 140, "stdout": 140, "stderr": 140, "replic": [140, 157, 158, 164, 166, 184], "statement": [140, 158], "info": [140, 158], "consol": 140, "corrupt": 140, "handler": 140, "atomica_file_handl": 141, "atomica": [143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 184, 185, 186, 187, 188, 189, 190], "notebook": [143, 147, 148, 149, 152, 154], "environ": [143, 163], "command": [143, 144, 149, 158, 185, 186, 188, 189], "load_ext": [143, 146, 147, 149, 151, 152], "autoreload": [143, 146, 147, 149, 151, 152], "inlin": [143, 146, 147, 148, 149, 150, 151, 152], "sy": [143, 147, 148, 149, 150, 152], "pyplot": [143, 146, 147, 148, 149, 150, 151, 152, 153, 189], "plt": [143, 146, 147, 148, 149, 150, 151, 152, 153, 189], "framework_templ": [143, 144, 184], "framework_template_advanc": [143, 184], "your": [143, 144, 149, 158, 163, 184, 185, 189], "guidanc": [143, 144, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183], "library_path": [143, 144, 153], "ship": 143, "tb_framework": [143, 144, 153], "new_databook": 143, "lu_prog": [143, 144, 146, 147, 149, 151, 178], "lx_prog": [143, 144, 146, 147, 149, 151, 178], "leu_act": [143, 144, 146, 147, 149, 151, 178], "lex_act": [143, 144, 146, 147, 149, 151, 178], "llu_act": [143, 144, 146, 147, 149, 151, 178], "llx_act": [143, 144, 146, 147, 149, 151, 178], "l_inf": [143, 144, 146, 147, 149, 151, 178], "v_inf": [143, 144, 146, 147, 149, 151, 178], "lr_inf": [143, 144, 146, 147, 149, 151, 178], "ar_act": [143, 144, 146, 147, 149, 151, 178], "ar_rec": [143, 144, 146, 147, 149, 151, 178], "pd_rec": [143, 144, 146, 147, 149, 151, 178], "pm_rec": [143, 144, 146, 147, 149, 151, 178], "px_rec": [143, 144, 146, 147, 149, 151, 178], "nd_rec": [143, 144, 146, 147, 149, 151, 178], "nm_rec": [143, 144, 146, 147, 149, 151, 178], "nx_rec": [143, 144, 146, 147, 149, 151, 178], "pd_term": [143, 144, 146, 147, 149, 151, 178], "pm_term": [143, 144, 146, 147, 149, 151, 178], "px_term": [143, 144, 146, 147, 149, 151, 178], "nd_term": [143, 144, 146, 147, 149, 151, 178], "nm_term": [143, 144, 146, 147, 149, 151, 178], "nx_term": [143, 144, 146, 147, 149, 151, 178], "home": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 184, 185, 186, 187, 189], "vst": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 184, 185, 186, 187, 189], "186": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "futurewarn": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "behavior": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "ser": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "iloc": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "constitu": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 185, 187, 189], "doc": [143, 153, 154, 184, 186, 187, 188, 189], "let": [143, 149, 152, 153, 188], "pri": [143, 186], "prison": [143, 146, 164, 184, 186], "new_databook_2": 143, "analys": [143, 152], "tb_databook": [143, 153], "elaps": [143, 146, 147, 148, 149, 151, 152, 155, 166, 184, 185, 186, 187, 188, 189], "830": [143, 147], "952": 143, "39": [143, 144, 146, 149, 151, 152, 153, 184, 185, 189], "parset_default": [143, 146], "help": [143, 144, 156, 160, 163, 184, 185, 187], "pleas": 143, "manually_calibr": 143, "foi_out": [143, 178, 186], "infecti": [143, 184, 186], "foi_in": [143, 149, 151, 178, 186], "suscept": [143, 144, 145, 146, 149, 153, 157, 160, 163, 164, 166, 184, 185, 186, 187, 188, 189], "young": [143, 163], "children": [143, 149, 153, 163, 164, 166, 184, 185, 186], "res_manually_calibr": 143, "ac_inf": [143, 144, 146, 178], "763": 143, "auto_calibr": 143, "launch": [143, 189], "seed": [143, 152, 189], "587": 143, "528": 143, "96": [143, 149], "pm": [143, 152, 189], "origv": [143, 189], "newval": [143, 189], "orig": [143, 189], "diff": [143, 189], "004535": 143, "514": 143, "177": [143, 178], "47": [143, 144, 149, 152, 189], "09820": 143, "591": 143, "40": [143, 149, 150, 152, 155, 185, 189], "03759": 143, "07": [143, 178], "07506": 143, "737": 143, "94": [143, 149], "723": 143, "08": [143, 152], "01898": 143, "545": 143, "164": 143, "001527": 143, "79": [143, 149], "000001708": 143, "521": 143, "90": [143, 149, 166, 189], "8390": 143, "557": [143, 151], "61": [143, 149], "00000001014": 143, "543": 143, "35": [143, 149, 152, 189], "537": 143, "109": [143, 149], "733": 143, "163": 143, "33": [143, 149, 152, 162, 164, 188], "0002193": 143, "709": 143, "204": [143, 150], "74": [143, 149], "0001654": 143, "75": [143, 149, 187, 189], "0003290": 143, "777": 143, "87": [143, 149], "6918": 143, "gt": [143, 148, 150, 151, 152, 153, 184], "res_auto_calibr": 143, "02": [143, 178], "example_progbook": 143, "tb_progbook": 143, "lt": [143, 148, 151, 152, 153, 184, 189], "0x7fd2e1936990": 143, "_get_code_nam": 143, "_normalize_inpu": 143, "_read_effect": 143, "_read_spend": 143, "_read_target": 143, "_write_effect": 143, "_write_spend": 143, "_write_target": 143, "get_prop_covera": 143, "_book": 143, "_format": 143, "_pop_typ": 143, "_refer": 143, "initj": [143, 144, 146, 178], "de": 143, "v_num": [143, 144, 146, 149, 178], "37": [143, 149, 152], "38": [143, 149, 152], "31319": 143, "tzinfo": [143, 152, 184], "tzutc": [143, 152, 184], "521925": 143, "administ": [143, 164], "bcg": [143, 147, 164], "0x7fd2e029ee50": 143, "atom": 143, "2017": [143, 146, 152, 184, 186], "pcf": [143, 147, 164], "acf": [143, 147, 164], "hospd": [143, 147], "hospmdr": [143, 147], "hospxdr": [143, 147], "ambd": [143, 147], "ambmdr": [143, 147], "xdrnew": [143, 147], "prisd": [143, 147], "prisdr": [143, 147], "sep": 143, "01": [143, 150, 159], "utc": 143, "piec": [143, 189], "our": [143, 147, 149, 150, 152, 155, 159, 164, 184, 186, 188, 189], "res_prog": 143, "03": [143, 152, 178, 180], "becom": [143, 145, 149, 150, 152, 156, 163, 164, 186, 188, 189], "reconcil": [143, 189], "aspect": [143, 149, 159, 187], "fulli": [143, 150, 152, 155, 184, 189], "absenc": [143, 150, 157, 189], "888": 143, "4000": [143, 153], "4200": 143, "00002363": 143, "625": [143, 189], "00004553": 143, "2700": 143, "2835": [143, 150], "18000": 143, "18900": 143, "01249": 143, "2500": 143, "2625": 143, "59": [143, 149], "005385": 143, "22": [143, 144, 146, 149, 150, 152, 153, 178], "5500": 143, "5225": 143, "003359": 143, "21": [143, 144, 146, 149, 150, 152, 153, 178], "17100": 143, "57": [143, 149], "01364": 143, "2565": 143, "8000": 143, "7600": 143, "1000": [143, 150, 153, 155, 164, 185, 187, 189], "950": 143, "004674": 143, "1050": 143, "009105": 143, "10000": 143, "10500": 143, "02744": 143, "4900": [143, 189], "4655": 143, "06943": 143, "4500": 143, "4275": 143, "51": [143, 149], "5145": 143, "1476": 143, "2375": 143, "49": [143, 149, 152, 156, 185], "005951": 143, "3800": 143, "00002487": 143, "4725": 143, "9500": 143, "46": [143, 149, 152, 156, 189], "02945": 143, "7500": 143, "7875": 143, "56": [143, 149, 156], "09877": 143, "5775": 143, "004171": 143, "7125": 143, "08149": 143, "29": [143, 149, 152, 153], "004672": 143, "31": [143, 149, 152], "8400": 143, "32": [143, 149, 152, 155, 156], "7800": 143, "375": [143, 189], "00002755": 143, "36": [143, 149, 152, 184], "4375": 143, "00001114": 143, "4777": 143, "41": [143, 149, 152], "03338": 143, "3900": 143, "00001275": 143, "4716": 143, "01632": 143, "7312": 143, "42": [143, 149, 152, 189], "03816": 143, "43": [143, 149, 152, 189], "44": [143, 149, 152, 189], "5362": 143, "001209": 143, "4387": 143, "48": [143, 149, 152], "975": 143, "002367": 143, "962": 143, "001191": 143, "4443": 143, "2437": 143, "003052": 143, "53": [143, 149], "5637": 143, "001094": 143, "54": [143, 149], "40625": 143, "000004857": 143, "55": [143, 149], "7218": 143, "01837": 143, "7900": 143, "2406": 143, "001546": 143, "8200": 143, "4612": 143, "17550": 143, "006771": 143, "9750": 143, "01499": 143, "62": [143, 149], "2767": 143, "63": [143, 149, 150], "4556": 143, "390625": 143, "000002243": 143, "65": [143, 146, 149, 186], "4685": 143, "008065": 143, "66": [143, 149, 156], "9625": 143, "007562": 143, "67": [143, 149, 164, 188], "3850": 143, "000006460": 143, "68": [143, 146, 149], "2733": 143, "69": [143, 146, 149], "2716": 143, "875": 143, "70": [143, 146, 149, 166, 189], "9562": 143, "003798": 143, "71": [143, 149], "5431": 143, "0002947": 143, "72": [143, 149], "2632": 143, "73": [143, 149], "5568": 143, "0002804": 143, "2708": 143, "2666": 143, "76": [143, 149], "2683": 143, "125": 143, "77": [143, 149, 152], "3825": 143, "000003251": 143, "78": [143, 149], "8100": 143, "956": 143, "0005974": 143, "80": [143, 149, 152, 177], "4471": 143, "81": [143, 149], "5465": 143, "00007276": 143, "82": [143, 149], "7950": 143, "83": [143, 149, 178], "2390": 143, "0007779": 143, "84": [143, 149], "4528": 143, "85": [143, 149], "4485": 143, "9375": 143, "86": [143, 148, 149], "5534": 143, "00007096": 143, "7171": 143, "009000": 143, "88": [143, 149], "4514": 143, "0625": [143, 150, 186], "89": [143, 149], "8050": 143, "8025": 143, "91": [143, 149], "5482": 143, "8125": 143, "00001808": 143, "92": [143, 149], "17325": 143, "003424": 143, "93": [143, 149, 178], "4670": 143, "3125": [143, 189], "004008": 143, "17212": 143, "001722": 143, "95": [143, 149, 189], "7148": 143, "004453": 143, "3828125": 143, "000001074": 143, "97": [143, 149], "98": [143, 149], "7136": 143, "71875": 143, "002214": 143, "953": 143, "0002992": 143, "100": [143, 149, 150, 152, 156, 159, 162, 164, 165, 166, 186, 187, 188, 189], "37890625": 143, "0000005250": 143, "101": [143, 149], "102": [143, 149], "7130": 143, "859375": 143, "001104": 143, "103": [143, 149, 156], "17156": 143, "0008633": 143, "104": [143, 149], "951": 143, "5625": 143, "0001497": 143, "105": [143, 149], "4492": 143, "96875": 143, "106": [143, 149], "3812": [143, 146], "000001631": 143, "107": [143, 149], "17128": 143, "0004323": 143, "108": [143, 149], "7975": 143, "2691": 143, "110": [143, 149, 156], "111": [143, 149], "2382": 143, "0003902": 143, "112": [143, 149], "113": [143, 149, 150], "2704": 143, "21875": 143, "114": [143, 149], "376953125": 143, "0000002595": 143, "115": [143, 149], "5517": 143, "1875": 143, "00001785": 143, "116": [143, 149], "4496": 143, "484375": 143, "117": [143, 149], "2695": 143, "78125": 143, "118": [143, 149], "2697": 143, "890625": 143, "119": [143, 149], "5491": 143, "000004505": 143, "120": [143, 149, 156], "3759765625": 143, "0000001290": 143, "121": [143, 149], "122": [143, 149], "2702": 143, "109375": 143, "123": [143, 149], "5495": 143, "703125": 143, "000001124": 143, "124": [143, 149], "4507": 143, "03125": 143, "4503": 143, "515625": 143, "126": 143, "9531": 143, "001903": 143, "127": 143, "00007488": 143, "128": 143, "8012": 143, "129": [143, 178], "2378": 143, "90625": 143, "0001954": 143, "130": 143, "131": 143, "7987": 143, "132": 143, "133": 143, "8006": 143, "134": 143, "8003": 143, "135": 143, "3806": 143, "0000008167": 143, "136": 143, "17114": 143, "0002163": 143, "137": 143, "3803": 143, "0000004087": 143, "138": 143, "5497": 143, "8515625": 143, "0000002809": 143, "139": 143, "140": [143, 150], "4662": 143, "65625": 143, "001998": 143, "141": 143, "17107": 143, "0001082": 143, "142": 143, "143": 143, "3801": 143, "0000002044": 143, "144": 143, "145": 143, "0000001022": 143, "146": 143, "147": [143, 178], "2701": 143, "0546875": 143, "too": [143, 151, 152, 159, 164, 166, 185, 189], "small": [143, 149, 150, 151, 152, 160, 166, 186, 189], "0000002296": 143, "000001000": [143, 189], "wish": [143, 149, 156, 159, 160, 163, 185, 189], "reconciled_progset": 143, "irrespect": [143, 149, 164], "270000": 143, "220000": [143, 147], "res_par_scen": 143, "774": 143, "pathcollect": 143, "0x7fd2e0c04750": 143, "doubled_budget": [143, 152], "res_baselin": [143, 189], "res_budget_scen": 143, "04": 143, "combinedscenario": 143, "mix": [143, 149, 152, 163, 187], "res_combined_scen": 143, "With": [143, 150, 152, 155, 184, 189], "care": [143, 145, 149, 167, 185], "did": [143, 149, 153, 156], "mind": [143, 151, 156, 166, 184], "better": [143, 144, 150, 151, 163, 166, 185, 189], "half_coverag": 143, "res_cov_scen": 143, "spendingadjust": [143, 159], "maximizecascadestag": 143, "optimized_instruct": 143, "961200": 143, "865080": 143, "11730": 143, "25568000": 143, "23011200": 143, "8205000": 143, "9025500": 143, "240000": 143, "216000": 143, "24289600": 143, "28124800": 143, "345000": 143, "310500": [143, 151], "1246000": 143, "1121400": 143, "913140": 143, "res_optim": 143, "familiar": [144, 156], "framework_tb": 144, "develop": [144, 149, 152, 157, 159, 184], "goal": [144, 156, 157, 159], "accommod": 144, "extent": 144, "codebas": 144, "cours": [144, 149, 150, 152, 155, 156, 186, 189], "rectangular": 144, "lowercas": 144, "datasheet": 144, "sh_pop": 144, "demograph": [144, 146, 156], "sh_notif": 144, "notif": 144, "sh_treat": 144, "sh_ltreat": 144, "sh_init": 144, "sh_newinf": 144, "sh_opt": 144, "sh_inf": 144, "sh_untpro": 144, "untreat": [144, 146], "sh_dali": 144, "intuit": [144, 164, 188], "recov": [144, 149, 150, 157, 164, 184, 185, 187, 189], "diagnos": [144, 146, 152, 156, 163, 164, 185, 187, 189], "known_inf": [144, 178], "num_treat": [144, 146, 176, 178], "sp": [144, 146, 149], "sp_inf": [144, 146, 178], "spdk_inf": [144, 178], "spmk_inf": [144, 178], "spxk_inf": [144, 178], "spdt": [144, 149, 178], "spmt": [144, 149, 178], "spxt": [144, 149, 178], "__init__": [144, 158], "blind": 144, "ident": [144, 166, 188], "ordinari": 144, "design": [144, 152, 159, 160, 184, 185, 187, 189], "abil": [144, 149, 164], "core": [144, 145, 164], "lot": [144, 149, 184], "autocomplet": 144, "outlin": [144, 164, 184], "guid": [144, 156, 159], "everyth": [144, 185], "sai": [144, 150, 166, 186, 189], "challeng": [144, 156, 163, 187], "someth": [144, 149, 159, 185], "solut": [144, 150, 159, 185, 187], "complic": [144, 149, 159, 163], "_valid": 144, "unus": 144, "field": [144, 184], "sanitize_datafram": 144, "readili": [144, 156, 189], "foremost": 144, "frequent": [144, 149, 186], "lteu": [144, 146, 149, 178], "ltet": [144, 146, 149, 178], "ltetoj": [144, 146, 178], "ltlu": [144, 146, 149, 178], "ltlt": [144, 146, 149, 156, 178], "ltltoj": [144, 146, 178], "snxd": [144, 146, 149, 178], "snxt": [144, 149, 178], "snxtoj": [144, 146, 178], "acr": [144, 149, 178], "bir": [144, 178], "immi": [144, 178], "imj": [144, 178], "ddi": [144, 146, 178], "doth": [144, 146, 149, 178], "emi": [144, 146, 149, 178], "sus_idiv": [144, 178], "vac_idiv": [144, 178], "lteu_idiv": [144, 178], "ltet_idiv": [144, 178], "ltlu_idiv": [144, 178], "ltlt_idiv": [144, 178], "snxd_idiv": [144, 178], "snxt_idiv": [144, 178], "acr_idiv": [144, 178], "e_rat": [144, 146, 149, 178], "le_ntreat": [144, 146, 178], "ltt_dur": [144, 178], "susx": [144, 146, 178], "ltex": [144, 156, 178], "ltlx": [144, 150, 156, 178], "spdu": [144, 146, 149, 178], "spdd": [144, 146, 149, 178], "spmu": [144, 146, 149, 178], "spmd": [144, 146, 149, 178], "spxu": [144, 146, 149, 178], "spxd": [144, 146, 149, 178], "sndu": [144, 146, 149, 178], "sndd": [144, 146, 149, 178], "sndt": [144, 149, 178], "snmu": [144, 146, 149, 178], "snmd": [144, 146, 149, 178], "snmt": [144, 149, 178], "snxu": [144, 146, 149, 178], "illustr": [144, 147, 149, 159, 160, 163, 164, 184, 188, 189], "setup": [144, 150, 156, 164, 166], "earli": [144, 146, 156, 166], "loc": 144, "everywher": [144, 159], "give": [144, 150, 151, 188], "iterrow": 144, "_": [144, 152, 164, 185], "acj": [144, 178], "spj": [144, 178], "spdtoj": [144, 146, 178], "spmtoj": [144, 146, 178], "spxtoj": [144, 146, 178], "snj": [144, 178], "sndtoj": [144, 146, 178], "snmtoj": [144, 146, 178], "toward": [145, 166, 184], "manner": 145, "travers": 145, "featur": [145, 147, 149, 151, 153, 163, 164, 166, 184, 185], "tag_birth": 145, "tag_dead": 145, "is_junct": 145, "inlink": [145, 146], "outlink": [145, 146], "proxi": [145, 185], "arriv": [145, 150, 166], "expected_dur": 145, "steadi": [145, 150, 166], "expected_outflow": 145, "probabilist": 145, "diagnost": [145, 146, 185], "tag": [145, 149], "link_valu": 145, "subtract": [145, 152], "greatli": [145, 152], "matric": [145, 163], "preval": [145, 146, 149, 152, 153, 159, 163, 165, 173, 174, 184, 185, 186, 189], "infector": 145, "is_fract": 145, "_internal_v": 145, "diseas": [145, 152, 157, 163, 166, 167, 184, 185, 186, 188, 189], "transmiss": [145, 184, 185, 186], "src_pop_avg": [145, 163, 178, 186], "tgt_pop_avg": [145, 163, 186], "source_pops": 145, "gen_cascad": 145, "Its": 145, "subdivid": 145, "inter": [145, 150, 153, 164], "par_list": 145, "programs_act": 145, "_vars_by_pop": 145, "_program_cach": 145, "run_model": 145, "post": [145, 149], "reorgan": 145, "update_junct": 145, "propag": [145, 149, 152, 153], "leav": [145, 150, 155, 162, 163, 166, 184, 187], "contribut": [145, 160, 163, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183], "infinit": [145, 184], "abort": 145, "tell": 145, "easi": [145, 146, 159, 184, 185], "trace": [145, 146, 156], "cyclic": [145, 185], "themselv": [145, 155, 159, 160, 163, 187], "whole": [145, 149, 159], "__getstate__": 145, "__setstate__": 145, "__deepcopy__": 145, "demo": [146, 147, 149, 150, 151], "679": 146, "discuss": [146, 149, 156, 159, 162, 163, 164, 165, 166, 184, 186, 187, 189], "focu": [146, 149, 159, 184, 185, 186, 189], "lt_inf": [146, 149, 178], "ds_inf": [146, 178], "smear": 146, "strain": [146, 188], "mdr_inf": [146, 178], "xdr": 146, "xdr_inf": [146, 178], "inc": [146, 164, 186], "relaps": 146, "immig": 146, "p_div": [146, 178], "n_div": [146, 178], "sn_inf": [146, 178], "lx_ntr": 146, "pd_ndiag": [146, 178], "pm_nd": 146, "ltt_inf": [146, 178], "lt_prev": [146, 149, 178], "ac_prev": [146, 149, 178], "dr": 146, "dr_prev": [146, 178], "pm_ndiag": [146, 178], "px_ndiag": [146, 178], "sn": [146, 149], "nd_ndiag": [146, 178], "nm_ndiag": [146, 178], "nx_ndiag": [146, 178], "pd_ntre": 146, "pm_ntr": 146, "px_ntr": 146, "who": [146, 156, 164, 166, 185, 187, 189], "diagnosi": [146, 163, 164, 175, 185], "ac_diag_r": 146, "export_result": 146, "example1": 146, "im_lat_div": [146, 178], "im_act_div": [146, 178], "monitor": [146, 159], "make_demo_scenario": 146, "scen_result": [146, 149], "example2": 146, "715": 146, "702": 146, "726": 146, "question": [146, 152], "ran": 146, "example3": 146, "screenshot": [146, 163], "describ": [146, 147, 155, 156, 159, 164, 166, 187, 189], "example4": 146, "dump": [146, 156], "export5": 146, "hidden": [146, 149], "quit": [146, 149, 156, 159, 166], "df": [146, 152], "inc_prisoners_to_15": 146, "late": [146, 156, 166], "restrict": [146, 151, 160, 163, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183], "natur": [146, 149, 166, 185, 189], "recoveri": [146, 184, 185, 189], "840678": 146, "852600": 146, "608386": 146, "857900": 146, "36000": 146, "000000": [146, 152], "9000": 146, "207200": 146, "352800": 146, "680000": 146, "775900": 146, "044100": 146, "3598": 146, "009067": 146, "830137": 146, "145072": 146, "612643": 146, "944524": 146, "43212": 146, "161695": 146, "11053": 146, "800000": 146, "358": 146, "572375": 146, "824693": 146, "641336": 146, "000533": 146, "827254": 146, "152843": 146, "853087": 146, "080167": 146, "000067": 146, "357260": 146, "2001": [146, 149, 151], "818925": 146, "141017": 146, "617418": 146, "954147": 146, "49049": 146, "306398": 146, "13494": 146, "924602": 146, "628": 146, "981745": 146, "907551": 146, "767243": 146, "002471": 146, "331490": 146, "259608": 146, "000992": 146, "738444": 146, "095905": 146, "000309": 146, "4012": 146, "857000": 146, "807431": 146, "734081": 146, "622771": 146, "184132": 146, "53462": 146, "386307": 146, "16171": 146, "619035": 146, "820": 146, "729690": 146, "112786": 146, "888851": 146, "005615": 146, "307339": 146, "368140": 146, "002849": 146, "514098": 146, "111106": 146, "000702": 146, "4201": 146, "026805": 146, "2002": [146, 148, 151], "795936": 146, "179120": 146, "628390": 146, "185374": 146, "56732": 146, "528248": 146, "18943": 146, "495681": 146, "971": 146, "114360": 146, "724117": 146, "005611": 146, "009916": 146, "898043": 146, "478135": 146, "005572": 146, "215515": 146, "125701": 146, "001240": 146, "4377": 146, "593457": 146, "2540": 146, "hierarch": 146, "aci_idiv": [146, 178], "lti_idiv": [146, 178], "ltei_idiv": [146, 178], "lteti_idiv": [146, 178], "acdi_idiv": [146, 178], "2005": [146, 149], "2006": 146, "2007": 146, "2008": 146, "2009": 146, "2011": 146, "2012": 146, "2013": [146, 153], "2021": [146, 153, 189], "2022": [146, 153, 189], "2024": [146, 151, 153], "2025": [146, 147, 149, 151, 153], "2026": [146, 147, 153], "2027": [146, 153], "2028": [146, 147, 153], "2029": 146, "2031": [146, 153], "2032": [146, 151], "2033": 146, "2034": 146, "8526": 146, "14507161": 146, "1410167": 146, "73408111": 146, "17911973": 146, "784438": 146, "64189761": 146, "772962": 146, "54615262": 146, "761479": 146, "55042216": 146, "750731": 146, "49264522": 146, "740718": 146, "56456972": 146, "731442": 146, "87432715": 146, "722866": 146, "7633955": 146, "714535": 146, "69231394": 146, "706264": 146, "60229092": 146, "697962": 146, "80047631": 146, "689550": 146, "44121886": 146, "680974": 146, "52486168": 146, "672305": 146, "08176119": 146, "663547": 146, "19223369": 146, "654710": 146, "37439578": 146, "645823": 146, "5782231": 146, "636891": 146, "72580864": 146, "628238": 146, "7878327": 146, "619867": 146, "04300878": 146, "611797": 146, "90817666": 146, "603984": 146, "22503826": 146, "596347": 146, "80069927": 146, "588791": 146, "07466194": 146, "581265": 146, "63061197": 146, "573816": 146, "53943644": 146, "566466": 146, "97372058": 146, "559242": 146, "86861922": 146, "552077": 146, "40164813": 146, "544976": 146, "97637218": 146, "537930": 146, "29818745": 146, "530928": 146, "57325812": 146, "524700": 146, "84701489": 146, "519147": 146, "03504136": 146, "514196": 146, "90384823": 146, "509786": 146, "22202476": 146, "505856": 146, "55902625": 146, "502355": 146, "00478344": 146, "499233": 146, "99299343": 146, "496450": 146, "96882895": 146, "493967": 146, "9893496": 146, "491751": 146, "30094992": 146, "489770": 146, "9217781": 146, "488000": 146, "26257496": 146, "486415": 146, "75571263": 146, "484996": 146, "51943209": 146, "483724": 146, "06126727": 146, "482582": 146, "01060729": 146, "481555": 146, "87854444": 146, "480632": 146, "84377206": 146, "479801": 146, "56208566": 146, "479051": 146, "99711401": 146, "478375": 146, "27009443": 146, "477763": 146, "52666032": 146, "477209": 146, "81878702": 146, "476708": 146, "000221": 146, "476252": 146, "63388695": 146, "475838": 146, "90992575": 146, "475462": 146, "57316065": 146, "475119": 146, "85892056": 146, "474807": 146, "43626738": 146, "474522": 146, "35778102": 146, "474262": 146, "01515033": 146, "474024": 146, "09990318": 146, "473806": 146, "56868458": 146, "473607": 146, "61255888": 146, "473425": 146, "62987168": 146, "pd_sad_div": [146, 178], "nd_sad_div": [146, 178], "pm_sad_div": [146, 178], "nm_sad_div": [146, 178], "px_sad_div": [146, 178], "nx_sad_div": [146, 178], "power": 146, "exploratori": 146, "secondari": [147, 166], "strategi": [147, 149, 152, 164], "au": [147, 159], "ipython": [147, 148, 149], "html": [147, 148, 149, 184], "css": [147, 149], "flex": [147, 149], "result1": 147, "365000": 147, "22568000": 147, "22282133": 147, "793333": 147, "108461100": 147, "7205000": 147, "1346000": 147, "951200": 147, "1414500": 147, "result2": 147, "2e8": 147, "5e8": 147, "2e7": 147, "3e7": 147, "result3": 147, "532": 147, "694": 147, "674": 147, "task": [147, 149, 152, 153, 158, 159], "parsimoni": [147, 188], "unequ": 147, "2040": [147, 149], "xlim": 147, "22m": 147, "25m": 147, "49m": 147, "prog_list": 147, "unaggreg": 147, "hosp": 147, "circumst": [148, 149, 150, 166, 185, 186], "testdir": [148, 152], "parent_dir": 148, "unit_demo_framework": 148, "unit_demo_databook": 148, "unit_demo_progbook": 148, "00869": [148, 185], "0194": 148, "recrat": [148, 153, 177], "infdeath": [148, 153, 177], "weekli": 148, "susdeath": [148, 153, 177], "daili": [148, 160], "foi": [148, 151, 163, 177, 184, 185, 186], "dead": [148, 159], "adult": [148, 153, 163, 164, 166, 184, 185, 186, 189], "nativ": [148, 160, 164], "risk": [148, 159, 184, 185], "harm": [148, 159], "annual_coverag": 148, "timestep_coverag": 148, "29166": 148, "1142": 148, "614": [148, 151, 152], "4x460": [148, 151, 152], "ax": [148, 149, 151, 152], "collaps": 149, "foundat": 149, "suit": 149, "frontend": 149, "assist": 149, "lowest": 149, "my": 149, "wrong": [149, 163, 185], "big": [149, 185], "preview": 149, "par_result": 149, "scen_par": 149, "scen_pop": 149, "1999": 149, "2050": 149, "rcparam": 149, "figsiz": 149, "525": 149, "511": 149, "imag": [149, 184], "undesir": [149, 166], "consequ": [149, 156], "difficult": [149, 155, 163, 187], "plotresult": 149, "innerplottrend": 149, "_plottrend": 149, "isol": [149, 156, 164, 189], "evid": [149, 159], "plot_daru": 149, "plai": 149, "highli": 149, "compos": 149, "mandatori": 149, "few": [149, 152, 153, 163, 166, 184, 185], "uninfect": [149, 166], "dimension": 149, "obvious": [149, 156], "spd_prev": [149, 178], "certainli": [149, 150], "rememb": [149, 163], "source_label": 149, "dest_label": 149, "par_label": 149, "dimens": [149, 156], "output_nam": 149, "healthi": 149, "good": [149, 156, 166, 185, 189], "underestim": 149, "carefulli": [149, 160, 186], "v_rate": 149, "babi": 149, "unvaccin": [149, 156, 166], "tick": 149, "marker": 149, "unusu": 149, "hatch": 149, "font": 149, "set_figwidth": 149, "set_figheight": 149, "set_titl": 149, "infant": [149, 189], "set_ylabel": 149, "set_xtick": 149, "frequenc": 149, "axvlin": 149, "linestyl": 149, "highlight": 149, "get_xaxis_transform": 149, "put": [149, 152, 159, 184], "annot": 149, "encapsul": 149, "suggest": [149, 150, 185], "onlin": 149, "snippet": 149, "persist": 149, "aplt": 149, "bar_width": 149, "line_width": 149, "marker_edge_width": 149, "dpi": 149, "150": [149, 152], "plot_level": 149, "And": [149, 150, 152, 166, 186], "Of": [149, 150, 152, 186, 189], "amd": 149, "anticip": 149, "savefig": 149, "save_fig": 149, "baseline_al": 149, "baseline_vac": 149, "scenario_al": 149, "scenario_vac": 149, "scenario_vac_legend": 149, "mention": [149, 159, 160, 164, 166], "set_label": 149, "newfold": 149, "examplebaseline_al": 149, "examplebaseline_vac": 149, "examplescenario_al": 149, "examplescenario_vac": 149, "examplelegend": 149, "lastli": [149, 184], "series_": 149, "series_a": 149, "series_b": 149, "series_c": 149, "series_d": 149, "series_d_legend": 149, "ONE": 149, "plot_legend": 149, "advis": 149, "try": [149, 152, 153, 154, 155, 159, 185], "much": [149, 152, 153, 156, 160, 163, 166, 185, 186, 189], "plottnig": 149, "distinguish": 149, "adjac": 149, "understand": [149, 185], "studi": 149, "achiev": [149, 150, 151, 159, 160, 164, 185, 187, 188, 189], "bind": 149, "decad": 149, "t_label": 149, "20292080": 149, "15377111": 149, "2045": 149, "3445675": 149, "3496115": 149, "3023573": 149, "00562325": 149, "2664574": 149, "44619388": 149, "2463866": 149, "51327494": 149, "2396834": 149, "62773168": 149, "2373145": 149, "28211583": 149, "finish": [149, 184], "extend": [149, 153, 159], "middl": [149, 156, 186], "plotbar": 149, "swap": 149, "breakdown": [149, 189], "awar": [149, 160, 164, 185], "thumb": [149, 152], "spine": 149, "sign": 149, "stream": [149, 156], "scheme": 149, "vice": 149, "versa": 149, "xlabel": [149, 150], "set_xticklabel": 149, "reorder_legend": 149, "reorder": 149, "relabel_legend": 149, "curv": [149, 164], "inspect": [149, 150, 152, 156, 160, 185, 187], "90k": 149, "200000": [149, 155], "confirm": [149, 150, 186, 189], "million": 149, "cumbersom": [149, 189], "1x2": 149, "2x2": 149, "especi": [149, 185], "arrang": [149, 164], "break": [149, 166], "statu": [149, 156, 166], "green": 149, "purpl": 149, "bit": [149, 155], "getcolormappingsbysmear": 149, "cat_list": 149, "005b9a": 149, "0191c8": 149, "lted": 149, "ltld": 149, "orang": [149, 166], "ltr": 149, "setcolormappingsbysmear": 149, "afterward": [149, 152, 164], "Will": 149, "converg": 150, "accur": [150, 152, 157, 165, 185], "discret": 150, "agent": 150, "rightarrow": 150, "c_1": 150, "c_2": 150, "snapshot": 150, "realiti": [150, 166, 185, 189], "obei": 150, "qualit": [150, 189], "symmetr": 150, "dur1": 150, "dur2": 150, "n_agents_per_year": 150, "n_year": 150, "poisson": 150, "arrival_tim": 150, "ravel": 150, "randn": [150, 165], "get_ag": 150, "agents_in_c1": 150, "agents_in_c2": 150, "probe": 150, "ylabel": 150, "entiti": [150, 163], "realist": [150, 159], "linearli": [150, 160, 164, 188], "nobodi": [150, 166, 189], "markov": [150, 157], "proper": [150, 152], "inde": [150, 152, 159, 186, 189], "euler": [150, 160], "solver": 150, "rh": 150, "tspan": 150, "reshap": 150, "dx": [150, 152, 168, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183], "frame": [150, 164, 189], "departur": 150, "p_1": 150, "p_2": 150, "dc_1": 150, "p_1c_1": 150, "dc_c": 150, "p_2c_2": 150, "fashion": 150, "formul": [150, 160], "lambda": [150, 152, 165], "reciproc": 150, "cdf": 150, "4f": [150, 186], "4866": 150, "4634": 150, "clearli": [150, 156, 186], "bernoulli": 150, "success": [150, 160, 185, 189], "0009": 150, "analyt": 150, "c_1p_1": 150, "400": [150, 187], "200": [150, 152, 155, 164, 166, 187], "x_k": 150, "x_0p": 150, "x_0": 150, "0800": 150, "1535": 150, "substitut": [150, 156, 166], "y1": 150, "9216": 150, "somewhat": [150, 153, 163], "exhibit": 150, "probabili": 150, "tradit": 150, "0964": 150, "2402": 150, "4923": 150, "fine": [150, 156, 163, 185], "nonlinear": [150, 155, 164], "0833": 150, "1667": 150, "y2": 150, "0033": 150, "closer": 150, "dur": [150, 166], "expans": 150, "approx": 150, "cdot": 150, "discard": 150, "validli": [150, 152], "why": [150, 156, 185, 187], "poorli": 150, "anyon": [150, 164, 166], "necessarili": [150, 159], "significantli": [150, 160, 166, 185], "overestim": 150, "impli": [150, 166], "0000": [150, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 186], "motiv": [150, 156, 187], "presenc": [150, 152], "said": 150, "neither": 150, "nor": 150, "equilibrium": [150, 166, 185], "chosen": 150, "word": 150, "neq": 150, "uniformli": [150, 156, 166, 187], "16th": 150, "ultim": 150, "setlevel": [150, 158], "test_dt": 150, "plot_pop": 150, "3f": 150, "rapid": [150, 166], "male": [150, 152, 185], "observ": [150, 165], "hiv_dyn": 150, "cervic": [150, 175], "cancer": [150, 175], "gaug": 150, "cervicalcanc": 150, "women": [150, 163], "scr": [150, 152, 168, 173, 174, 183], "slower": [150, 160], "job": 150, "738": 151, "forecast": 151, "200e3": 151, "150e3": 151, "535": 151, "begin": [151, 152, 184, 189], "ambigu": [151, 164], "264e3": 151, "res_2018": 151, "res_smooth": 151, "533": 151, "heavili": 151, "interp": 151, "res_manually_smooth": 151, "561": 151, "571": 151, "0x7ff00a1e4a90": 151, "_sampl": [151, 152, 153], "315000": 151, "313500": 151, "312000": 151, "309000": 151, "307500": 151, "306000": 151, "s_parset": 151, "res_manu": 151, "786": 151, "previous": [151, 153, 155, 159, 160, 166, 186, 189], "003": [151, 178], "002": 151, "573": 151, "567": 151, "541": 151, "reactiv": 151, "843": 151, "onward": [151, 159], "sub": [152, 153, 184, 189], "rural": 152, "214": 152, "stat": 152, "test_uncertainty_framework": 152, "test_uncertainty_databook": 152, "test_uncertainty_high_progbook": 152, "low_uncertainty_progset": 152, "test_uncertainty_low_progbook": 152, "high_uncertainty_progset": 152, "default_budget": 152, "diag": [152, 164, 168, 169, 171, 172, 173, 179, 180, 181, 182, 183], "fail_rat": [152, 171, 172, 173, 174, 179, 180], "0298": 152, "all_screen": [152, 168, 173, 174, 183], "0x7f232a07fab0": 152, "m_rural": 152, "0250": 152, "epidemiolog": [152, 185], "uncertinti": 152, "mathcal": 152, "sampled_parset": 152, "2f": [152, 187], "249": 152, "sampled_r": 152, "0222": 152, "sampled_progset": 152, "0344": 152, "0303": 152, "0356": 152, "badiniti": 152, "reliabl": [152, 185], "f_rural": 152, "235128": 152, "all_peopl": [152, 168, 171, 172, 173, 174, 179, 180, 181, 182, 183], "1101": 152, "undx": [152, 164, 168, 171, 172, 173, 174, 179, 180, 181, 182, 183], "630": 152, "234": 152, "con": [152, 173, 174, 185], "148": 152, "470": 152, "76487173": 152, "successfulli": [152, 166, 187, 189], "resampl": 152, "unsatisfactori": 152, "0224": 152, "0x7f23277d0f10": 152, "get_equivalent_": 152, "978088": 152, "0x7f232a622490": 152, "978123": 152, "parset_nam": 152, "m_urban": 152, "f_urban": 152, "uuid": 152, "cd2e717f": 152, "cb4d": 152, "4daa": 152, "aad8": 152, "98d028ed2586": 152, "71it": 152, "loos": 152, "01it": 152, "0233": 152, "sequenc": [152, 166, 184], "list_of_result": 152, "ahead": [152, 155, 166, 184, 186, 187], "dash": [152, 164, 166], "median": [152, 185], "regener": 152, "collis": 152, "rest": [152, 160, 184], "relabel": 152, "unnam": 152, "hadn": 152, "yld": 152, "summary_statist": 152, "statist": 152, "3362": 152, "999052": 152, "689865": 152, "229674": 152, "3383": 152, "501089": 152, "3348": 152, "031225": 152, "q1": 152, "3357": 152, "640676": 152, "q3": 152, "3367": 152, "016381": 152, "4175": 152, "364625": 152, "4174": 152, "657501": 152, "4173": 152, "735033": 152, "4217": 152, "624374": 152, "4132": 152, "233303": 152, "4166": 152, "075537": 152, "4185": 152, "514899": 152, "3396": 152, "464712": 152, "3397": 152, "135096": 152, "719692": 152, "3419": 152, "841094": 152, "3371": 152, "550566": 152, "3391": 152, "851250": 152, "3404": 152, "597237": 152, "4968": 152, "772456": 152, "806673": 152, "4966": 152, "767523": 152, "5016": 152, "001787": 152, "4911": 152, "368454": 152, "4954": 152, "877096": 152, "4983": 152, "216754": 152, "result_default_spend": 152, "result_doubled_spend": 152, "0302": 152, "58it": 152, "16it": 152, "aid": 152, "undiagnos": [152, 156, 163, 164, 189], "probabilit": 152, "section": [152, 164], "asymmetr": 152, "implic": 152, "cater": [152, 153, 155, 156], "quantifi": [152, 164], "get_differ": 152, "d1": [152, 153], "d2": [152, 153], "eas": 152, "inherit": 152, "cascade_ensembl": 152, "introduct": 152, "all_dx": [152, 168, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183], "all_tx": [152, 168, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183], "all_con": [152, 173, 174], "set_size_inch": 152, "ram": 152, "magnitud": 152, "50x": 152, "20x": 152, "situat": [152, 156, 160, 164, 185, 189], "lead": [152, 155, 156, 164, 185, 186, 187, 189], "store_minim": 152, "0322": 152, "0295": 152, "0291": 152, "0278": 152, "0297": 152, "0292": 152, "0296": 152, "0312": 152, "0269": 152, "0314": 152, "0326": 152, "0362": 152, "0348": 152, "0379": 152, "0328": 152, "0313": 152, "0350": 152, "0311": 152, "0333": 152, "0324": 152, "0341": 152, "0310": 152, "0299": 152, "0290": 152, "0304": 152, "0301": 152, "0293": 152, "0283": 152, "0286": 152, "0309": 152, "0279": 152, "0265": 152, "0270": 152, "0294": 152, "0281": 152, "0289": 152, "0280": 152, "0325": 152, "0349": 152, "0282": 152, "0271": 152, "0612": 152, "0316": 152, "0307": 152, "0276": 152, "0287": 152, "0477": 152, "0305": 152, "0306": 152, "0357": 152, "0346": 152, "0331": 152, "0490": 152, "0381": 152, "0332": 152, "0390": 152, "0338": 152, "0369": 152, "0323": 152, "peak": 152, "seamlessli": 152, "91it": 152, "paralliz": 152, "test_ensemble_parallel": 152, "pairplot": 152, "1543": 152, "userwarn": 152, "subplot": 152, "scatter_matrix": 152, "kde": 152, "quiet": [153, 185], "timedependentvalueentri": 153, "line2d": 153, "0x7fb54cabdb50": 153, "ts2": 153, "yourself": 153, "0x7fb51111ccd0": 153, "human": [153, 163], "mosquito": [153, 160, 163, 185], "populaton": 153, "contant": 153, "sir_framework": 153, "2041": 153, "sir_databook_1": 153, "ch_all": [153, 159, 169, 176, 177], "ch_prev": [153, 177], "transpercontact": [153, 177], "contact": [153, 185, 186], "0x7fb5141c7bd0": 153, "pop_0": 153, "0x7fb5147dba10": 153, "cl": 153, "proven": 153, "sir_databook_2": 153, "3000": [153, 164], "sir_databook_3": 153, "particularli": [153, 156, 159, 160, 163, 164, 166, 184], "conduct": [153, 185], "countri": [153, 164, 185, 187, 189], "f2": 153, "sir_framework_2": 153, "fragil": 153, "prone": 153, "sir_databook_4": 153, "prefer": [153, 155, 156, 159, 160, 164, 185], "past": [153, 185, 189], "tidi": 153, "f3": 153, "sir_framework_3": 153, "d3": 153, "surplu": 153, "delet": 153, "del": 153, "sir_databook_5": 153, "sir_databook_6": 153, "sir_databook_7": 153, "sir_databook_8": 153, "sir_databook_9": 153, "download": 153, "scirisspreadsheet": 153, "add_worksheet": 153, "sir_databook_10": 153, "compil": [154, 156], "jupyt": 154, "explor": 154, "akin": 155, "clinic": 155, "offlin": 155, "attend": 155, "straightforward": [155, 164, 187], "500": [155, 166], "override_framework_2": 155, "override_databook_2": 155, "override_progbook_2": 155, "clinic_coverag": 155, "txrate": 155, "0453": 155, "kept": 155, "override_framework_1": 155, "override_databook_1": 155, "override_progbook_1": 155, "schemat": [155, 162, 184, 189], "arbitrary_cost_cov_fcn": 155, "promotetoarrai": 155, "n_clinic": 155, "cost_per_clin": 155, "frac_coverag": 155, "floor": [155, 177], "null_get_prop_cov": 155, "hack": 155, "prognam": 155, "methodtyp": 155, "0187": [155, 186], "gone": 155, "architectur": 155, "overcom": 156, "strive": 156, "acquir": [156, 164, 166], "nvac": 156, "ltx": 156, "infer": [156, 163, 187], "recogn": 156, "algebra": 156, "linalg": 156, "detect": 156, "2x1": 156, "2x3": 156, "3x1": 156, "rank": 156, "matrix_rank": 156, "stricter": 156, "norm": [156, 187], "pursu": 156, "overspecif": 156, "choos": [156, 157, 184], "manifest": [156, 157], "squar": [156, 163, 165], "lstsq": 156, "censu": 156, "discrep": [156, 166], "1990": 156, "insidi": 156, "1995": 156, "neighbour": 156, "easier": [156, 162, 163], "engin": [157, 167], "flexibli": 157, "analyz": [157, 160], "fundabl": 157, "experienc": 157, "encod": 157, "reinfect": 157, "mutual": 157, "empir": 157, "movement": [157, 164, 166, 184, 186], "sharp": [157, 166], "jump": 157, "elimin": 157, "global": 158, "anywher": 158, "getlogg": 158, "wors": 158, "start_log": 158, "logfil": 158, "txt": 158, "traceback": 158, "unhandl": 158, "stop_log": 158, "logfile2": 158, "extens": 159, "philosophi": 159, "underpin": [159, 184], "api": 159, "unoptim": 159, "make_optim": 159, "compon": [159, 166, 187, 189], "outset": [159, 184], "delai": 159, "fall": [159, 164], "profil": 159, "slope": 159, "intercept": 159, "mx": 159, "pairedlinearspendingadjust": 159, "exponentialspendingadjust": 159, "incomplet": 159, "timevari": 159, "starttimeadjust": 159, "untest": 159, "meet": 159, "scaleup": 159, "mayb": 159, "explictli": [159, 166], "adjustable_valu": 159, "declar": [159, 160, 163, 186], "_asd_object": 159, "becam": 159, "envisag": 159, "compact": 159, "tailor": 159, "met": [159, 160, 166], "minimizemeasur": 159, "maximizemeasur": 159, "atmostmeasur": 159, "atleastmeasur": 159, "728": 159, "outright": 159, "redesign": 159, "wast": [159, 163], "redistribut": 159, "dy": 159, "test_optim": 159, "criterion": 159, "parallel_optim": 159, "orig_alloc": 159, "classif": 160, "math": 160, "function_pars": 160, "driven": [160, 166], "signific": [160, 166], "fast": 160, "fastest": 160, "implicit": 160, "problemat": [160, 166], "inconveni": [160, 163], "lifespan": 160, "malaria": [160, 163], "suffer": 160, "precis": [160, 185], "address": [160, 166, 185], "00274": 160, "pollut": [160, 163], "theta": 160, "encompass": 160, "framework_derivative_test": 160, "cautiou": 160, "m_prev": 160, "dm_prev": 160, "spline": 160, "contextu": 161, "cookbook": 161, "stochast": 161, "offer": 162, "varieti": [162, 189], "residualjunct": 162, "compartment_3": 162, "born": 163, "water": 163, "nutrit": 163, "clarifi": 163, "oppos": 163, "lake": 163, "coinfect": [163, 166], "matern": 163, "child": [163, 185, 186, 189], "health": [163, 167], "grow": 163, "stunt": 163, "speci": 163, "canon": 163, "combined_framework": 163, "scratch": 163, "Such": 163, "constitut": 163, "src_pop_sum": [163, 186], "tgt_pop_sum": [163, 186], "sum_foi": 163, "udt": [163, 175], "udt_ctc": 163, "sir_ctc": 163, "matrici": 163, "a7": 163, "b7": 163, "atuomat": 163, "sir_0": 163, "sir_5": 163, "sir_15": 163, "udt_0": 163, "udt_15": 163, "grei": [163, 184], "aging_sir": 163, "aging_udt": 163, "recal": 163, "utc_ctc": 163, "nonexist": 163, "plhiv": [163, 166, 184], "pregnant": 163, "anaemia": 163, "insecticid": 163, "sprai": 163, "exception": 163, "beforehand": 163, "methodolog": 163, "workaround": 163, "invest": [164, 189], "projectani": 164, "hospit": 164, "bed": 164, "drug": [164, 185, 188, 189], "demand": 164, "depict": 164, "broad": 164, "dose": 164, "purchas": 164, "quarter": 164, "focus": 164, "alpha": 164, "2x": 164, "asymptot": 164, "infin": 164, "consider": [164, 185, 189], "tradition": 164, "fairli": [164, 184, 187], "shape": 164, "tempt": 164, "think": [164, 184, 186], "confus": [164, 185], "terminologi": 164, "formal": 164, "patient": 164, "subtl": [164, 166, 185], "exponenti": [164, 166], "randomli": [164, 165, 166], "jointli": 164, "diagram": [164, 184, 185], "preferenti": 164, "largest": [164, 166], "comma": [164, 184, 187], "dispar": 164, "someon": [164, 166, 189], "whom": [164, 187], "asymptomat": [164, 166], "everyon": [164, 166, 184, 189], "twice": [164, 186], "067": 164, "066": 164, "chanc": [164, 189], "deliv": 164, "267": 164, "source_pop": 164, "dest_pop": 164, "incarcer": [164, 184, 186], "gaussian": 165, "rand": 165, "mu": 165, "framework_stochastic_test": 165, "databook_sir_dynam": 165, "truncat": 165, "epidem": [165, 166, 167, 185, 186, 189], "erad": 165, "interdepend": 165, "walk": [165, 190], "nonlinearli": 165, "grossli": 166, "mass": 166, "campaign": 166, "wear": 166, "obviou": 166, "lose": [166, 186], "rapidli": 166, "slowli": 166, "dramat": 166, "schedul": 166, "inappropri": 166, "leverag": 166, "coupl": 166, "goveren": 166, "expir": 166, "latenc": 166, "die": [166, 189], "efficaci": [166, 188, 189], "unrel": 166, "incub": 166, "harmless": 166, "symptom": 166, "mimick": 166, "typhoid": 166, "ones": 166, "coexist": 166, "join": 166, "d_rate": 166, "softwar": 166, "state_1": 166, "state_2": 166, "summar": 166, "_except_": 166, "dxr": 166, "inelig": 166, "vacdxr": 166, "eligibl": 166, "downscal": 166, "seem": 166, "counterintuit": 166, "di": 166, "prerequisit": 166, "shorter": 166, "acceler": 166, "reciev": [166, 187], "tutori": [167, 184, 186, 187, 188, 189], "vital": [168, 169, 171, 172, 173, 174, 179, 180, 183], "dead_cc": 168, "birth_rat": [168, 169, 172, 174, 180], "num_acq": [168, 169, 172, 174, 180], "acq_rat": [168, 169, 172, 174, 176, 180], "num_screen": [168, 169, 173, 174, 176, 183], "screen_yield": [168, 169, 174], "pos_screen": [168, 169, 174], "num_diag": [168, 169, 171, 173, 174, 176, 181, 182, 183], "num_initi": [168, 169, 171, 172, 173, 174, 179, 180, 181, 182, 183], "015": [168, 169, 172, 174, 180], "death_cc": 168, "unsc_uncomp": 169, "unsc_vd": 169, "sc_uncomp": 169, "sc_vd": 169, "dx_uncomp": 169, "dx_vd": 169, "txs_uncomp": 169, "txs_vd": 169, "txf_uncomp": 169, "txf_vd": 169, "dead_dm": 169, "dead_oth": [169, 172, 174, 180], "ch_screen": 169, "ch_diag": 169, "ch_tx": [169, 176], "ch_succ": [169, 176], "ch_propscreen": 169, "ch_propdiag": 169, "ch_proptx": [169, 176], "ch_propsucc": [169, 176], "15828": 169, "prog_rat": 169, "treat_fail": [169, 176], "treat_suc": [169, 176], "death_vd": 169, "025": [169, 174, 189], "death_oth": [169, 172, 174, 180], "num_loss": [170, 181, 182, 183], "all_ever_link": [171, 172], "all_curr_link": [171, 172, 179, 180], "all_v": [171, 172, 179, 180], "link_tim": [171, 172], "supp_rat": [171, 172, 180], "dead_hiv": 172, "num_test": [172, 179, 180], "test_yield": [172, 179, 180], "pos_test": [172, 179, 180], "death_hiv": 172, "053": 172, "death_hivtx": 172, "0258534": 172, "death_hivv": 172, "01219": 172, "cont_rat": [173, 174], "dead_hyp": 174, "screen_target": 174, "screen_cov": 174, "death_hyp": 174, "diabet": 175, "hypertens": 175, "servic": 175, "usdt": 175, "untx": 176, "txf": 176, "ch_awar": 176, "ch_link": 176, "ch_propawar": 176, "ch_proplink": 176, "rec": [177, 184, 186, 187, 189], "ch_infrec": 177, "ch_infsu": 177, "ch_newinf": 177, "ch_propinfrec": 177, "ch_propinfsu": 177, "ch_propnewinf": 177, "0008": 177, "016": 177, "008": 177, "ltx_inf": 178, "lt_undiag": 178, "lte_inf": 178, "ltl_inf": 178, "sndk_inf": 178, "snmk_inf": 178, "snxk_inf": 178, "known_cascad": 178, "spd_inf": 178, "spm_inf": 178, "spx_inf": 178, "snd_inf": 178, "snm_inf": 178, "snx_inf": 178, "dr_inf": 178, "ac_cascad": 178, "spd_infx": 178, "spm_infx": 178, "spx_infx": 178, "snd_infx": 178, "snm_infx": 178, "snx_infx": 178, "spd_prevx": 178, "spm_prevx": 178, "spx_prevx": 178, "snd_prevx": 178, "snm_prevx": 178, "snx_prevx": 178, "spm_prev": 178, "spx_prev": 178, "snd_prev": 178, "snm_prev": 178, "snx_prev": 178, "sp_prev": 178, "sn_prev": 178, "ds_prev": 178, "mdr_prev": 178, "xdr_prev": 178, "num_undiag_d": 178, "num_undiag_mdr": 178, "num_undiag_xdr": 178, "num_diag_d": 178, "num_diag_mdr": 178, "num_diag_xdr": 178, "num_treat_d": 178, "num_treat_mdr": 178, "num_treat_xdr": 178, "treat_cascad": 178, "diag_suff": 178, "treat_suff": 178, "dti_idiv": 178, "vaci_idiv": 178, "und_idiv": 178, "pm_div": 178, "px_div": 178, "nm_div": 178, "nx_div": 178, "inf_su": 178, "vac_fac": 178, "lat_fac": 178, "sn_fac": 178, "mdr_fac": 178, "xdr_fac": 178, "ltex_idiv": 178, "ltlx_idiv": 178, "spdu_idiv": 178, "spdd_idiv": 178, "spdt_idiv": 178, "spmu_idiv": 178, "spmd_idiv": 178, "spmt_idiv": 178, "spxu_idiv": 178, "spxd_idiv": 178, "spxt_idiv": 178, "sndu_idiv": 178, "sndd_idiv": 178, "sndt_idiv": 178, "snmu_idiv": 178, "snmd_idiv": 178, "snmt_idiv": 178, "snxu_idiv": 178, "susx_idiv": 178, "i_rat": 178, "l_ntreat_m": 178, "l_ntreat_ct": 178, "l_durat": 178, "180": 178, "lt_fail_div": 178, "lt_succ_div": 178, "lx_ntreat": 178, "ll_ntreat": 178, "let_fail_div": 178, "let_succ_div": 178, "llt_fail_div": 178, "llt_succ_div": 178, "e_dep": 178, "l_dep": 178, "p_branch": 178, "foi_p": 178, "foi_n": 178, "w_ctc": 178, "im_late_div": 178, "im_latl_div": 178, "im_sus_div": 178, "d_ntreat": 178, "pd_ntreat": 178, "nd_ntreat": 178, "d_durat": 178, "d_ltfu_div": 178, "d_fail_div": 178, "d_esc_div": 178, "d_succ_div": 178, "d_sad_div": 178, "dt_dur": 178, "pd_ltfu_div": 178, "pd_fail_div": 178, "pd_esc_div": 178, "pd_succ_div": 178, "nd_ltfu_div": 178, "nd_fail_div": 178, "nd_esc_div": 178, "nd_succ_div": 178, "m_ntreat": 178, "pm_ntreat": 178, "nm_ntreat": 178, "m_durat": 178, "540": 178, "m_ltfu_div": 178, "m_fail_div": 178, "m_esc_div": 178, "m_succ_div": 178, "634": 178, "m_sad_div": 178, "mt_dur": 178, "pm_ltfu_div": 178, "pm_fail_div": 178, "pm_esc_div": 178, "pm_succ_div": 178, "nm_ltfu_div": 178, "nm_fail_div": 178, "nm_esc_div": 178, "nm_succ_div": 178, "x_ntreat": 178, "px_ntreat": 178, "nx_ntreat": 178, "x_durat": 178, "720": 178, "x_ltfu_div": 178, "x_fail_div": 178, "x_succ_div": 178, "x_sad_div": 178, "xt_dur": 178, "px_ltfu_div": 178, "px_fail_div": 178, "px_succ_div": 178, "nx_ltfu_div": 178, "nx_fail_div": 178, "nx_succ_div": 178, "disutility_weight": 178, "yld_rate": 178, "life_expect": 178, "yll_rate": 178, "daly_r": 178, "succ_rat": 179, "dead_tb": 180, "num_vac": 180, "vac_rat": 180, "death_tb": 180, "death_tbtx": 180, "inf_death": 182, "tx_death": 182, "instal": 184, "toolbox": 184, "epidemiologi": 184, "tool": [184, 185], "web": [184, 185], "cohort": 184, "timefram": 184, "stratif": 184, "inexhaust": 184, "emigr": 184, "prohibit": 184, "background": [184, 189], "correpond": 184, "invari": 184, "apart": 184, "harder": 184, "m_rate": [184, 185], "stock": [184, 187], "infx": 184, "placehold": 184, "header": 184, "asset": [184, 185, 186, 187, 188, 189], "t1_framework_1": 184, "workspac": 184, "underdetermin": [184, 187], "trickier": 184, "t1_temp": 184, "lock": 184, "h4": 184, "h5": 184, "subtabl": 184, "t1_databook_1": 184, "00916": 184, "0x7f8882855090": 184, "calibration_spr": 184, "425283": 184, "427849": 184, "0x7f88828a6ed0": 184, "00990": 184, "http": 184, "master": 184, "tip": 184, "simplif": 185, "real": [185, 189], "world": [185, 189], "t2_framework_1": 185, "t2_databook_1": 185, "0184": 185, "overdetermin": [185, 187], "bia": 185, "methodologi": 185, "hint": [185, 186, 188], "decis": 185, "granular": 185, "pro": 185, "review": 185, "season": 185, "rainfal": 185, "offici": 185, "nevertheless": 185, "systemat": 185, "degre": 185, "mixtur": 185, "websit": 185, "p2": 185, "r2": 185, "0143": 185, "overshot": 185, "configur": [185, 189], "p3": 185, "3187028408050538": 185, "r3": 185, "auto": 185, "0122": 185, "coars": 185, "grain": 185, "resist": [185, 188], "minor": 185, "inci": 185, "strong": 185, "m_num": 185, "cal_par": 185, "r4": 185, "danger": 185, "rich": 185, "superfici": 185, "trend": 185, "far": [185, 189], "survei": 185, "inject": 185, "saniti": 185, "consult": 185, "expert": 185, "explain": 185, "overfit": 185, "variat": 185, "fluctat": 185, "priorit": 185, "inaccur": 185, "Be": 185, "unreli": 185, "adequ": 185, "prev": 185, "00001": 185, "immun": 185, "defund": 185, "pathwai": [185, 186, 189], "mother": 185, "investig": 185, "18429981652647248": 185, "3569997845468915": 185, "12602547856385915": 185, "12460832311026757": 185, "depth": 185, "unrealist": 185, "burn": 185, "strang": 185, "settl": 185, "earlier": [185, 189], "t3_framework_1": 186, "t3_databook_1": 186, "t3_temp": 186, "c5": 186, "t3_databook_2": 186, "0134": 186, "inc_adults_to_pri": 186, "didn": 186, "t3_framework_2": 186, "0179": 186, "v2": 186, "assert": 186, "1e": 186, "0542": 186, "0667": 186, "0605": 186, "wash": 186, "t3_temp_2": 186, "undefin": 186, "ordinarili": 186, "t3_framework_3": 186, "t3_databook_3": 186, "0186": 186, "t3_databook_4": 186, "fed": 186, "t3_framework_4": 186, "0208": 186, "verifi": [186, 189], "adult_weight": 186, "pris_weight": 186, "avg": 186, "1475": 186, "0557": 186, "complementari": 186, "tgt_pop_": 186, "src_pop_": 186, "direction": 186, "client": 186, "t3": [187, 190], "conclud": 187, "600": 187, "300": 187, "ever_inf": 187, "prop_resolv": 187, "t4_framework_1": 187, "t4_databook_1": 187, "0189": 187, "t4_framework_2": 187, "t4_databook_2": 187, "0210": 187, "u": [187, 188], "t4_framework_3": 187, "t4_databook_3": 187, "0213": 187, "conflict": 187, "unfortun": 187, "reparametr": 188, "prop_norm": 188, "prop_dr": 188, "t5_framework1": 188, "00494": 188, "inf_dr": 188, "t6_framework_1": 189, "t6_databook_1": 189, "00936": 189, "interchang": 189, "temp": 189, "price": 189, "250": 189, "pset": 189, "t6_progbook_1": 189, "res_program": 189, "00648": 189, "00780": 189, "fewer": 189, "t6_progbook_2": 189, "res_programs_1": 189, "00807": 189, "reconciled_pset": 189, "00690": 189, "01210": 189, "01000": 189, "002100": 189, "01108": 189, "001080": 189, "005102": 189, "004898": 189, "0004000": 189, "004702": 189, "4896": 189, "009600": 189, "0006250": 189, "0002250": 189, "0000000000000000000000000000000007704": 189, "003265": 189, "0001384": 189, "0001108": 189, "00003265": 189, "00002922": 189, "000007935": 189, "6875": 189, "000001956": 189, "000007506": 189, "000001902": 189, "un": 189, "reconciled_cost": 189, "res_programs_2": 189, "00833": 189, "sole": 189, "characteris": 189, "t4": 190, "t5": 190, "t6": 190}, "objects": {"": [[0, 0, 0, "-", "atomica"]], "atomica": [[1, 0, 0, "-", "calibration"], [3, 0, 0, "-", "cascade"], [16, 0, 0, "-", "data"], [18, 0, 0, "-", "demos"], [21, 0, 0, "-", "excel"], [34, 0, 0, "-", "framework"], [38, 0, 0, "-", "function_parser"], [43, 0, 0, "-", "migration"], [51, 0, 0, "-", "model"], [68, 0, 0, "-", "optimization"], [93, 0, 0, "-", "parameters"], [96, 0, 0, "-", "plotting"], [105, 0, 0, "-", "programs"], [110, 0, 0, "-", "project"], [113, 0, 0, "-", "reconciliation"], [115, 0, 0, "-", "results"], [119, 0, 0, "-", "scenarios"], [125, 0, 0, "-", "system"], [129, 0, 0, "-", "utils"], [142, 0, 0, "-", "version"]], "atomica.calibration": [[2, 1, 1, "", "calibrate"]], "atomica.cascade": [[4, 2, 1, "", "CascadeEnsemble"], [5, 6, 1, "", "InvalidCascade"], [6, 1, 1, "", "cascade_summary"], [7, 1, 1, "", "get_cascade_data"], [8, 1, 1, "", "get_cascade_vals"], [9, 1, 1, "", "plot_cascade"], [10, 1, 1, "", "plot_multi_cascade"], [11, 1, 1, "", "plot_single_cascade"], [12, 1, 1, "", "plot_single_cascade_series"], [13, 1, 1, "", "sanitize_cascade"], [14, 1, 1, "", "sanitize_pops"], [15, 1, 1, "", "validate_cascade"]], "atomica.cascade.CascadeEnsemble": [[4, 3, 1, "", "add"], [4, 4, 1, "", "baseline"], [4, 3, 1, "", "boxplot"], [4, 3, 1, "", "get_vals"], [4, 4, 1, "", "mapping_function"], [4, 5, 1, "", "n_samples"], [4, 5, 1, "", "outputs"], [4, 3, 1, "", "plot_bars"], [4, 3, 1, "", "plot_distribution"], [4, 3, 1, "", "plot_multi_cascade"], [4, 3, 1, "", "plot_series"], [4, 5, 1, "", "pops"], [4, 5, 1, "", "results"], [4, 3, 1, "", "run_sims"], [4, 4, 1, "", "samples"], [4, 3, 1, "", "set_baseline"], [4, 5, 1, "", "tvec"], [4, 3, 1, "", "update"]], "atomica.data": [[17, 2, 1, "", "ProjectData"]], "atomica.data.ProjectData": [[17, 3, 1, "", "add_interaction"], [17, 3, 1, "", "add_pop"], [17, 3, 1, "", "add_transfer"], [17, 3, 1, "", "change_tvec"], [17, 5, 1, "", "end_year"], [17, 3, 1, "", "from_spreadsheet"], [17, 3, 1, "", "get_tdve_page"], [17, 3, 1, "", "get_ts"], [17, 4, 1, "", "interpops"], [17, 3, 1, "", "new"], [17, 4, 1, "", "pops"], [17, 3, 1, "", "remove_interaction"], [17, 3, 1, "", "remove_transfer"], [17, 3, 1, "", "rename_pop"], [17, 3, 1, "", "rename_transfer"], [17, 3, 1, "", "save"], [17, 5, 1, "", "start_year"], [17, 4, 1, "", "tdve"], [17, 4, 1, "", "tdve_pages"], [17, 3, 1, "", "to_spreadsheet"], [17, 3, 1, "", "to_workbook"], [17, 4, 1, "", "transfers"], [17, 4, 1, "", "tvec"], [17, 3, 1, "", "validate"]], "atomica.demos": [[19, 1, 1, "", "demo"], [20, 1, 1, "", "make_demo_scenarios"]], "atomica.excel": [[22, 2, 1, "", "TimeDependentConnections"], [23, 2, 1, "", "TimeDependentValuesEntry"], [24, 1, 1, "", "apply_widths"], [25, 1, 1, "", "cell_get_number"], [26, 1, 1, "", "cell_get_string"], [27, 1, 1, "", "copy_sheet"], [28, 1, 1, "", "read_dataframes"], [29, 1, 1, "", "read_tables"], [30, 1, 1, "", "standard_formats"], [31, 1, 1, "", "transfer_comments"], [32, 1, 1, "", "update_widths"], [33, 1, 1, "", "validate_category"]], "atomica.excel.TimeDependentConnections": [[22, 4, 1, "", "assumption_heading"], [22, 4, 1, "", "attributes"], [22, 3, 1, "", "from_tables"], [22, 4, 1, "", "ts_attributes"], [22, 3, 1, "", "write"], [22, 4, 1, "", "write_assumption"], [22, 4, 1, "", "write_uncertainty"], [22, 4, 1, "", "write_units"]], "atomica.excel.TimeDependentValuesEntry": [[23, 4, 1, "", "assumption_heading"], [23, 4, 1, "", "comment"], [23, 3, 1, "", "from_rows"], [23, 5, 1, "", "has_data"], [23, 4, 1, "", "name"], [23, 4, 1, "", "ts_attributes"], [23, 4, 1, "", "tvec"], [23, 3, 1, "", "write"], [23, 4, 1, "", "write_assumption"], [23, 4, 1, "", "write_uncertainty"], [23, 4, 1, "", "write_units"]], "atomica.framework": [[35, 6, 1, "", "InvalidFramework"], [36, 2, 1, "", "ProjectFramework"], [37, 1, 1, "", "generate_framework_doc"]], "atomica.framework.ProjectFramework": [[36, 5, 1, "", "cascades"], [36, 5, 1, "", "characs"], [36, 5, 1, "", "comps"], [36, 4, 1, "", "created"], [36, 3, 1, "", "get_charac"], [36, 3, 1, "", "get_charac_includes"], [36, 3, 1, "", "get_comp"], [36, 3, 1, "", "get_databook_units"], [36, 3, 1, "", "get_interaction"], [36, 3, 1, "", "get_label"], [36, 3, 1, "", "get_par"], [36, 3, 1, "", "get_variable"], [36, 4, 1, "", "gitinfo"], [36, 5, 1, "", "interactions"], [36, 4, 1, "", "modified"], [36, 5, 1, "", "name"], [36, 5, 1, "", "pars"], [36, 5, 1, "", "pop_types"], [36, 3, 1, "", "save"], [36, 4, 1, "", "sheets"], [36, 4, 1, "", "spreadsheet"], [36, 3, 1, "", "to_spreadsheet"], [36, 4, 1, "", "uid"], [36, 4, 1, "", "version"]], "atomica.function_parser": [[39, 1, 1, "", "parse_function"], [40, 1, 1, "", "sdiv"], [41, 1, 1, "", "vector_max"], [42, 1, 1, "", "vector_min"]], "atomica.migration": [[44, 2, 1, "", "Migration"], [45, 1, 1, "", "all_frameworks"], [46, 1, 1, "", "all_progsets"], [47, 1, 1, "", "all_results"], [48, 1, 1, "", "migrate"], [49, 1, 1, "", "migration"], [50, 1, 1, "", "register_migration"]], "atomica.model": [[52, 6, 1, "", "BadInitialization"], [53, 2, 1, "", "Characteristic"], [54, 2, 1, "", "Compartment"], [55, 2, 1, "", "JunctionCompartment"], [56, 2, 1, "", "Link"], [57, 2, 1, "", "Model"], [58, 6, 1, "", "ModelError"], [59, 2, 1, "", "Parameter"], [60, 2, 1, "", "Population"], [61, 2, 1, "", "ResidualJunctionCompartment"], [62, 2, 1, "", "SinkCompartment"], [63, 2, 1, "", "SourceCompartment"], [64, 2, 1, "", "TimedCompartment"], [65, 2, 1, "", "TimedLink"], [66, 2, 1, "", "Variable"], [67, 1, 1, "", "run_model"]], "atomica.model.Characteristic": [[53, 4, 1, "", "id"], [53, 5, 1, "", "name"], [53, 3, 1, "", "plot"], [53, 4, 1, "", "pop"], [53, 3, 1, "", "preallocate"], [53, 3, 1, "", "set_dynamic"], [53, 4, 1, "", "units"], [53, 3, 1, "", "update"]], "atomica.model.Compartment": [[54, 3, 1, "", "connect"], [54, 4, 1, "", "id"], [54, 5, 1, "", "name"], [54, 5, 1, "", "outflow"], [54, 3, 1, "", "plot"], [54, 4, 1, "", "pop"], [54, 3, 1, "", "preallocate"], [54, 3, 1, "", "resolve_outflows"], [54, 3, 1, "", "set_dynamic"], [54, 4, 1, "", "units"], [54, 3, 1, "", "update"]], "atomica.model.JunctionCompartment": [[55, 3, 1, "", "balance"], [55, 3, 1, "", "connect"], [55, 4, 1, "", "duration_group"], [55, 4, 1, "", "id"], [55, 3, 1, "", "initial_flush"], [55, 5, 1, "", "name"], [55, 5, 1, "", "outflow"], [55, 3, 1, "", "plot"], [55, 4, 1, "", "pop"], [55, 3, 1, "", "preallocate"], [55, 3, 1, "", "resolve_outflows"], [55, 3, 1, "", "set_dynamic"], [55, 4, 1, "", "units"], [55, 3, 1, "", "update"]], "atomica.model.Link": [[56, 3, 1, "", "create"], [56, 4, 1, "", "id"], [56, 5, 1, "", "name"], [56, 3, 1, "", "plot"], [56, 4, 1, "", "pop"], [56, 3, 1, "", "preallocate"], [56, 3, 1, "", "set_dynamic"], [56, 4, 1, "", "units"], [56, 3, 1, "", "update"]], "atomica.model.Model": [[57, 3, 1, "", "build"], [57, 4, 1, "", "dt"], [57, 3, 1, "", "flush_junctions"], [57, 3, 1, "", "get_pop"], [57, 3, 1, "", "process"], [57, 3, 1, "", "relink"], [57, 4, 1, "", "t"], [57, 3, 1, "", "unlink"], [57, 3, 1, "", "update_comps"], [57, 3, 1, "", "update_links"], [57, 3, 1, "", "update_pars"]], "atomica.model.Parameter": [[59, 3, 1, "", "constrain"], [59, 4, 1, "", "deps"], [59, 4, 1, "", "derivative"], [59, 4, 1, "", "fcn_str"], [59, 4, 1, "", "id"], [59, 4, 1, "", "limits"], [59, 4, 1, "", "links"], [59, 5, 1, "", "name"], [59, 3, 1, "", "plot"], [59, 4, 1, "", "pop"], [59, 4, 1, "", "pop_aggregation"], [59, 3, 1, "", "preallocate"], [59, 4, 1, "", "scale_factor"], [59, 3, 1, "", "set_dynamic"], [59, 3, 1, "", "set_fcn"], [59, 4, 1, "", "skip_function"], [59, 4, 1, "", "timescale"], [59, 4, 1, "", "units"], [59, 3, 1, "", "update"]], "atomica.model.Population": [[60, 3, 1, "", "build"], [60, 4, 1, "", "charac_lookup"], [60, 4, 1, "", "characs"], [60, 4, 1, "", "comp_lookup"], [60, 4, 1, "", "comps"], [60, 3, 1, "", "get_charac"], [60, 3, 1, "", "get_comp"], [60, 3, 1, "", "get_links"], [60, 3, 1, "", "get_par"], [60, 3, 1, "", "get_variable"], [60, 3, 1, "", "initialize_compartments"], [60, 4, 1, "", "label"], [60, 4, 1, "", "link_lookup"], [60, 4, 1, "", "links"], [60, 4, 1, "", "name"], [60, 4, 1, "", "par_lookup"], [60, 4, 1, "", "pars"], [60, 3, 1, "", "popsize"], [60, 4, 1, "", "type"]], "atomica.model.ResidualJunctionCompartment": [[61, 3, 1, "", "balance"], [61, 3, 1, "", "connect"], [61, 4, 1, "", "duration_group"], [61, 4, 1, "", "id"], [61, 3, 1, "", "initial_flush"], [61, 5, 1, "", "name"], [61, 5, 1, "", "outflow"], [61, 3, 1, "", "plot"], [61, 4, 1, "", "pop"], [61, 3, 1, "", "preallocate"], [61, 3, 1, "", "resolve_outflows"], [61, 3, 1, "", "set_dynamic"], [61, 4, 1, "", "units"], [61, 3, 1, "", "update"]], "atomica.model.SinkCompartment": [[62, 3, 1, "", "connect"], [62, 4, 1, "", "id"], [62, 5, 1, "", "name"], [62, 5, 1, "", "outflow"], [62, 3, 1, "", "plot"], [62, 4, 1, "", "pop"], [62, 3, 1, "", "preallocate"], [62, 3, 1, "", "resolve_outflows"], [62, 3, 1, "", "set_dynamic"], [62, 4, 1, "", "units"], [62, 3, 1, "", "update"]], "atomica.model.SourceCompartment": [[63, 3, 1, "", "connect"], [63, 4, 1, "", "id"], [63, 5, 1, "", "name"], [63, 5, 1, "", "outflow"], [63, 3, 1, "", "plot"], [63, 4, 1, "", "pop"], [63, 3, 1, "", "preallocate"], [63, 3, 1, "", "resolve_outflows"], [63, 3, 1, "", "set_dynamic"], [63, 4, 1, "", "units"], [63, 3, 1, "", "update"]], "atomica.model.TimedCompartment": [[64, 3, 1, "", "connect"], [64, 4, 1, "", "flush_link"], [64, 4, 1, "", "id"], [64, 5, 1, "", "name"], [64, 5, 1, "", "outflow"], [64, 4, 1, "", "parameter"], [64, 3, 1, "", "plot"], [64, 4, 1, "", "pop"], [64, 3, 1, "", "preallocate"], [64, 3, 1, "", "resolve_outflows"], [64, 3, 1, "", "set_dynamic"], [64, 4, 1, "", "units"], [64, 3, 1, "", "update"], [64, 5, 1, "", "vals"]], "atomica.model.TimedLink": [[65, 3, 1, "", "create"], [65, 4, 1, "", "id"], [65, 5, 1, "", "name"], [65, 3, 1, "", "plot"], [65, 4, 1, "", "pop"], [65, 3, 1, "", "preallocate"], [65, 3, 1, "", "set_dynamic"], [65, 4, 1, "", "units"], [65, 3, 1, "", "update"], [65, 5, 1, "", "vals"]], "atomica.model.Variable": [[66, 4, 1, "", "id"], [66, 5, 1, "", "name"], [66, 3, 1, "", "plot"], [66, 4, 1, "", "pop"], [66, 3, 1, "", "preallocate"], [66, 3, 1, "", "set_dynamic"], [66, 4, 1, "", "units"], [66, 3, 1, "", "update"]], "atomica.optimization": [[69, 2, 1, "", "Adjustable"], [70, 2, 1, "", "Adjustment"], [71, 2, 1, "", "AtLeastMeasurable"], [72, 2, 1, "", "AtMostMeasurable"], [73, 2, 1, "", "Constraint"], [74, 2, 1, "", "DecreaseByMeasurable"], [75, 2, 1, "", "ExponentialSpendingAdjustment"], [76, 6, 1, "", "FailedConstraint"], [77, 2, 1, "", "IncreaseByMeasurable"], [78, 6, 1, "", "InvalidInitialConditions"], [79, 2, 1, "", "MaximizeCascadeConversionRate"], [80, 2, 1, "", "MaximizeCascadeStage"], [81, 2, 1, "", "MaximizeMeasurable"], [82, 2, 1, "", "Measurable"], [83, 2, 1, "", "MinimizeMeasurable"], [84, 2, 1, "", "Optimization"], [85, 2, 1, "", "PairedLinearSpendingAdjustment"], [86, 2, 1, "", "SpendingAdjustment"], [87, 2, 1, "", "SpendingPackageAdjustment"], [88, 2, 1, "", "StartTimeAdjustment"], [89, 2, 1, "", "TotalSpendConstraint"], [90, 6, 1, "", "UnresolvableConstraint"], [91, 1, 1, "", "constrain_sum_bounded"], [92, 1, 1, "", "optimize"]], "atomica.optimization.Adjustable": [[69, 3, 1, "", "get_hard_bounds"]], "atomica.optimization.Adjustment": [[70, 4, 1, "", "adjustables"], [70, 3, 1, "", "get_initialization"]], "atomica.optimization.AtLeastMeasurable": [[71, 3, 1, "", "get_baseline"], [71, 3, 1, "", "get_objective_val"]], "atomica.optimization.AtMostMeasurable": [[72, 3, 1, "", "get_baseline"], [72, 3, 1, "", "get_objective_val"]], "atomica.optimization.Constraint": [[73, 3, 1, "", "constrain_instructions"], [73, 3, 1, "", "get_hard_constraint"]], "atomica.optimization.DecreaseByMeasurable": [[74, 3, 1, "", "get_baseline"], [74, 3, 1, "", "get_objective_val"]], "atomica.optimization.ExponentialSpendingAdjustment": [[75, 4, 1, "", "adjustables"], [75, 3, 1, "", "get_initialization"]], "atomica.optimization.IncreaseByMeasurable": [[77, 3, 1, "", "get_baseline"], [77, 3, 1, "", "get_objective_val"]], "atomica.optimization.MaximizeCascadeConversionRate": [[79, 3, 1, "", "get_baseline"], [79, 3, 1, "", "get_objective_val"]], "atomica.optimization.MaximizeCascadeStage": [[80, 3, 1, "", "get_baseline"], [80, 3, 1, "", "get_objective_val"]], "atomica.optimization.MaximizeMeasurable": [[81, 3, 1, "", "get_baseline"], [81, 3, 1, "", "get_objective_val"]], "atomica.optimization.Measurable": [[82, 3, 1, "", "get_baseline"], [82, 3, 1, "", "get_objective_val"]], "atomica.optimization.MinimizeMeasurable": [[83, 3, 1, "", "get_baseline"], [83, 3, 1, "", "get_objective_val"]], "atomica.optimization.Optimization": [[84, 3, 1, "", "compute_objective"], [84, 3, 1, "", "constrain_instructions"], [84, 3, 1, "", "get_adjustment"], [84, 3, 1, "", "get_baselines"], [84, 3, 1, "", "get_hard_constraints"], [84, 3, 1, "", "get_initialization"], [84, 4, 1, "", "maxiters"], [84, 4, 1, "", "maxtime"], [84, 4, 1, "", "method"], [84, 3, 1, "", "update_instructions"]], "atomica.optimization.PairedLinearSpendingAdjustment": [[85, 4, 1, "", "adjustables"], [85, 3, 1, "", "get_initialization"]], "atomica.optimization.SpendingAdjustment": [[86, 4, 1, "", "adjustables"], [86, 3, 1, "", "get_initialization"]], "atomica.optimization.SpendingPackageAdjustment": [[87, 5, 1, "", "adjust_total_spend"], [87, 4, 1, "", "adjustables"], [87, 3, 1, "", "get_initialization"]], "atomica.optimization.StartTimeAdjustment": [[88, 4, 1, "", "adjustables"], [88, 3, 1, "", "get_initialization"]], "atomica.optimization.TotalSpendConstraint": [[89, 3, 1, "", "constrain_instructions"], [89, 3, 1, "", "get_hard_constraint"]], "atomica.parameters": [[94, 2, 1, "", "Parameter"], [95, 2, 1, "", "ParameterSet"]], "atomica.parameters.Parameter": [[94, 3, 1, "", "has_values"], [94, 3, 1, "", "interpolate"], [94, 5, 1, "", "pops"], [94, 3, 1, "", "sample"], [94, 3, 1, "", "smooth"]], "atomica.parameters.ParameterSet": [[95, 3, 1, "", "all_pars"], [95, 3, 1, "", "calibration_spreadsheet"], [95, 3, 1, "", "get_par"], [95, 3, 1, "", "load_calibration"], [95, 3, 1, "", "sample"], [95, 3, 1, "", "save_calibration"], [95, 5, 1, "", "y_factors"]], "atomica.plotting": [[97, 2, 1, "", "PlotData"], [98, 2, 1, "", "Series"], [99, 1, 1, "", "plot_bars"], [100, 1, 1, "", "plot_legend"], [101, 1, 1, "", "plot_series"], [102, 1, 1, "", "relabel_legend"], [103, 1, 1, "", "reorder_legend"], [104, 1, 1, "", "save_figs"]], "atomica.plotting.PlotData": [[97, 3, 1, "", "__getitem__"], [97, 3, 1, "", "accumulate"], [97, 3, 1, "", "interpolate"], [97, 3, 1, "", "programs"], [97, 3, 1, "", "set_colors"], [97, 3, 1, "", "time_aggregate"], [97, 3, 1, "", "tvals"]], "atomica.plotting.Series": [[98, 4, 1, "", "data_label"], [98, 4, 1, "", "data_pop"], [98, 3, 1, "", "interpolate"], [98, 4, 1, "", "timescale"], [98, 5, 1, "", "unit_string"], [98, 4, 1, "", "units"]], "atomica.programs": [[106, 2, 1, "", "Covout"], [107, 2, 1, "", "Program"], [108, 2, 1, "", "ProgramInstructions"], [109, 2, 1, "", "ProgramSet"]], "atomica.programs.Covout": [[106, 3, 1, "", "compute_impact_interaction"], [106, 3, 1, "", "get_outcome"], [106, 5, 1, "", "n_progs"], [106, 3, 1, "", "sample"], [106, 3, 1, "", "update_outcomes"]], "atomica.programs.Program": [[107, 4, 1, "", "baseline_spend"], [107, 4, 1, "", "capacity_constraint"], [107, 4, 1, "", "coverage"], [107, 3, 1, "", "get_capacity"], [107, 3, 1, "", "get_prop_covered"], [107, 3, 1, "", "get_spend"], [107, 5, 1, "", "is_one_off"], [107, 4, 1, "", "label"], [107, 4, 1, "", "name"], [107, 3, 1, "", "sample"], [107, 4, 1, "", "saturation"], [107, 4, 1, "", "spend_data"], [107, 4, 1, "", "target_comps"], [107, 4, 1, "", "target_pops"], [107, 4, 1, "", "unit_cost"]], "atomica.programs.ProgramInstructions": [[108, 3, 1, "", "scale_alloc"]], "atomica.programs.ProgramSet": [[109, 3, 1, "", "add_comp"], [109, 3, 1, "", "add_par"], [109, 3, 1, "", "add_pop"], [109, 3, 1, "", "add_program"], [109, 3, 1, "", "from_spreadsheet"], [109, 3, 1, "", "get_alloc"], [109, 3, 1, "", "get_capacities"], [109, 3, 1, "", "get_outcomes"], [109, 3, 1, "", "get_prop_coverage"], [109, 3, 1, "", "new"], [109, 3, 1, "", "remove_comp"], [109, 3, 1, "", "remove_par"], [109, 3, 1, "", "remove_pop"], [109, 3, 1, "", "remove_program"], [109, 3, 1, "", "sample"], [109, 3, 1, "", "to_spreadsheet"], [109, 3, 1, "", "to_workbook"], [109, 3, 1, "", "validate"]], "atomica.project": [[111, 2, 1, "", "Project"], [112, 2, 1, "", "ProjectSettings"]], "atomica.project.Project": [[111, 3, 1, "", "calibrate"], [111, 3, 1, "", "create_databook"], [111, 3, 1, "", "load"], [111, 3, 1, "", "load_databook"], [111, 3, 1, "", "load_progbook"], [111, 3, 1, "", "make_parset"], [111, 3, 1, "", "make_progbook"], [111, 3, 1, "", "make_scenario"], [111, 3, 1, "", "optim"], [111, 3, 1, "", "parset"], [111, 4, 1, "", "parsets"], [111, 3, 1, "", "progset"], [111, 3, 1, "", "result"], [111, 3, 1, "", "run_optimization"], [111, 3, 1, "", "run_sampled_sims"], [111, 3, 1, "", "run_scenarios"], [111, 3, 1, "", "run_sim"], [111, 3, 1, "", "save"], [111, 3, 1, "", "scen"], [111, 3, 1, "", "update_settings"]], "atomica.project.ProjectSettings": [[112, 5, 1, "", "tvec"], [112, 3, 1, "", "update_time_vector"]], "atomica.reconciliation": [[114, 1, 1, "", "reconcile"]], "atomica.results": [[116, 2, 1, "", "Ensemble"], [117, 2, 1, "", "Result"], [118, 1, 1, "", "export_results"]], "atomica.results.Ensemble": [[116, 3, 1, "", "add"], [116, 4, 1, "", "baseline"], [116, 3, 1, "", "boxplot"], [116, 4, 1, "", "mapping_function"], [116, 5, 1, "", "n_samples"], [116, 5, 1, "", "outputs"], [116, 3, 1, "", "plot_bars"], [116, 3, 1, "", "plot_distribution"], [116, 3, 1, "", "plot_series"], [116, 5, 1, "", "pops"], [116, 5, 1, "", "results"], [116, 3, 1, "", "run_sims"], [116, 4, 1, "", "samples"], [116, 3, 1, "", "set_baseline"], [116, 5, 1, "", "tvec"], [116, 3, 1, "", "update"]], "atomica.results.Result": [[117, 3, 1, "", "charac_names"], [117, 3, 1, "", "check_for_nans"], [117, 3, 1, "", "comp_names"], [117, 5, 1, "", "dt"], [117, 3, 1, "", "export_raw"], [117, 5, 1, "", "framework"], [117, 3, 1, "", "get_alloc"], [117, 3, 1, "", "get_coverage"], [117, 3, 1, "", "get_equivalent_alloc"], [117, 3, 1, "", "get_variable"], [117, 3, 1, "", "link_names"], [117, 3, 1, "", "par_names"], [117, 3, 1, "", "plot"], [117, 5, 1, "", "pop_labels"], [117, 5, 1, "", "t"], [117, 5, 1, "", "used_programs"]], "atomica.scenarios": [[120, 2, 1, "", "BudgetScenario"], [121, 2, 1, "", "CombinedScenario"], [122, 2, 1, "", "CoverageScenario"], [123, 2, 1, "", "ParameterScenario"], [124, 2, 1, "", "Scenario"]], "atomica.scenarios.BudgetScenario": [[120, 4, 1, "", "active"], [120, 3, 1, "", "get_instructions"], [120, 3, 1, "", "get_parset"], [120, 3, 1, "", "get_progset"], [120, 4, 1, "", "parsetname"], [120, 4, 1, "", "progsetname"], [120, 3, 1, "", "run"]], "atomica.scenarios.CombinedScenario": [[121, 4, 1, "", "active"], [121, 3, 1, "", "get_instructions"], [121, 3, 1, "", "get_parset"], [121, 3, 1, "", "get_progset"], [121, 4, 1, "", "interpolation"], [121, 4, 1, "", "parsetname"], [121, 4, 1, "", "progsetname"], [121, 3, 1, "", "run"], [121, 4, 1, "", "scenario_values"]], "atomica.scenarios.CoverageScenario": [[122, 4, 1, "", "active"], [122, 3, 1, "", "get_instructions"], [122, 3, 1, "", "get_parset"], [122, 3, 1, "", "get_progset"], [122, 4, 1, "", "parsetname"], [122, 4, 1, "", "progsetname"], [122, 3, 1, "", "run"]], "atomica.scenarios.ParameterScenario": [[123, 4, 1, "", "active"], [123, 3, 1, "", "add"], [123, 3, 1, "", "get_instructions"], [123, 3, 1, "", "get_parset"], [123, 3, 1, "", "get_progset"], [123, 4, 1, "", "interpolation"], [123, 4, 1, "", "parsetname"], [123, 4, 1, "", "progsetname"], [123, 3, 1, "", "run"], [123, 4, 1, "", "scenario_values"]], "atomica.scenarios.Scenario": [[124, 4, 1, "", "active"], [124, 3, 1, "", "get_instructions"], [124, 3, 1, "", "get_parset"], [124, 3, 1, "", "get_progset"], [124, 4, 1, "", "parsetname"], [124, 4, 1, "", "progsetname"], [124, 3, 1, "", "run"]], "atomica.system": [[126, 2, 1, "", "FrameworkSettings"], [127, 6, 1, "", "NotFoundError"], [128, 1, 1, "", "atomica_path"]], "atomica.utils": [[130, 2, 1, "", "NDict"], [131, 2, 1, "", "NamedItem"], [132, 2, 1, "", "Quiet"], [133, 2, 1, "", "TimeSeries"], [134, 1, 1, "", "datetime_to_year"], [135, 1, 1, "", "evaluate_plot_string"], [136, 1, 1, "", "format_duration"], [137, 1, 1, "", "nested_loop"], [138, 1, 1, "", "parallel_progress"], [139, 1, 1, "", "parent_dir"], [140, 1, 1, "", "start_logging"], [141, 1, 1, "", "stop_logging"]], "atomica.utils.NDict": [[130, 3, 1, "", "__add__"], [130, 3, 1, "", "append"], [130, 3, 1, "", "clear"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "dict_items"], [130, 3, 1, "", "dict_keys"], [130, 3, 1, "", "dict_values"], [130, 3, 1, "", "disp"], [130, 3, 1, "", "enumitems"], [130, 3, 1, "", "enumkeys"], [130, 3, 1, "", "enumvals"], [130, 3, 1, "", "enumvalues"], [130, 3, 1, "", "export"], [130, 3, 1, "", "filter"], [130, 3, 1, "", "filtervals"], [130, 3, 1, "", "findbykey"], [130, 3, 1, "", "findbyval"], [130, 3, 1, "", "findkeys"], [130, 3, 1, "", "fromeach"], [130, 3, 1, "", "fromkeys"], [130, 3, 1, "", "get"], [130, 3, 1, "", "getnested"], [130, 3, 1, "", "index"], [130, 3, 1, "", "insert"], [130, 3, 1, "", "items"], [130, 3, 1, "", "iteritems"], [130, 3, 1, "", "iternested"], [130, 3, 1, "", "keys"], [130, 3, 1, "", "make"], [130, 3, 1, "", "makefrom"], [130, 3, 1, "", "makenested"], [130, 3, 1, "", "map"], [130, 3, 1, "", "pop"], [130, 3, 1, "", "popitem"], [130, 3, 1, "", "promote"], [130, 3, 1, "", "remove"], [130, 3, 1, "", "rename"], [130, 3, 1, "", "reverse"], [130, 3, 1, "", "reversed"], [130, 3, 1, "", "setdefault"], [130, 3, 1, "", "setitem"], [130, 3, 1, "", "setnested"], [130, 3, 1, "", "sort"], [130, 3, 1, "", "sorted"], [130, 3, 1, "", "toeach"], [130, 3, 1, "", "update"], [130, 3, 1, "", "valind"], [130, 3, 1, "", "values"]], "atomica.utils.TimeSeries": [[133, 4, 1, "", "assumption"], [133, 3, 1, "", "copy"], [133, 3, 1, "", "get"], [133, 3, 1, "", "get_arrays"], [133, 5, 1, "", "has_data"], [133, 5, 1, "", "has_time_data"], [133, 3, 1, "", "insert"], [133, 3, 1, "", "interpolate"], [133, 3, 1, "", "remove"], [133, 3, 1, "", "remove_after"], [133, 3, 1, "", "remove_before"], [133, 3, 1, "", "remove_between"], [133, 3, 1, "", "sample"], [133, 4, 1, "", "sigma"], [133, 4, 1, "", "t"], [133, 4, 1, "", "units"], [133, 4, 1, "", "vals"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"atomica": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150], "calibr": [1, 2, 143, 185], "cascad": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 152, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183], "cascadeensembl": 4, "invalidcascad": 5, "cascade_summari": 6, "get_cascade_data": 7, "get_cascade_v": 8, "plot_cascad": 9, "plot_multi_cascad": 10, "plot_single_cascad": 11, "plot_single_cascade_seri": 12, "sanitize_cascad": 13, "sanitize_pop": 14, "validate_cascad": 15, "data": [16, 17, 144, 149, 153, 164], "projectdata": 17, "demo": [18, 19, 20], "make_demo_scenario": 20, "excel": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "timedependentconnect": [22, 153], "timedependentvaluesentri": [23, 153], "apply_width": 24, "cell_get_numb": 25, "cell_get_str": 26, "copy_sheet": 27, "read_datafram": 28, "read_tabl": 29, "standard_format": 30, "transfer_com": 31, "update_width": 32, "validate_categori": 33, "framework": [34, 35, 36, 37, 144, 163], "invalidframework": 35, "projectframework": [36, 144], "generate_framework_doc": 37, "function_pars": [38, 39, 40, 41, 42], "parse_funct": 39, "sdiv": 40, "vector_max": 41, "vector_min": 42, "migrat": [43, 44, 45, 46, 47, 48, 49, 50], "all_framework": 45, "all_progset": 46, "all_result": 47, "register_migr": 50, "model": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 143, 145, 146, 150, 165, 175, 177, 178, 179, 181, 182, 183, 184], "badiniti": 52, "characterist": [53, 145, 156, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 187], "compart": [54, 145, 156, 160, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183], "junctioncompart": 55, "link": [56, 145, 171, 172, 176], "modelerror": 58, "paramet": [59, 93, 94, 95, 143, 145, 148, 149, 151, 160, 164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183], "popul": [60, 145, 153, 155, 163, 168, 169, 172, 174, 178, 180, 186], "residualjunctioncompart": 61, "sinkcompart": 62, "sourcecompart": 63, "timedcompart": 64, "timedlink": 65, "variabl": [66, 153], "run_model": 67, "optim": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 143, 159], "adjust": [69, 70, 159], "atleastmeasur": 71, "atmostmeasur": 72, "constraint": [73, 159], "decreasebymeasur": 74, "exponentialspendingadjust": 75, "failedconstraint": 76, "increasebymeasur": 77, "invalidinitialcondit": 78, "maximizecascadeconversionr": 79, "maximizecascadestag": 80, "maximizemeasur": 81, "measur": [82, 159], "minimizemeasur": 83, "pairedlinearspendingadjust": 85, "spendingadjust": 86, "spendingpackageadjust": 87, "starttimeadjust": 88, "totalspendconstraint": 89, "unresolvableconstraint": 90, "constrain_sum_bound": 91, "parameterset": [95, 151], "plot": [96, 97, 98, 99, 100, 101, 102, 103, 104, 146, 147, 148, 149, 152, 163, 178], "plotdata": [97, 147], "seri": [98, 149], "plot_bar": 99, "plot_legend": 100, "plot_seri": 101, "relabel_legend": 102, "reorder_legend": 103, "save_fig": 104, "program": [105, 106, 107, 108, 109, 143, 147, 148, 163, 164, 174, 189], "covout": 106, "programinstruct": 108, "programset": 109, "project": [110, 111, 112, 143], "projectset": 112, "reconcili": [113, 114, 143, 189], "reconcil": 114, "result": [115, 116, 117, 118, 146, 152], "ensembl": [116, 152], "export_result": 118, "scenario": [119, 120, 121, 122, 123, 124, 143, 151], "budgetscenario": 120, "combinedscenario": 121, "coveragescenario": 122, "parameterscenario": [123, 151], "system": [125, 126, 127, 128, 149, 156, 164], "frameworkset": 126, "notfounderror": 127, "atomica_path": 128, "util": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "ndict": 130, "nameditem": 131, "quiet": 132, "timeseri": [133, 153], "datetime_to_year": 134, "evaluate_plot_str": 135, "format_dur": 136, "nested_loop": 137, "parallel_progress": 138, "parent_dir": 139, "start_log": 140, "stop_log": 141, "version": 142, "basic": [143, 144, 152, 166], "workflow": 143, "start": [143, 151], "an": [143, 159], "applic": 143, "creat": [143, 147, 153], "manual": 143, "automat": 143, "ad": [143, 144, 153], "budget": 143, "coverag": [143, 147, 155, 164, 174], "access": [144, 146], "export": [144, 146], "make": [144, 149], "new": [144, 149, 155, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183], "valid": 144, "input": [144, 152], "quantiti": 144, "conveni": 144, "method": 144, "iter": 144, "over": [144, 178], "item": 144, "implement": [145, 159, 166], "object": [145, 153], "structur": [145, 159, 164], "build": 145, "integr": 145, "unlink": 145, "pre": [146, 153], "specifi": [146, 152], "raw": 146, "valu": [146, 149, 156, 160], "travers": 146, "graph": [146, 149], "from": [147, 178], "spend": [147, 159], "bar": [147, 149], "select": 147, "time": [147, 149, 156, 166, 169, 171, 172, 173, 174, 179, 180], "aggreg": [147, 149], "output": [147, 158], "unit": [148, 149, 164], "convers": 148, "document": 149, "quick": 149, "refer": 149, "just": 149, "give": 149, "me": 149, "faq": 149, "manipul": 149, "gener": [149, 161, 184], "issu": 149, "legend": 149, "design": 149, "prepar": 149, "function": [149, 151, 160], "axi": 149, "flow": [149, 150], "rate": [149, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183], "disaggreg": [149, 178], "overrid": [149, 155], "stack": 149, "transit": [149, 166], "set": 149, "full": [149, 178], "name": 149, "further": [149, 153, 176], "format": 149, "modul": 149, "level": 149, "separ": 149, "accumul": 149, "save": 149, "figur": 149, "neg": [149, 156, 178], "horizont": 149, "label": 149, "work": 149, "control": [149, 169, 173, 174], "order": 149, "relabel": 149, "entri": 149, "option": 149, "color": 149, "colour": 149, "pattern": 149, "probabl": [150, 168, 176, 177, 178], "rescal": 150, "geometr": 150, "v": [150, 159], "exponenti": 150, "distribut": [150, 152], "durat": [150, 160, 166, 177, 178], "preserv": 150, "annual": [150, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183], "conclus": 150, "us": [151, 166], "class": [151, 159], "year": [151, 153, 171, 172, 173, 174, 177, 178, 179, 180], "end": 151, "smooth": [151, 160], "step": 151, "chang": [151, 153, 158], "interpol": [151, 160], "prior": 151, "inspect": 151, "modifi": [151, 153], "overwrit": [151, 155], "uncertainti": 152, "sampl": 152, "analysi": 152, "compar": 152, "differ": 152, "between": 152, "virtual": 152, "stage": 152, "memori": 152, "limit": 152, "environ": 152, "paral": 152, "experiment": 152, "databook": [153, 163, 184], "tabl": 153, "blank": 153, "remov": 153, "add": [153, 155], "transfer": [153, 164, 166, 186], "interact": [153, 164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186], "spreadsheet": 153, "modif": 153, "exampl": [154, 159, 162], "calcul": 155, "type": [155, 160, 163, 189], "initi": [156, 166, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183], "problem": 156, "solut": 156, "size": [156, 168, 169, 172, 174, 178, 180], "underdetermin": 156, "inconsist": 156, "overdetermin": 156, "resolv": 156, "weight": [156, 178], "comput": [156, 164], "arbitrari": 156, "contextu": 157, "overview": [157, 162, 164], "log": 158, "cookbook": 158, "amount": 158, "dump": 158, "file": 158, "perform": [159, 160], "specif": 159, "total": [159, 177], "maxim": 159, "peopl": [159, 169, 173, 174, 176, 177, 178, 181, 182, 183], "aliv": 159, "minim": 159, "death": [159, 169, 172, 174, 177, 178, 180, 182], "call": 159, "preced": 160, "consider": 160, "timescal": 160, "deriv": 160, "maximum": 160, "content": [161, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183], "junction": [162, 166, 178, 188], "1": 162, "scale": 162, "up": [162, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183], "normal": [162, 166], "2": [162, 178], "residu": 162, "3": 162, "down": 162, "4": 162, "run": 163, "simul": [163, 178], "capac": 164, "number": [164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183], "cover": 164, "outcom": [164, 176, 178], "impact": 164, "target": [164, 174], "stochast": 165, "motiv": 166, "case": [166, 168, 169, 174, 176, 178, 180], "group": 166, "architectur": 166, "cervic": 168, "cancer": 168, "sourc": [168, 169, 172, 174, 176, 178, 180], "without": [168, 171, 176], "undiagnos": [168, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183], "screen": [168, 169, 173, 174, 178, 183, 189], "diagnos": [168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183], "treat": [168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183], "dead": [168, 169, 172, 174, 176, 177, 180, 182], "other": [168, 169, 172, 174, 180], "estim": [168, 169, 172, 174, 178, 180], "women": 168, "who": [168, 169, 176], "have": [168, 178], "ever": [168, 171, 172, 177], "been": [168, 178], "being": 168, "birth": [168, 169, 172, 174, 178, 180, 182], "acquisit": [168, 169, 172, 174, 180], "yield": [168, 169, 172, 174, 179, 180], "posit": [168, 169, 172, 174, 178, 179, 180], "sensit": [168, 169, 172, 179, 180], "confirm": 168, "follow": [168, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183], "newli": [168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183], "onto": [168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183], "treatment": [168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 189], "mortal": [168, 169, 172, 174, 176, 180], "those": [168, 169, 170, 172, 174, 176, 180], "untreat": [168, 172, 174, 178, 180, 182], "diabet": 169, "suscept": [169, 172, 177, 178, 180], "unawar": [169, 176], "uncompl": 169, "vascular": 169, "damag": 169, "success": [169, 176, 178, 179, 180], "failur": [169, 171, 172, 173, 174, 179, 180], "all": [169, 170, 171, 172, 173, 174, 176, 181, 182, 183], "t2dm": 169, "hba1c": 169, "proport": [169, 170, 176, 177, 178], "befor": 169, "progress": [169, 178], "among": [169, 176], "diagnosi": [169, 170, 171, 173, 178, 181, 182, 183, 189], "experienc": [169, 178], "ar": [169, 176, 178], "offer": [169, 176], "support": [169, 176], "background": [169, 172, 174, 176, 180], "care": [169, 171, 172, 174, 179, 180], "current": [170, 171, 172, 173, 174, 181, 182, 183], "lost": [170, 171, 172, 178, 179, 180, 181, 182, 183], "hiv": [171, 172], "dynam": [171, 172, 174, 180, 182], "viral": [171, 172], "suppress": [171, 172], "comp": [171, 172, 179, 180], "plhiv": [171, 172], "awar": [171, 172, 176], "statu": [171, 172, 178], "averag": [171, 172, 177, 178], "taken": [171, 172], "loss": [171, 172, 173, 174, 178, 179, 180, 181, 182, 183], "after": [171, 172, 173, 174, 179, 180], "art": [171, 172], "achiev": [171, 172, 173, 174], "main": [171, 173, 176, 177, 183], "aid": 172, "infect": [172, 177, 178], "test": [172, 179, 180, 189], "done": [172, 179, 180], "unsuppress": 172, "hypertens": [173, 174], "condit": [173, 174, 181, 182, 183], "blood": [173, 174], "pressur": [173, 174], "bp": [173, 174], "No": 174, "share": 174, "librari": 175, "servic": 176, "modal": 176, "own": 176, "need": [176, 178], "provid": 176, "receiv": 176, "becom": 176, "sir": 177, "recov": [177, 178], "entiti": 177, "preval": [177, 178], "risk": 177, "transmiss": 177, "per": 177, "contact": [177, 178], "forc": [177, 178], "tb": [178, 179, 180], "vaccin": [178, 180, 189], "earli": 178, "latent": 178, "late": 178, "restrict": 178, "smear": 178, "activ": 178, "strain": 178, "sp": 178, "d": 178, "mdr": 178, "xdr": 178, "sn": 178, "complet": 178, "origin": 178, "immigr": 178, "sink": 178, "cumul": 178, "non": 178, "emigr": 178, "suspect": 178, "known": 178, "live": 178, "develop": 178, "md": 178, "dr": 178, "ltbi": 178, "previou": 178, "suffici": 178, "versu": 178, "previous": 178, "vulner": 178, "factor": 178, "rel": 178, "infecti": 178, "depart": 178, "administ": 178, "through": 178, "mass": 178, "trace": 178, "cours": 178, "until": 178, "abandon": 178, "latenc": 178, "departur": 178, "impart": 178, "reinfect": 178, "relaps": 178, "recoveri": [178, 180], "notif": 178, "requir": 178, "re": 178, "fail": 178, "escal": 178, "natur": [178, 180], "disutil": 178, "yld": 178, "life": 178, "remain": 178, "yll": 178, "dali": 178, "prefer": 178, "one": 178, "anoth": 178, "inc": 178, "relat": 178, "includ": 178, "simpl": [179, 180], "notifi": [179, 180], "successfulli": [179, 180], "burden": [179, 180], "In": [179, 180], "unsuccessfulli": 180, "udt": [181, 182], "usdt": 183, "t1": 184, "defin": 184, "exercis": [184, 186, 188, 189], "t2": 185, "tip": 185, "t3": 186, "multipl": 186, "t4": 187, "t5": 188, "t6": 189, "common": 189, "intervent": 189, "confirmatori": 189, "One": 189, "off": 189, "sustain": 189, "tutori": 190}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"atomica.cascade.plot_single_cascade_series": [[12, "atomica-cascade-plot-single-cascade-series"]], "atomica.excel.read_dataframes": [[28, "atomica-excel-read-dataframes"]], "atomica.cascade.validate_cascade": [[15, "atomica-cascade-validate-cascade"]], "atomica.calibration": [[1, "module-atomica.calibration"]], "atomica.cascade.get_cascade_vals": [[8, "atomica-cascade-get-cascade-vals"]], "atomica.cascade.plot_single_cascade": [[11, "atomica-cascade-plot-single-cascade"]], "atomica.excel.cell_get_string": [[26, "atomica-excel-cell-get-string"]], "atomica.cascade": [[3, "module-atomica.cascade"]], "atomica.excel": [[21, "module-atomica.excel"]], "atomica.demos.demo": [[19, "atomica-demos-demo"]], "atomica.excel.copy_sheet": [[27, "atomica-excel-copy-sheet"]], "atomica.data": [[16, "module-atomica.data"]], "atomica.calibration.calibrate": [[2, "atomica-calibration-calibrate"]], "atomica.demos.make_demo_scenarios": [[20, "atomica-demos-make-demo-scenarios"]], "atomica.excel.cell_get_number": [[25, "atomica-excel-cell-get-number"]], "atomica.excel.read_tables": [[29, "atomica-excel-read-tables"]], "atomica.cascade.get_cascade_data": [[7, "atomica-cascade-get-cascade-data"]], "atomica.cascade.cascade_summary": [[6, "atomica-cascade-cascade-summary"]], "atomica.demos": [[18, "module-atomica.demos"]], "atomica.excel.TimeDependentConnections": [[22, "atomica-excel-timedependentconnections"]], "atomica.cascade.plot_cascade": [[9, "atomica-cascade-plot-cascade"]], "atomica.excel.TimeDependentValuesEntry": [[23, "atomica-excel-timedependentvaluesentry"]], "atomica.cascade.InvalidCascade": [[5, "atomica-cascade-invalidcascade"]], "atomica.excel.apply_widths": [[24, "atomica-excel-apply-widths"]], "atomica.cascade.plot_multi_cascade": [[10, "atomica-cascade-plot-multi-cascade"]], "atomica.cascade.sanitize_pops": [[14, "atomica-cascade-sanitize-pops"]], "atomica.cascade.sanitize_cascade": [[13, "atomica-cascade-sanitize-cascade"]], "atomica.cascade.CascadeEnsemble": [[4, "atomica-cascade-cascadeensemble"]], "atomica": [[0, "module-atomica"]], "atomica.data.ProjectData": [[17, "atomica-data-projectdata"]], "atomica.excel.transfer_comments": [[31, "atomica-excel-transfer-comments"]], "atomica.function_parser": [[38, "module-atomica.function_parser"]], "atomica.migration.all_results": [[47, "atomica-migration-all-results"]], "atomica.migration.all_frameworks": [[45, "atomica-migration-all-frameworks"]], "atomica.model": [[51, "module-atomica.model"]], "atomica.model.Characteristic": [[53, "atomica-model-characteristic"]], "atomica.migration.Migration": [[44, "atomica-migration-migration"]], "atomica.migration.all_progsets": [[46, "atomica-migration-all-progsets"]], "atomica.model.BadInitialization": [[52, "atomica-model-badinitialization"]], "atomica.model.ModelError": [[58, "atomica-model-modelerror"]], "atomica.framework": [[34, "module-atomica.framework"]], "atomica.model.Parameter": [[59, "atomica-model-parameter"]], "atomica.excel.update_widths": [[32, "atomica-excel-update-widths"]], "atomica.migration": [[43, "module-atomica.migration"]], "atomica.migration.register_migration": [[50, "atomica-migration-register-migration"]], "atomica.framework.ProjectFramework": [[36, "atomica-framework-projectframework"]], "atomica.model.Link": [[56, "atomica-model-link"]], "atomica.migration.migrate": [[48, "atomica-migration-migrate"]], "atomica.function_parser.vector_min": [[42, "atomica-function-parser-vector-min"]], "atomica.function_parser.vector_max": [[41, "atomica-function-parser-vector-max"]], "atomica.model.Compartment": [[54, "atomica-model-compartment"]], "atomica.excel.validate_category": [[33, "atomica-excel-validate-category"]], "atomica.framework.InvalidFramework": [[35, "atomica-framework-invalidframework"]], "atomica.model.JunctionCompartment": [[55, "atomica-model-junctioncompartment"]], "atomica.framework.generate_framework_doc": [[37, "atomica-framework-generate-framework-doc"]], "atomica.excel.standard_formats": [[30, "atomica-excel-standard-formats"]], "atomica.migration.migration": [[49, "atomica-migration-migration"]], "atomica.function_parser.sdiv": [[40, "atomica-function-parser-sdiv"]], "atomica.function_parser.parse_function": [[39, "atomica-function-parser-parse-function"]], "atomica.model.Model": [[57, "atomica-model-model"]], "T6 - Programs": [[189, "T6---Programs"]], "Reconciliation": [[189, "Reconciliation"], [143, "Reconciliation"]], "Common intervention types": [[189, "Common-intervention-types"]], "Vaccines": [[189, "Vaccines"]], "Diagnosis screening program": [[189, "Diagnosis-screening-program"]], "Diagnosis": [[189, "Diagnosis"]], "Screening with confirmatory test": [[189, "Screening-with-confirmatory-test"]], "One-off treatment": [[189, "One-off-treatment"]], "Sustained treatment": [[189, "Sustained-treatment"]], "Exercise": [[189, "Exercise"], [184, "Exercise"], [188, "Exercise"]], "UDT model": [[181, "udt-model"]], "Contents": [[181, "contents"], [183, "contents"], [182, "contents"], [180, "contents"], [172, "contents"], [173, "contents"], [168, "contents"], [179, "contents"], [178, "contents"], [169, "contents"], [177, "contents"], [174, "contents"], [170, "contents"], [176, "contents"], [171, "contents"]], "Compartments": [[181, "compartments"], [183, "compartments"], [182, "compartments"], [180, "compartments"], [172, "compartments"], [173, "compartments"], [168, "compartments"], [179, "compartments"], [178, "compartments"], [169, "compartments"], [177, "compartments"], [174, "compartments"], [170, "compartments"], [176, "compartments"], [171, "compartments"]], "Compartment: Undiagnosed": [[181, "compartment-undiagnosed"], [183, "compartment-undiagnosed"], [182, "compartment-undiagnosed"], [180, "compartment-undiagnosed"], [172, "compartment-undiagnosed"], [173, "compartment-undiagnosed"], [168, "compartment-undiagnosed"], [179, "compartment-undiagnosed"], [174, "compartment-undiagnosed"], [171, "compartment-undiagnosed"]], "Compartment: Diagnosed": [[181, "compartment-diagnosed"], [183, "compartment-diagnosed"], [182, "compartment-diagnosed"], [180, "compartment-diagnosed"], [172, "compartment-diagnosed"], [173, "compartment-diagnosed"], [168, "compartment-diagnosed"], [179, "compartment-diagnosed"], [171, "compartment-diagnosed"]], "Compartment: Treated": [[181, "compartment-treated"], [183, "compartment-treated"], [182, "compartment-treated"], [172, "compartment-treated"], [173, "compartment-treated"], [168, "compartment-treated"], [170, "compartment-treated"], [171, "compartment-treated"]], "Characteristics": [[181, "characteristics"], [183, "characteristics"], [182, "characteristics"], [180, "characteristics"], [172, "characteristics"], [173, "characteristics"], [168, "characteristics"], [179, "characteristics"], [178, "characteristics"], [169, "characteristics"], [177, "characteristics"], [174, "characteristics"], [170, "characteristics"], [176, "characteristics"], [171, "characteristics"]], "Characteristic: All people with condition": [[181, "characteristic-all-people-with-condition"], [183, "characteristic-all-people-with-condition"], [182, "characteristic-all-people-with-condition"], [173, "characteristic-all-people-with-condition"], [174, "characteristic-all-people-with-condition"]], "Characteristic: Diagnosed people": [[181, "characteristic-diagnosed-people"], [183, "characteristic-diagnosed-people"], [182, "characteristic-diagnosed-people"], [173, "characteristic-diagnosed-people"], [174, "characteristic-diagnosed-people"]], "Characteristic: Currently treated": [[181, "characteristic-currently-treated"], [183, "characteristic-currently-treated"], [182, "characteristic-currently-treated"], [172, "characteristic-currently-treated"], [173, "characteristic-currently-treated"], [174, "characteristic-currently-treated"], [170, "characteristic-currently-treated"], [171, "characteristic-currently-treated"]], "Parameters": [[181, "parameters"], [183, "parameters"], [182, "parameters"], [180, "parameters"], [172, "parameters"], [173, "parameters"], [168, "parameters"], [160, "parameters"], [179, "parameters"], [178, "parameters"], [169, "parameters"], [177, "parameters"], [174, "parameters"], [170, "parameters"], [176, "parameters"], [171, "parameters"], [148, "Parameters"]], "Parameter: Annual number of new diagnoses": [[181, "parameter-annual-number-of-new-diagnoses"], [183, "parameter-annual-number-of-new-diagnoses"], [182, "parameter-annual-number-of-new-diagnoses"], [173, "parameter-annual-number-of-new-diagnoses"], [168, "parameter-annual-number-of-new-diagnoses"], [169, "parameter-annual-number-of-new-diagnoses"], [174, "parameter-annual-number-of-new-diagnoses"], [171, "parameter-annual-number-of-new-diagnoses"]], "Parameter: Diagnosis rate": [[181, "parameter-diagnosis-rate"], [183, "parameter-diagnosis-rate"], [182, "parameter-diagnosis-rate"], [173, "parameter-diagnosis-rate"], [171, "parameter-diagnosis-rate"]], "Parameter: Annual number newly initiated onto treatment": [[181, "parameter-annual-number-newly-initiated-onto-treatment"], [183, "parameter-annual-number-newly-initiated-onto-treatment"], [182, "parameter-annual-number-newly-initiated-onto-treatment"], [180, "parameter-annual-number-newly-initiated-onto-treatment"], [172, "parameter-annual-number-newly-initiated-onto-treatment"], [173, "parameter-annual-number-newly-initiated-onto-treatment"], [168, "parameter-annual-number-newly-initiated-onto-treatment"], [179, "parameter-annual-number-newly-initiated-onto-treatment"], [169, "parameter-annual-number-newly-initiated-onto-treatment"], [174, "parameter-annual-number-newly-initiated-onto-treatment"], [170, "parameter-annual-number-newly-initiated-onto-treatment"], [171, "parameter-annual-number-newly-initiated-onto-treatment"]], "Parameter: Initiation rate": [[181, "parameter-initiation-rate"], [183, "parameter-initiation-rate"], [182, "parameter-initiation-rate"], [180, "parameter-initiation-rate"], [172, "parameter-initiation-rate"], [173, "parameter-initiation-rate"], [168, "parameter-initiation-rate"], [179, "parameter-initiation-rate"], [169, "parameter-initiation-rate"], [171, "parameter-initiation-rate"]], "Parameter: Annual number lost to follow-up": [[181, "parameter-annual-number-lost-to-follow-up"], [183, "parameter-annual-number-lost-to-follow-up"], [182, "parameter-annual-number-lost-to-follow-up"], [170, "parameter-annual-number-lost-to-follow-up"]], "Parameter: Loss-to-follow-up rate": [[181, "parameter-loss-to-follow-up-rate"], [183, "parameter-loss-to-follow-up-rate"], [182, "parameter-loss-to-follow-up-rate"], [180, "parameter-loss-to-follow-up-rate"], [172, "parameter-loss-to-follow-up-rate"], [173, "parameter-loss-to-follow-up-rate"], [179, "parameter-loss-to-follow-up-rate"], [174, "parameter-loss-to-follow-up-rate"], [171, "parameter-loss-to-follow-up-rate"]], "Interactions": [[181, "interactions"], [183, "interactions"], [186, "Interactions"], [182, "interactions"], [180, "interactions"], [172, "interactions"], [173, "interactions"], [168, "interactions"], [179, "interactions"], [178, "interactions"], [169, "interactions"], [177, "interactions"], [174, "interactions"], [170, "interactions"], [176, "interactions"], [171, "interactions"]], "Cascades": [[181, "cascades"], [183, "cascades"], [182, "cascades"], [180, "cascades"], [172, "cascades"], [173, "cascades"], [168, "cascades"], [179, "cascades"], [178, "cascades"], [169, "cascades"], [177, "cascades"], [174, "cascades"], [170, "cascades"], [176, "cascades"], [171, "cascades"]], "Cascade: Cascade": [[181, "cascade-cascade"], [182, "cascade-cascade"], [170, "cascade-cascade"]], "USDT model": [[183, "usdt-model"]], "Compartment: Screened": [[183, "compartment-screened"], [173, "compartment-screened"], [168, "compartment-screened"]], "Characteristic: Screened people": [[183, "characteristic-screened-people"], [173, "characteristic-screened-people"], [174, "characteristic-screened-people"]], "Parameter: Annual number screened": [[183, "parameter-annual-number-screened"], [173, "parameter-annual-number-screened"], [168, "parameter-annual-number-screened"], [169, "parameter-annual-number-screened"], [174, "parameter-annual-number-screened"]], "Parameter: Screening rate": [[183, "parameter-screening-rate"], [173, "parameter-screening-rate"]], "Cascade: main": [[183, "cascade-main"], [173, "cascade-main"], [177, "cascade-main"], [176, "cascade-main"], [171, "cascade-main"]], "T4 - Characteristics": [[187, "T4---Characteristics"]], "T2 - Calibration": [[185, "T2---Calibration"]], "Calibration tips": [[185, "Calibration-tips"]], "T1 - Defining a model": [[184, "T1---Defining-a-model"]], "Generating a databook": [[184, "Generating-a-databook"]], "Tutorials": [[190, "tutorials"]], "T3 - Multiple populations": [[186, "T3---Multiple-populations"]], "Transfers": [[186, "Transfers"], [166, "transfers"]], "Exercises": [[186, "Exercises"]], "T5 - Junctions": [[188, "T5---Junctions"]], "UDT model with dynamics": [[182, "udt-model-with-dynamics"]], "Compartment: Births": [[182, "compartment-births"]], "Compartment: dead": [[182, "compartment-dead"]], "Parameter: Birth rate": [[182, "parameter-birth-rate"]], "Parameter: Untreated death rate": [[182, "parameter-untreated-death-rate"]], "Parameter: Treated death rate": [[182, "parameter-treated-death-rate"]], "TB simple with dynamics": [[180, "tb-simple-with-dynamics"]], "Compartment: Source": [[180, "compartment-source"], [172, "compartment-source"], [168, "compartment-source"], [169, "compartment-source"], [174, "compartment-source"], [176, "compartment-source"]], "Compartment: Susceptible": [[180, "compartment-susceptible"], [172, "compartment-susceptible"], [178, "compartment-susceptible"], [169, "compartment-susceptible"], [177, "compartment-susceptible"]], "Compartment: Vaccinated": [[180, "compartment-vaccinated"], [178, "compartment-vaccinated"]], "Compartment: Notified and treated": [[180, "compartment-notified-and-treated"], [179, "compartment-notified-and-treated"]], "Compartment: Lost to follow-up": [[180, "compartment-lost-to-follow-up"], [172, "compartment-lost-to-follow-up"], [179, "compartment-lost-to-follow-up"], [171, "compartment-lost-to-follow-up"]], "Compartment: Successfully treated (comp)": [[180, "compartment-successfully-treated-comp"], [179, "compartment-successfully-treated-comp"]], "Compartment: Dead (TB)": [[180, "compartment-dead-tb"]], "Compartment: Dead (other)": [[180, "compartment-dead-other"], [172, "compartment-dead-other"], [168, "compartment-dead-other"], [169, "compartment-dead-other"], [174, "compartment-dead-other"]], "Characteristic: Population size": [[180, "characteristic-population-size"], [172, "characteristic-population-size"], [168, "characteristic-population-size"], [178, "characteristic-population-size"], [169, "characteristic-population-size"], [174, "characteristic-population-size"]], "Characteristic: TB burden": [[180, "characteristic-tb-burden"], [179, "characteristic-tb-burden"]], "Characteristic: Notified": [[180, "characteristic-notified"], [179, "characteristic-notified"]], "Characteristic: In care": [[180, "characteristic-in-care"], [179, "characteristic-in-care"]], "Characteristic: Treated": [[180, "characteristic-treated"], [179, "characteristic-treated"]], "Characteristic: Successfully treated": [[180, "characteristic-successfully-treated"], [179, "characteristic-successfully-treated"]], "Parameter: Annual number of births": [[180, "parameter-annual-number-of-births"], [172, "parameter-annual-number-of-births"], [168, "parameter-annual-number-of-births"], [169, "parameter-annual-number-of-births"], [174, "parameter-annual-number-of-births"]], "Parameter: Estimated number of new TB cases annually": [[180, "parameter-estimated-number-of-new-tb-cases-annually"]], "Parameter: Acquisition rate": [[180, "parameter-acquisition-rate"], [172, "parameter-acquisition-rate"], [168, "parameter-acquisition-rate"], [169, "parameter-acquisition-rate"], [174, "parameter-acquisition-rate"]], "Parameter: Natural recovery rate": [[180, "parameter-natural-recovery-rate"]], "Parameter: Annual number vaccinated": [[180, "parameter-annual-number-vaccinated"]], "Parameter: Vaccination rate": [[180, "parameter-vaccination-rate"]], "Parameter: Annual number of tests done": [[180, "parameter-annual-number-of-tests-done"], [172, "parameter-annual-number-of-tests-done"], [179, "parameter-annual-number-of-tests-done"]], "Parameter: Test yield": [[180, "parameter-test-yield"], [172, "parameter-test-yield"], [179, "parameter-test-yield"]], "Parameter: Annual number tested positive": [[180, "parameter-annual-number-tested-positive"], [172, "parameter-annual-number-tested-positive"], [179, "parameter-annual-number-tested-positive"]], "Parameter: Test sensitivity": [[180, "parameter-test-sensitivity"], [172, "parameter-test-sensitivity"], [179, "parameter-test-sensitivity"]], "Parameter: Time after initiating treatment to treatment success (years)": [[180, "parameter-time-after-initiating-treatment-to-treatment-success-years"], [179, "parameter-time-after-initiating-treatment-to-treatment-success-years"]], "Parameter: Treatment failure rate": [[180, "parameter-treatment-failure-rate"], [172, "parameter-treatment-failure-rate"], [173, "parameter-treatment-failure-rate"], [179, "parameter-treatment-failure-rate"], [169, "parameter-treatment-failure-rate"], [174, "parameter-treatment-failure-rate"], [171, "parameter-treatment-failure-rate"]], "Parameter: Death rate for those with untreated TB": [[180, "parameter-death-rate-for-those-with-untreated-tb"]], "Parameter: Death rate for those unsuccessfully treated": [[180, "parameter-death-rate-for-those-unsuccessfully-treated"]], "Parameter: Death rate for those successfully treated": [[180, "parameter-death-rate-for-those-successfully-treated"]], "Parameter: Background mortality rate": [[180, "parameter-background-mortality-rate"], [172, "parameter-background-mortality-rate"], [169, "parameter-background-mortality-rate"], [174, "parameter-background-mortality-rate"], [176, "parameter-background-mortality-rate"]], "Cascade: TB care cascade": [[180, "cascade-tb-care-cascade"], [179, "cascade-tb-care-cascade"]], "HIV with dynamics": [[172, "hiv-with-dynamics"]], "Compartment: Linked to care": [[172, "compartment-linked-to-care"], [171, "compartment-linked-to-care"]], "Compartment: Virally suppressed (comp)": [[172, "compartment-virally-suppressed-comp"], [171, "compartment-virally-suppressed-comp"]], "Compartment: Dead (HIV/AIDS)": [[172, "compartment-dead-hiv-aids"]], "Characteristic: All PLHIV": [[172, "characteristic-all-plhiv"], [171, "characteristic-all-plhiv"]], "Characteristic: Aware of their status": [[172, "characteristic-aware-of-their-status"], [171, "characteristic-aware-of-their-status"]], "Characteristic: Ever in care": [[172, "characteristic-ever-in-care"], [171, "characteristic-ever-in-care"]], "Characteristic: Currently in care": [[172, "characteristic-currently-in-care"], [171, "characteristic-currently-in-care"]], "Characteristic: Virally suppressed": [[172, "characteristic-virally-suppressed"], [171, "characteristic-virally-suppressed"]], "Parameter: Estimated number of new HIV infections annually": [[172, "parameter-estimated-number-of-new-hiv-infections-annually"]], "Parameter: Average time taken to be linked to care (years)": [[172, "parameter-average-time-taken-to-be-linked-to-care-years"], [171, "parameter-average-time-taken-to-be-linked-to-care-years"]], "Parameter: Time after initiating ART to achieve viral suppression (years)": [[172, "parameter-time-after-initiating-art-to-achieve-viral-suppression-years"], [171, "parameter-time-after-initiating-art-to-achieve-viral-suppression-years"]], "Parameter: Death rate for those with untreated HIV": [[172, "parameter-death-rate-for-those-with-untreated-hiv"]], "Parameter: Death rate for those with on unsuppressive ART": [[172, "parameter-death-rate-for-those-with-on-unsuppressive-art"]], "Parameter: Death rate for those with on suppressive ART": [[172, "parameter-death-rate-for-those-with-on-suppressive-art"]], "Cascade: HIV care cascade": [[172, "cascade-hiv-care-cascade"]], "Scenarios": [[151, "Scenarios"], [143, "Scenarios"]], "Parameter scenarios": [[151, "Parameter-scenarios"], [143, "Parameter-scenarios"]], "Using the ParameterScenario class": [[151, "Using-the-ParameterScenario-class"]], "Scenario start year": [[151, "Scenario-start-year"]], "Scenario end year": [[151, "Scenario-end-year"]], "Smoothing": [[151, "Smoothing"]], "Step changes": [[151, "Step-changes"]], "Parameter interpolation prior to the start year": [[151, "Parameter-interpolation-prior-to-the-start-year"]], "Inspecting the ParameterSet": [[151, "Inspecting-the-ParameterSet"]], "Modifying a ParameterSet": [[151, "Modifying-a-ParameterSet"]], "Overwriting function parameters": [[151, "Overwriting-function-parameters"]], "Data and Databooks": [[153, "Data-and-Databooks"]], "TimeSeries objects": [[153, "TimeSeries-objects"]], "Population table": [[153, "Population-table"]], "TimeDependentConnections": [[153, "TimeDependentConnections"]], "TimeDependentValuesEntry": [[153, "TimeDependentValuesEntry"]], "Modifying databooks": [[153, "Modifying-databooks"]], "Creating a blank databook": [[153, "Creating-a-blank-databook"]], "Pre-populating data": [[153, "Pre-populating-data"]], "Adding a variable": [[153, "Adding-a-variable"]], "Removing a variable": [[153, "Removing-a-variable"]], "Add/remove populations": [[153, "Add/remove-populations"]], "Add/remove transfers and interactions": [[153, "Add/remove-transfers-and-interactions"]], "Changing databook years": [[153, "Changing-databook-years"]], "Further spreadsheet modification": [[153, "Further-spreadsheet-modification"]], "Hypertension": [[173, "hypertension"]], "Compartment: Controlled": [[173, "compartment-controlled"], [174, "compartment-controlled"]], "Characteristic: Blood pressure controlled": [[173, "characteristic-blood-pressure-controlled"], [174, "characteristic-blood-pressure-controlled"]], "Parameter: Time after initiating treatment to achieve BP control (years)": [[173, "parameter-time-after-initiating-treatment-to-achieve-bp-control-years"], [174, "parameter-time-after-initiating-treatment-to-achieve-bp-control-years"]], "Junction overview": [[162, "junction-overview"]], "Example 1 - scale up, normal junction": [[162, "id1"]], "Example 2 - scale up, residual junction": [[162, "id2"]], "Example 3 - scale down, normal junction": [[162, "id3"]], "Example 4 - scale down, residual junction": [[162, "id4"]], "Optimization": [[159, "optimization"], [143, "Optimization"]], "Optimization class": [[159, "optimization-class"]], "Performing an optimization": [[159, "performing-an-optimization"]], "Adjustments": [[159, "adjustments"]], "Implementation specifics": [[159, "implementation-specifics"], [159, "id1"]], "Constraints": [[159, "constraints"]], "Total spending constraint": [[159, "total-spending-constraint"]], "Measurables": [[159, "measurables"]], "Measurables vs. constraints": [[159, "measurables-vs-constraints"]], "Optimization examples": [[159, "optimization-examples"]], "Maximize people alive": [[159, "maximize-people-alive"]], "Minimize deaths": [[159, "minimize-deaths"]], "Minimize spending": [[159, "minimize-spending"]], "Optimization calling structure": [[159, "optimization-calling-structure"]], "Logging cookbook": [[158, "logging-cookbook"]], "Changing the amount of output": [[158, "changing-the-amount-of-output"]], "Dumping output to a log file": [[158, "dumping-output-to-a-log-file"]], "Stochastic models": [[165, "stochastic-models"]], "Cervical cancer": [[168, "cervical-cancer"]], "Compartment: Without cervical cancer": [[168, "compartment-without-cervical-cancer"]], "Compartment: Dead (cervical cancer)": [[168, "compartment-dead-cervical-cancer"]], "Characteristic: Estimated number of women with cervical cancer": [[168, "characteristic-estimated-number-of-women-with-cervical-cancer"]], "Characteristic: Estimated number of women with cervical cancer who have ever been screened": [[168, "characteristic-estimated-number-of-women-with-cervical-cancer-who-have-ever-been-screened"]], "Characteristic: Estimated number of women with cervical cancer who have ever been diagnosed": [[168, "characteristic-estimated-number-of-women-with-cervical-cancer-who-have-ever-been-diagnosed"]], "Characteristic: Estimated number of women being treated for cervical cancer": [[168, "characteristic-estimated-number-of-women-being-treated-for-cervical-cancer"]], "Parameter: Estimated number of new cervical cancer cases annually": [[168, "parameter-estimated-number-of-new-cervical-cancer-cases-annually"]], "Parameter: Screening yield": [[168, "parameter-screening-yield"], [174, "parameter-screening-yield"]], "Parameter: Annual number screened positive": [[168, "parameter-annual-number-screened-positive"], [169, "parameter-annual-number-screened-positive"], [174, "parameter-annual-number-screened-positive"]], "Parameter: Screening sensitivity": [[168, "parameter-screening-sensitivity"], [169, "parameter-screening-sensitivity"]], "Parameter: Probability of a positive confirmation following screening": [[168, "parameter-probability-of-a-positive-confirmation-following-screening"]], "Parameter: Mortality rate": [[168, "parameter-mortality-rate"]], "Parameter: Mortality rate for those with untreated cervical cancer": [[168, "parameter-mortality-rate-for-those-with-untreated-cervical-cancer"]], "Cascade: Cervical cancer cascade": [[168, "cascade-cervical-cancer-cascade"]], "Probability rescaling": [[150, "Probability-rescaling"]], "Geometric vs Exponential distribution for durations": [[150, "Geometric-vs-Exponential-distribution-for-durations"]], "Preserving durations vs preserving annual flows": [[150, "Preserving-durations-vs-preserving-annual-flows"]], "Atomica models": [[150, "Atomica-models"]], "Conclusions": [[150, "Conclusions"]], "Model library": [[175, "model-library"]], "Types of parameter": [[160, "types-of-parameter"]], "Functions": [[160, "functions"]], "Value precedence": [[160, "value-precedence"]], "Performance considerations": [[160, "performance-considerations"]], "Timescales": [[160, "timescales"]], "Derivatives": [[160, "derivatives"]], "Interpolation and smoothing": [[160, "interpolation-and-smoothing"]], "Maximum compartment duration": [[160, "maximum-compartment-duration"]], "TB simple model": [[179, "tb-simple-model"]], "Initializing compartments": [[156, "initializing-compartments"]], "Characteristics to Compartments": [[156, "characteristics-to-compartments"]], "Problems and solutions": [[156, "problems-and-solutions"]], "Negative initial compartment sizes": [[156, "negative-initial-compartment-sizes"]], "Underdetermined system": [[156, "underdetermined-system"]], "Inconsistent system": [[156, "inconsistent-system"]], "Inconsistent overdetermined system": [[156, "inconsistent-overdetermined-system"]], "Resolving inconsistencies - initialization weight": [[156, "resolving-inconsistencies-initialization-weight"]], "Computing initial values at arbitrary times": [[156, "computing-initial-values-at-arbitrary-times"]], "Program System": [[164, "program-system"]], "Data and structural overview": [[164, "data-and-structural-overview"]], "Coverage computation": [[164, "coverage-computation"]], "Capacity": [[164, "capacity"]], "Coverage": [[164, "coverage"]], "Number covered": [[164, "number-covered"]], "Outcome computation": [[164, "outcome-computation"]], "Coverage interaction": [[164, "coverage-interaction"]], "Impact interactions": [[164, "impact-interactions"]], "Parameters in Number units": [[164, "parameters-in-number-units"]], "Targeting transfers": [[164, "targeting-transfers"]], "TB full model": [[178, "tb-full-model"]], "Compartment: Initialization population size": [[178, "compartment-initialization-population-size"]], "Compartment: Early latent untreated (diagnosable)": [[178, "compartment-early-latent-untreated-diagnosable"]], "Compartment: Early latent on treatment": [[178, "compartment-early-latent-on-treatment"]], "Compartment: Junction: Latent early treatment outcome": [[178, "compartment-junction-latent-early-treatment-outcome"]], "Compartment: Late latent untreated (diagnosable)": [[178, "compartment-late-latent-untreated-diagnosable"]], "Compartment: Late latent on treatment": [[178, "compartment-late-latent-on-treatment"]], "Compartment: Junction: Latent late treatment outcome": [[178, "compartment-junction-latent-late-treatment-outcome"]], "Compartment: Susceptible (diagnosis restricted)": [[178, "compartment-susceptible-diagnosis-restricted"]], "Compartment: Early latent untreated (diagnosis restricted)": [[178, "compartment-early-latent-untreated-diagnosis-restricted"]], "Compartment: Late latent untreated (diagnosis restricted)": [[178, "compartment-late-latent-untreated-diagnosis-restricted"]], "Compartment: Junction: Smear disaggregator for new active": [[178, "compartment-junction-smear-disaggregator-for-new-active"]], "Compartment: Junction: Strain disaggregator for new smear positive": [[178, "compartment-junction-strain-disaggregator-for-new-smear-positive"]], "Compartment: SP-DS undiagnosed": [[178, "compartment-sp-ds-undiagnosed"]], "Compartment: SP-DS diagnosed but not on treatment": [[178, "compartment-sp-ds-diagnosed-but-not-on-treatment"]], "Compartment: SP-DS on treatment": [[178, "compartment-sp-ds-on-treatment"]], "Compartment: Junction: SP-DS treatment outcome": [[178, "compartment-junction-sp-ds-treatment-outcome"]], "Compartment: SP-MDR undiagnosed": [[178, "compartment-sp-mdr-undiagnosed"]], "Compartment: SP-MDR diagnosed but not on treatment": [[178, "compartment-sp-mdr-diagnosed-but-not-on-treatment"]], "Compartment: SP-MDR on treatment": [[178, "compartment-sp-mdr-on-treatment"]], "Compartment: Junction: SP-MDR treatment outcome": [[178, "compartment-junction-sp-mdr-treatment-outcome"]], "Compartment: SP-XDR undiagnosed": [[178, "compartment-sp-xdr-undiagnosed"]], "Compartment: SP-XDR diagnosed but not on treatment": [[178, "compartment-sp-xdr-diagnosed-but-not-on-treatment"]], "Compartment: SP-XDR on treatment": [[178, "compartment-sp-xdr-on-treatment"]], "Compartment: Junction: SP-XDR treatment outcome": [[178, "compartment-junction-sp-xdr-treatment-outcome"]], "Compartment: Junction: Strain disaggregator for new smear negative": [[178, "compartment-junction-strain-disaggregator-for-new-smear-negative"]], "Compartment: SN-DS undiagnosed": [[178, "compartment-sn-ds-undiagnosed"]], "Compartment: SN-DS diagnosed but not on treatment": [[178, "compartment-sn-ds-diagnosed-but-not-on-treatment"]], "Compartment: SN-DS on treatment": [[178, "compartment-sn-ds-on-treatment"]], "Compartment: Junction: SN-DS treatment outcome": [[178, "compartment-junction-sn-ds-treatment-outcome"]], "Compartment: SN-MDR undiagnosed": [[178, "compartment-sn-mdr-undiagnosed"]], "Compartment: SN-MDR diagnosed but not on treatment": [[178, "compartment-sn-mdr-diagnosed-but-not-on-treatment"]], "Compartment: SN-MDR on treatment": [[178, "compartment-sn-mdr-on-treatment"]], "Compartment: Junction: SN-MDR treatment outcome": [[178, "compartment-junction-sn-mdr-treatment-outcome"]], "Compartment: SN-XDR undiagnosed": [[178, "compartment-sn-xdr-undiagnosed"]], "Compartment: SN-XDR diagnosed but not on treatment": [[178, "compartment-sn-xdr-diagnosed-but-not-on-treatment"]], "Compartment: SN-XDR on treatment": [[178, "compartment-sn-xdr-on-treatment"]], "Compartment: Junction: SN-XDR treatment outcome": [[178, "compartment-junction-sn-xdr-treatment-outcome"]], "Compartment: Completed treatment (active)": [[178, "compartment-completed-treatment-active"]], "Compartment: Source: Origin of births": [[178, "compartment-source-origin-of-births"]], "Compartment: Source: Origin of immigration": [[178, "compartment-source-origin-of-immigration"]], "Compartment: Junction: Infection status of immigrants": [[178, "compartment-junction-infection-status-of-immigrants"]], "Compartment: Sink: Cumulative TB deaths over simulation": [[178, "compartment-sink-cumulative-tb-deaths-over-simulation"]], "Compartment: Sink: Cumulative non-TB deaths over simulation": [[178, "compartment-sink-cumulative-non-tb-deaths-over-simulation"]], "Compartment: Sink: Cumulative emigration over simulation": [[178, "compartment-sink-cumulative-emigration-over-simulation"]], "Characteristic: Latent TB infections on treatment": [[178, "characteristic-latent-tb-infections-on-treatment"]], "Characteristic: Suspected diagnosis restricted latent infections": [[178, "characteristic-suspected-diagnosis-restricted-latent-infections"]], "Characteristic: Suspected undiagnosed latent infections": [[178, "characteristic-suspected-undiagnosed-latent-infections"]], "Characteristic: Suspected early latent infections": [[178, "characteristic-suspected-early-latent-infections"]], "Characteristic: Suspected late latent infections": [[178, "characteristic-suspected-late-latent-infections"]], "Characteristic: Suspected latent infections": [[178, "characteristic-suspected-latent-infections"]], "Characteristic: Known SP-DS infections": [[178, "characteristic-known-sp-ds-infections"]], "Characteristic: Known SP-MDR infections": [[178, "characteristic-known-sp-mdr-infections"]], "Characteristic: Known SP-XDR infections": [[178, "characteristic-known-sp-xdr-infections"]], "Characteristic: Known SN-DS infections": [[178, "characteristic-known-sn-ds-infections"]], "Characteristic: Known SN-MDR infections": [[178, "characteristic-known-sn-mdr-infections"]], "Characteristic: Known SN-XDR infections": [[178, "characteristic-known-sn-xdr-infections"]], "Characteristic: Known active TB infections": [[178, "characteristic-known-active-tb-infections"]], "Characteristic: Diagnosed number of living people that developed active TB": [[178, "characteristic-diagnosed-number-of-living-people-that-developed-active-tb"]], "Characteristic: Suspected SP-DS infections": [[178, "characteristic-suspected-sp-ds-infections"]], "Characteristic: Suspected SP-MD infections": [[178, "characteristic-suspected-sp-md-infections"]], "Characteristic: Suspected SP-XDR infections": [[178, "characteristic-suspected-sp-xdr-infections"]], "Characteristic: Suspected SN-DS infections": [[178, "characteristic-suspected-sn-ds-infections"]], "Characteristic: Suspected SN-MDR infections": [[178, "characteristic-suspected-sn-mdr-infections"]], "Characteristic: Suspected SN-XDR infections": [[178, "characteristic-suspected-sn-xdr-infections"]], "Characteristic: Suspected SP infections": [[178, "characteristic-suspected-sp-infections"]], "Characteristic: Suspected SN infections": [[178, "characteristic-suspected-sn-infections"]], "Characteristic: Estimated number of people with DS TB": [[178, "characteristic-estimated-number-of-people-with-ds-tb"]], "Characteristic: Estimated number of people with MDR TB": [[178, "characteristic-estimated-number-of-people-with-mdr-tb"]], "Characteristic: Estimated number of people with XDR TB": [[178, "characteristic-estimated-number-of-people-with-xdr-tb"]], "Characteristic: Estimated number of people with DR TB": [[178, "characteristic-estimated-number-of-people-with-dr-tb"]], "Characteristic: Estimated number of people with active TB": [[178, "characteristic-estimated-number-of-people-with-active-tb"]], "Characteristic: Estimated number of living people that developed active TB": [[178, "characteristic-estimated-number-of-living-people-that-developed-active-tb"]], "Characteristic: Suspected untreated SP-DS infections": [[178, "characteristic-suspected-untreated-sp-ds-infections"]], "Characteristic: Suspected untreated SP-MDR infections": [[178, "characteristic-suspected-untreated-sp-mdr-infections"]], "Characteristic: Suspected untreated SP-XDR infections": [[178, "characteristic-suspected-untreated-sp-xdr-infections"]], "Characteristic: Suspected untreated SN-DS infections": [[178, "characteristic-suspected-untreated-sn-ds-infections"]], "Characteristic: Suspected untreated SN-MDR infections": [[178, "characteristic-suspected-untreated-sn-mdr-infections"]], "Characteristic: Suspected untreated SN-XDR infections": [[178, "characteristic-suspected-untreated-sn-xdr-infections"]], "Characteristic: Suspected untreated SP-DS prevalence": [[178, "characteristic-suspected-untreated-sp-ds-prevalence"]], "Characteristic: Suspected untreated SP-MDR prevalence": [[178, "characteristic-suspected-untreated-sp-mdr-prevalence"]], "Characteristic: Suspected untreated SP-XDR prevalence": [[178, "characteristic-suspected-untreated-sp-xdr-prevalence"]], "Characteristic: Suspected untreated SN-DS prevalence": [[178, "characteristic-suspected-untreated-sn-ds-prevalence"]], "Characteristic: Suspected untreated SN-MDR prevalence": [[178, "characteristic-suspected-untreated-sn-mdr-prevalence"]], "Characteristic: Suspected untreated SN-XDR prevalence": [[178, "characteristic-suspected-untreated-sn-xdr-prevalence"]], "Characteristic: Suspected LTBI prevalence": [[178, "characteristic-suspected-ltbi-prevalence"]], "Characteristic: Suspected SP-DS prevalence": [[178, "characteristic-suspected-sp-ds-prevalence"]], "Characteristic: Suspected SP-MDR prevalence": [[178, "characteristic-suspected-sp-mdr-prevalence"]], "Characteristic: Suspected SP-XDR prevalence": [[178, "characteristic-suspected-sp-xdr-prevalence"]], "Characteristic: Suspected SN-DS prevalence": [[178, "characteristic-suspected-sn-ds-prevalence"]], "Characteristic: Suspected SN-MDR prevalence": [[178, "characteristic-suspected-sn-mdr-prevalence"]], "Characteristic: Suspected SN-XDR prevalence": [[178, "characteristic-suspected-sn-xdr-prevalence"]], "Characteristic: Suspected SP prevalence": [[178, "characteristic-suspected-sp-prevalence"]], "Characteristic: Suspected SN prevalence": [[178, "characteristic-suspected-sn-prevalence"]], "Characteristic: Suspected DS prevalence": [[178, "characteristic-suspected-ds-prevalence"]], "Characteristic: Suspected DR prevalence": [[178, "characteristic-suspected-dr-prevalence"]], "Characteristic: Suspected MDR prevalence": [[178, "characteristic-suspected-mdr-prevalence"]], "Characteristic: Suspected XDR prevalence": [[178, "characteristic-suspected-xdr-prevalence"]], "Characteristic: Suspected active TB prevalence": [[178, "characteristic-suspected-active-tb-prevalence"]], "Characteristic: Suspected undiagnosed DS infections": [[178, "characteristic-suspected-undiagnosed-ds-infections"]], "Characteristic: Suspected undiagnosed MDR infections": [[178, "characteristic-suspected-undiagnosed-mdr-infections"]], "Characteristic: Suspected undiagnosed XDR infections": [[178, "characteristic-suspected-undiagnosed-xdr-infections"]], "Characteristic: Diagnosed DS infections": [[178, "characteristic-diagnosed-ds-infections"]], "Characteristic: Diagnosed MDR infections": [[178, "characteristic-diagnosed-mdr-infections"]], "Characteristic: Diagnosed XDR infections": [[178, "characteristic-diagnosed-xdr-infections"]], "Characteristic: DS cases on treatment": [[178, "characteristic-ds-cases-on-treatment"]], "Characteristic: MDR cases on treatment": [[178, "characteristic-mdr-cases-on-treatment"]], "Characteristic: XDR cases on treatment": [[178, "characteristic-xdr-cases-on-treatment"]], "Characteristic: Active TB cases on treatment": [[178, "characteristic-active-tb-cases-on-treatment"]], "Characteristic: Number of living people that have recovered from active TB in the previous 2 years": [[178, "characteristic-number-of-living-people-that-have-recovered-from-active-tb-in-the-previous-2-years"]], "Characteristic: Diagnosis sufficiency (known versus suspected infections)": [[178, "characteristic-diagnosis-sufficiency-known-versus-suspected-infections"]], "Characteristic: Treatment sufficiency (on-treatment versus known infections)": [[178, "characteristic-treatment-sufficiency-on-treatment-versus-known-infections"]], "Parameter: Initialization proportion of the population with active TB": [[178, "parameter-initialization-proportion-of-the-population-with-active-tb"]], "Parameter: Initialization proportion of the population with latent TB": [[178, "parameter-initialization-proportion-of-the-population-with-latent-tb"]], "Parameter: Initialization proportion of latent TB cases that are early latent": [[178, "parameter-initialization-proportion-of-latent-tb-cases-that-are-early-latent"]], "Parameter: Initialization proportion of latent TB cases that are on treatment": [[178, "parameter-initialization-proportion-of-latent-tb-cases-that-are-on-treatment"]], "Parameter: Initialization proportion of active TB cases that are diagnosed": [[178, "parameter-initialization-proportion-of-active-tb-cases-that-are-diagnosed"]], "Parameter: Initialization proportion of diagnosed TB cases that are on treatment": [[178, "parameter-initialization-proportion-of-diagnosed-tb-cases-that-are-on-treatment"]], "Parameter: Initialization proportion of the population that have previously been vaccinated": [[178, "parameter-initialization-proportion-of-the-population-that-have-previously-been-vaccinated"]], "Parameter: Initialization proportion of the population that have previously been infected with TB": [[178, "parameter-initialization-proportion-of-the-population-that-have-previously-been-infected-with-tb"]], "Parameter: New active infections: proportion of population that are SP": [[178, "parameter-new-active-infections-proportion-of-population-that-are-sp"]], "Parameter: New active infections: proportion of population that are SN": [[178, "parameter-new-active-infections-proportion-of-population-that-are-sn"]], "Parameter: New SP infections: proportion of population that are SP-DS": [[178, "parameter-new-sp-infections-proportion-of-population-that-are-sp-ds"]], "Parameter: New SP infections: proportion of population that are SP-MDR": [[178, "parameter-new-sp-infections-proportion-of-population-that-are-sp-mdr"]], "Parameter: New SP infections: proportion of population that are SP-XDR": [[178, "parameter-new-sp-infections-proportion-of-population-that-are-sp-xdr"]], "Parameter: New SN infections: proportion of population that are SN-DS": [[178, "parameter-new-sn-infections-proportion-of-population-that-are-sn-ds"]], "Parameter: New SN infections: proportion of population that are SN-MDR": [[178, "parameter-new-sn-infections-proportion-of-population-that-are-sn-mdr"]], "Parameter: New SN infections: proportion of population that are SN-XDR": [[178, "parameter-new-sn-infections-proportion-of-population-that-are-sn-xdr"]], "Parameter: Infection vulnerability factor (relative population susceptibility)": [[178, "parameter-infection-vulnerability-factor-relative-population-susceptibility"]], "Parameter: Infection vulnerability factor (vaccinated versus susceptible)": [[178, "parameter-infection-vulnerability-factor-vaccinated-versus-susceptible"]], "Parameter: Infection vulnerability factor (recovered versus susceptible)": [[178, "parameter-infection-vulnerability-factor-recovered-versus-susceptible"]], "Parameter: SP-DS infectiousness": [[178, "parameter-sp-ds-infectiousness"]], "Parameter: Relative infectiousness (SN versus SP)": [[178, "parameter-relative-infectiousness-sn-versus-sp"]], "Parameter: Relative infectiousness (MDR versus DS)": [[178, "parameter-relative-infectiousness-mdr-versus-ds"]], "Parameter: Relative infectiousness (XDR versus DS)": [[178, "parameter-relative-infectiousness-xdr-versus-ds"]], "Parameter: Initialization proportion: Early latent untreated (diagnosable)": [[178, "parameter-initialization-proportion-early-latent-untreated-diagnosable"]], "Parameter: Initialization proportion: Early latent on treatment": [[178, "parameter-initialization-proportion-early-latent-on-treatment"]], "Parameter: Initialization proportion: Late latent untreated (diagnosable)": [[178, "parameter-initialization-proportion-late-latent-untreated-diagnosable"]], "Parameter: Initialization proportion: Late latent on treatment": [[178, "parameter-initialization-proportion-late-latent-on-treatment"]], "Parameter: Initialization proportion: Early latent untreated (diagnosis restricted)": [[178, "parameter-initialization-proportion-early-latent-untreated-diagnosis-restricted"]], "Parameter: Initialization proportion: Late latent untreated (diagnosis restricted)": [[178, "parameter-initialization-proportion-late-latent-untreated-diagnosis-restricted"]], "Parameter: Initialization proportion: SP-DS undiagnosed": [[178, "parameter-initialization-proportion-sp-ds-undiagnosed"]], "Parameter: Initialization proportion: SP-DS diagnosed but not on treatment": [[178, "parameter-initialization-proportion-sp-ds-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SP-DS on treatment": [[178, "parameter-initialization-proportion-sp-ds-on-treatment"]], "Parameter: Initialization proportion: SP-MDR undiagnosed": [[178, "parameter-initialization-proportion-sp-mdr-undiagnosed"]], "Parameter: Initialization proportion: SP-MDR diagnosed but not on treatment": [[178, "parameter-initialization-proportion-sp-mdr-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SP-MDR on treatment": [[178, "parameter-initialization-proportion-sp-mdr-on-treatment"]], "Parameter: Initialization proportion: SP-XDR undiagnosed": [[178, "parameter-initialization-proportion-sp-xdr-undiagnosed"]], "Parameter: Initialization proportion: SP-XDR diagnosed but not on treatment": [[178, "parameter-initialization-proportion-sp-xdr-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SP-XDR on treatment": [[178, "parameter-initialization-proportion-sp-xdr-on-treatment"]], "Parameter: Initialization proportion: SN-DS undiagnosed": [[178, "parameter-initialization-proportion-sn-ds-undiagnosed"]], "Parameter: Initialization proportion: SN-DS diagnosed but not on treatment": [[178, "parameter-initialization-proportion-sn-ds-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SN-DS on treatment": [[178, "parameter-initialization-proportion-sn-ds-on-treatment"]], "Parameter: Initialization proportion: SN-MDR undiagnosed": [[178, "parameter-initialization-proportion-sn-mdr-undiagnosed"]], "Parameter: Initialization proportion: SN-MDR diagnosed but not on treatment": [[178, "parameter-initialization-proportion-sn-mdr-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SN-MDR on treatment": [[178, "parameter-initialization-proportion-sn-mdr-on-treatment"]], "Parameter: Initialization proportion: SN-XDR undiagnosed": [[178, "parameter-initialization-proportion-sn-xdr-undiagnosed"]], "Parameter: Initialization proportion: SN-XDR diagnosed but not on treatment": [[178, "parameter-initialization-proportion-sn-xdr-diagnosed-but-not-on-treatment"]], "Parameter: Initialization proportion: SN-XDR on treatment": [[178, "parameter-initialization-proportion-sn-xdr-on-treatment"]], "Parameter: Initialization proportion: Completed treatment (active)": [[178, "parameter-initialization-proportion-completed-treatment-active"]], "Parameter: Initialization proportion: Vaccinated": [[178, "parameter-initialization-proportion-vaccinated"]], "Parameter: Initialization proportion: Susceptible": [[178, "parameter-initialization-proportion-susceptible"]], "Parameter: Initialization proportion: Susceptible (diagnosis restricted)": [[178, "parameter-initialization-proportion-susceptible-diagnosis-restricted"]], "Parameter: Number of births": [[178, "parameter-number-of-births"]], "Parameter: Non-TB deaths": [[178, "parameter-non-tb-deaths"]], "Parameter: Number of new immigrants": [[178, "parameter-number-of-new-immigrants"]], "Parameter: Number of departing emigrants": [[178, "parameter-number-of-departing-emigrants"]], "Parameter: Number of vaccinations administered": [[178, "parameter-number-of-vaccinations-administered"]], "Parameter: LTBI treatment initiations through mass screening": [[178, "parameter-ltbi-treatment-initiations-through-mass-screening"]], "Parameter: LTBI treatment initiations through contact tracing": [[178, "parameter-ltbi-treatment-initiations-through-contact-tracing"]], "Parameter: LTBI treatment average duration of full course": [[178, "parameter-ltbi-treatment-average-duration-of-full-course"]], "Parameter: LTBI treatment proportion of lost to follow up": [[178, "parameter-ltbi-treatment-proportion-of-lost-to-follow-up"]], "Parameter: LTBI treatment proportion of successful completions": [[178, "parameter-ltbi-treatment-proportion-of-successful-completions"]], "Parameter: LTBI treatment average duration until outcome": [[178, "parameter-ltbi-treatment-average-duration-until-outcome"]], "Parameter: Early-LTBI annual number initiating treatment": [[178, "parameter-early-ltbi-annual-number-initiating-treatment"]], "Parameter: Early-LTBI (diagnosis restricted) annual number initiating treatment": [[178, "parameter-early-ltbi-diagnosis-restricted-annual-number-initiating-treatment"]], "Parameter: Late-LTBI annual number initiating treatment": [[178, "parameter-late-ltbi-annual-number-initiating-treatment"]], "Parameter: Early-LTBI treatment abandonment rate": [[178, "parameter-early-ltbi-treatment-abandonment-rate"]], "Parameter: Early-LTBI treatment success rate": [[178, "parameter-early-ltbi-treatment-success-rate"]], "Parameter: Late-LTBI treatment abandonment rate": [[178, "parameter-late-ltbi-treatment-abandonment-rate"]], "Parameter: Late-LTBI treatment success rate": [[178, "parameter-late-ltbi-treatment-success-rate"]], "Parameter: Early latency departure rate": [[178, "parameter-early-latency-departure-rate"]], "Parameter: Late latency departure rate": [[178, "parameter-late-latency-departure-rate"]], "Parameter: Probability of early-active versus early-late progression": [[178, "parameter-probability-of-early-active-versus-early-late-progression"]], "Parameter: Early-late LTBI progression rate (diagnosable)": [[178, "parameter-early-late-ltbi-progression-rate-diagnosable"]], "Parameter: Early-late LTBI progression rate (diagnosis restricted)": [[178, "parameter-early-late-ltbi-progression-rate-diagnosis-restricted"]], "Parameter: LTBI-active progression rate (early diagnosable)": [[178, "parameter-ltbi-active-progression-rate-early-diagnosable"]], "Parameter: LTBI-active progression rate (early diagnosis restricted)": [[178, "parameter-ltbi-active-progression-rate-early-diagnosis-restricted"]], "Parameter: LTBI-active progression rate (late diagnosable)": [[178, "parameter-ltbi-active-progression-rate-late-diagnosable"]], "Parameter: LTBI-active progression rate (late diagnosis restricted)": [[178, "parameter-ltbi-active-progression-rate-late-diagnosis-restricted"]], "Parameter: SP-MDR infectiousness": [[178, "parameter-sp-mdr-infectiousness"]], "Parameter: SP-XDR infectiousness": [[178, "parameter-sp-xdr-infectiousness"]], "Parameter: SN-DS infectiousness": [[178, "parameter-sn-ds-infectiousness"]], "Parameter: SN-MDR infectiousness": [[178, "parameter-sn-mdr-infectiousness"]], "Parameter: SN-XDR infectiousness": [[178, "parameter-sn-xdr-infectiousness"]], "Parameter: Force of infection from SP prevalence": [[178, "parameter-force-of-infection-from-sp-prevalence"]], "Parameter: Force of infection from SN prevalence": [[178, "parameter-force-of-infection-from-sn-prevalence"]], "Parameter: Force of infection imparted by population": [[178, "parameter-force-of-infection-imparted-by-population"]], "Parameter: Force of infection experienced by population": [[178, "parameter-force-of-infection-experienced-by-population"]], "Parameter: Infection rate (susceptible to diagnosable latent)": [[178, "parameter-infection-rate-susceptible-to-diagnosable-latent"]], "Parameter: Infection rate (vaccinated to diagnosis restricted latent)": [[178, "parameter-infection-rate-vaccinated-to-diagnosis-restricted-latent"]], "Parameter: Reinfection rate (susceptible to diagnosis restricted for diagnosis restricted)": [[178, "parameter-reinfection-rate-susceptible-to-diagnosis-restricted-for-diagnosis-restricted"]], "Parameter: Relapse rate for completed treatment (active) cases": [[178, "parameter-relapse-rate-for-completed-treatment-active-cases"]], "Parameter: Full recovery rate for completed treatment (active) cases": [[178, "parameter-full-recovery-rate-for-completed-treatment-active-cases"]], "Parameter: Proportion of new immigrants with LTBI": [[178, "parameter-proportion-of-new-immigrants-with-ltbi"]], "Parameter: Early latent proportion of new immigrants": [[178, "parameter-early-latent-proportion-of-new-immigrants"]], "Parameter: Late latent proportion of new immigrants": [[178, "parameter-late-latent-proportion-of-new-immigrants"]], "Parameter: Proportion of new immigrants with active TB infections": [[178, "parameter-proportion-of-new-immigrants-with-active-tb-infections"]], "Parameter: Susceptible proportion of immigrants": [[178, "parameter-susceptible-proportion-of-immigrants"]], "Parameter: SP-DS diagnosis notifications": [[178, "parameter-sp-ds-diagnosis-notifications"]], "Parameter: SP-MDR diagnosis notifications": [[178, "parameter-sp-mdr-diagnosis-notifications"]], "Parameter: SP-XDR diagnosis notifications": [[178, "parameter-sp-xdr-diagnosis-notifications"]], "Parameter: SN-DS diagnosis notifications": [[178, "parameter-sn-ds-diagnosis-notifications"]], "Parameter: SN-MDR diagnosis notifications": [[178, "parameter-sn-mdr-diagnosis-notifications"]], "Parameter: SN-XDR diagnosis notifications": [[178, "parameter-sn-xdr-diagnosis-notifications"]], "Parameter: DS treatment number of initiations": [[178, "parameter-ds-treatment-number-of-initiations"]], "Parameter: SP-DS treatment number of initiations": [[178, "parameter-sp-ds-treatment-number-of-initiations"]], "Parameter: SN-DS treatment number of initiations": [[178, "parameter-sn-ds-treatment-number-of-initiations"]], "Parameter: DS treatment average duration of completed treatment": [[178, "parameter-ds-treatment-average-duration-of-completed-treatment"]], "Parameter: DS treatment proportion of loss to follow up (require re-diagnosis)": [[178, "parameter-ds-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: DS treatment proportion failed (no escalation, no need to re-diagnose)": [[178, "parameter-ds-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: DS treatment proportion failed (escalation to MDR, require re-diagnosis)": [[178, "parameter-ds-treatment-proportion-failed-escalation-to-mdr-require-re-diagnosis"]], "Parameter: DS treatment proportion of treatments completed + success": [[178, "parameter-ds-treatment-proportion-of-treatments-completed-success"]], "Parameter: DS treatment proportion of deaths": [[178, "parameter-ds-treatment-proportion-of-deaths"]], "Parameter: DS treatment average duration until outcome": [[178, "parameter-ds-treatment-average-duration-until-outcome"]], "Parameter: SP-DS treatment proportion of loss to follow up (require re-diagnosis)": [[178, "parameter-sp-ds-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SP-DS treatment proportion failed (no escalation, no need to re-diagnose)": [[178, "parameter-sp-ds-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SP-DS treatment proportion failed (escalation to MDR, require re-diagnosis)": [[178, "parameter-sp-ds-treatment-proportion-failed-escalation-to-mdr-require-re-diagnosis"]], "Parameter: SP-DS treatment proportion of treatments completed + success": [[178, "parameter-sp-ds-treatment-proportion-of-treatments-completed-success"]], "Parameter: SP-DS treatment proportion of deaths": [[178, "parameter-sp-ds-treatment-proportion-of-deaths"]], "Parameter: SN-DS treatment proportion of loss to follow up (require re-diagnosis)": [[178, "parameter-sn-ds-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SN-DS treatment proportion failed (no escalation, no need to re-diagnose)": [[178, "parameter-sn-ds-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SN-DS treatment proportion failed (escalation to MDR, require re-diagnosis)": [[178, "parameter-sn-ds-treatment-proportion-failed-escalation-to-mdr-require-re-diagnosis"]], "Parameter: SN-DS treatment proportion of treatments completed + success": [[178, "parameter-sn-ds-treatment-proportion-of-treatments-completed-success"]], "Parameter: SN-DS treatment proportion of deaths": [[178, "parameter-sn-ds-treatment-proportion-of-deaths"]], "Parameter: MDR treatment number of initiations": [[178, "parameter-mdr-treatment-number-of-initiations"]], "Parameter: SP-MDR treatment number of initiations": [[178, "parameter-sp-mdr-treatment-number-of-initiations"]], "Parameter: SN-MDR treatment number of initiations": [[178, "parameter-sn-mdr-treatment-number-of-initiations"]], "Parameter: MDR treatment average duration of completed treatment": [[178, "parameter-mdr-treatment-average-duration-of-completed-treatment"]], "Parameter: MDR treatment proportion of loss to follow up (require re-diagnosis)": [[178, "parameter-mdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: MDR treatment proportion failed (no escalation, no need to re-diagnose)": [[178, "parameter-mdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: MDR treatment proportion failed (escalation to XDR, require re-diagnosis)": [[178, "parameter-mdr-treatment-proportion-failed-escalation-to-xdr-require-re-diagnosis"]], "Parameter: MDR treatment proportion of treatments completed + success": [[178, "parameter-mdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: MDR treatment proportion of deaths": [[178, "parameter-mdr-treatment-proportion-of-deaths"]], "Parameter: MDR treatment average duration until outcome": [[178, "parameter-mdr-treatment-average-duration-until-outcome"]], "Parameter: SP-MDR treatment proportion of loss to follow up (require re-diagnosis)": [[178, "parameter-sp-mdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SP-MDR treatment proportion failed (no escalation, no need to re-diagnose)": [[178, "parameter-sp-mdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SP-MDR treatment proportion failed (escalation to XDR, require re-diagnosis)": [[178, "parameter-sp-mdr-treatment-proportion-failed-escalation-to-xdr-require-re-diagnosis"]], "Parameter: SP-MDR treatment proportion of treatments completed + success": [[178, "parameter-sp-mdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: SP-MDR treatment proportion of deaths": [[178, "parameter-sp-mdr-treatment-proportion-of-deaths"]], "Parameter: SN-MDR treatment proportion of loss to follow up (require re-diagnosis)": [[178, "parameter-sn-mdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SN-MDR treatment proportion failed (no escalation, no need to re-diagnose)": [[178, "parameter-sn-mdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SN-MDR treatment proportion failed (escalation to XDR, require re-diagnosis)": [[178, "parameter-sn-mdr-treatment-proportion-failed-escalation-to-xdr-require-re-diagnosis"]], "Parameter: SN-MDR treatment proportion of treatments completed + success": [[178, "parameter-sn-mdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: SN-MDR treatment proportion of deaths": [[178, "parameter-sn-mdr-treatment-proportion-of-deaths"]], "Parameter: XDR treatment number of initiations": [[178, "parameter-xdr-treatment-number-of-initiations"]], "Parameter: SP-XDR treatment number of initiations": [[178, "parameter-sp-xdr-treatment-number-of-initiations"]], "Parameter: SN-XDR treatment number of initiations": [[178, "parameter-sn-xdr-treatment-number-of-initiations"]], "Parameter: XDR treatment average duration of completed treatment": [[178, "parameter-xdr-treatment-average-duration-of-completed-treatment"]], "Parameter: XDR treatment proportion of loss to follow up (require re-diagnosis)": [[178, "parameter-xdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: XDR treatment proportion failed (no escalation, no need to re-diagnose)": [[178, "parameter-xdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: XDR treatment proportion of treatments completed + success": [[178, "parameter-xdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: XDR treatment proportion of deaths": [[178, "parameter-xdr-treatment-proportion-of-deaths"]], "Parameter: XDR treatment average duration until outcome": [[178, "parameter-xdr-treatment-average-duration-until-outcome"]], "Parameter: SP-XDR treatment proportion of loss to follow up (require re-diagnosis)": [[178, "parameter-sp-xdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SP-XDR treatment proportion failed (no escalation, no need to re-diagnose)": [[178, "parameter-sp-xdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SP-XDR treatment proportion of treatments completed + success": [[178, "parameter-sp-xdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: SP-XDR treatment proportion of deaths": [[178, "parameter-sp-xdr-treatment-proportion-of-deaths"]], "Parameter: SN-XDR treatment proportion of loss to follow up (require re-diagnosis)": [[178, "parameter-sn-xdr-treatment-proportion-of-loss-to-follow-up-require-re-diagnosis"]], "Parameter: SN-XDR treatment proportion failed (no escalation, no need to re-diagnose)": [[178, "parameter-sn-xdr-treatment-proportion-failed-no-escalation-no-need-to-re-diagnose"]], "Parameter: SN-XDR treatment proportion of treatments completed + success": [[178, "parameter-sn-xdr-treatment-proportion-of-treatments-completed-success"]], "Parameter: SN-XDR treatment proportion of deaths": [[178, "parameter-sn-xdr-treatment-proportion-of-deaths"]], "Parameter: SP-DS natural recovery rate": [[178, "parameter-sp-ds-natural-recovery-rate"]], "Parameter: SP-MDR natural recovery rate": [[178, "parameter-sp-mdr-natural-recovery-rate"]], "Parameter: SP-XDR natural recovery rate": [[178, "parameter-sp-xdr-natural-recovery-rate"]], "Parameter: SN-DS natural recovery rate": [[178, "parameter-sn-ds-natural-recovery-rate"]], "Parameter: SN-MDR natural recovery rate": [[178, "parameter-sn-mdr-natural-recovery-rate"]], "Parameter: SN-XDR natural recovery rate": [[178, "parameter-sn-xdr-natural-recovery-rate"]], "Parameter: SP-DS death rate (untreated)": [[178, "parameter-sp-ds-death-rate-untreated"]], "Parameter: SP-MDR death rate (untreated)": [[178, "parameter-sp-mdr-death-rate-untreated"]], "Parameter: SP-XDR death rate (untreated)": [[178, "parameter-sp-xdr-death-rate-untreated"]], "Parameter: SN-DS death rate (untreated)": [[178, "parameter-sn-ds-death-rate-untreated"]], "Parameter: SN-MDR death rate (untreated)": [[178, "parameter-sn-mdr-death-rate-untreated"]], "Parameter: SN-XDR death rate (untreated)": [[178, "parameter-sn-xdr-death-rate-untreated"]], "Parameter: Disutility weight for active TB": [[178, "parameter-disutility-weight-for-active-tb"]], "Parameter: YLD rate": [[178, "parameter-yld-rate"]], "Parameter: Estimated number of years of life remaining": [[178, "parameter-estimated-number-of-years-of-life-remaining"]], "Parameter: YLL rate": [[178, "parameter-yll-rate"]], "Parameter: DALYs": [[178, "parameter-dalys"]], "Interaction: Preference weighting for one population interacting with another": [[178, "interaction-preference-weighting-for-one-population-interacting-with-another"]], "Plots": [[178, "plots"]], "Plot: Population size": [[178, "plot-population-size"]], "Plot: Latent infections": [[178, "plot-latent-infections"]], "Plot: Active TB": [[178, "plot-active-tb"]], "Plot: Active DS-TB": [[178, "plot-active-ds-tb"]], "Plot: Active MDR-TB": [[178, "plot-active-mdr-tb"]], "Plot: Active XDR-TB": [[178, "plot-active-xdr-tb"]], "Plot: New active TB infections": [[178, "plot-new-active-tb-infections"]], "Plot: Activated TB infections inc. relapse and immigration": [[178, "plot-activated-tb-infections-inc-relapse-and-immigration"]], "Plot: Smear negative active TB": [[178, "plot-smear-negative-active-tb"]], "Plot: Smear positive active TB": [[178, "plot-smear-positive-active-tb"]], "Plot: Latent diagnoses": [[178, "plot-latent-diagnoses"]], "Plot: New active TB diagnoses": [[178, "plot-new-active-tb-diagnoses"]], "Plot: Latent treatment": [[178, "plot-latent-treatment"]], "Plot: Active treatment": [[178, "plot-active-treatment"]], "Plot: TB-related deaths": [[178, "plot-tb-related-deaths"]], "Plot: Latent prevalence": [[178, "plot-latent-prevalence"]], "Plot: Active prevalence": [[178, "plot-active-prevalence"]], "Plot: DR prevalence": [[178, "plot-dr-prevalence"]], "Plot: New active SP-DS diagnoses": [[178, "plot-new-active-sp-ds-diagnoses"]], "Plot: New active SP-MDR diagnoses": [[178, "plot-new-active-sp-mdr-diagnoses"]], "Plot: New active SP-XDR diagnoses": [[178, "plot-new-active-sp-xdr-diagnoses"]], "Plot: New active SN-DS diagnoses": [[178, "plot-new-active-sn-ds-diagnoses"]], "Plot: New active SN-MDR diagnoses": [[178, "plot-new-active-sn-mdr-diagnoses"]], "Plot: New active SN-XDR diagnoses": [[178, "plot-new-active-sn-xdr-diagnoses"]], "Plot: DS number initiating treatment": [[178, "plot-ds-number-initiating-treatment"]], "Plot: MDR number initiating treatment": [[178, "plot-mdr-number-initiating-treatment"]], "Plot: XDR number initiating treatment": [[178, "plot-xdr-number-initiating-treatment"]], "Cascade: TB treatment (including recovered)": [[178, "cascade-tb-treatment-including-recovered"]], "Cascade: SP treatment": [[178, "cascade-sp-treatment"]], "Cascade: SN treatment": [[178, "cascade-sn-treatment"]], "Overriding coverage calculations": [[155, "Overriding-coverage-calculations"]], "Add a new population type": [[155, "Add-a-new-population-type"]], "Overwriting coverage": [[155, "Overwriting-coverage"]], "General content": [[161, "general-content"]], "Diabetes": [[169, "diabetes"]], "Compartment: Unaware & uncomplicated": [[169, "compartment-unaware-uncomplicated"]], "Compartment: Unaware & vascular damage": [[169, "compartment-unaware-vascular-damage"]], "Compartment: Screened & uncomplicated": [[169, "compartment-screened-uncomplicated"]], "Compartment: Screened & vascular damage": [[169, "compartment-screened-vascular-damage"]], "Compartment: Diagnosed & uncomplicated": [[169, "compartment-diagnosed-uncomplicated"]], "Compartment: Diagnosed & vascular damage": [[169, "compartment-diagnosed-vascular-damage"]], "Compartment: Successful treatment & uncomplicated": [[169, "compartment-successful-treatment-uncomplicated"]], "Compartment: Successful treatment & vascular damage": [[169, "compartment-successful-treatment-vascular-damage"]], "Compartment: Treatment failure & uncomplicated": [[169, "compartment-treatment-failure-uncomplicated"]], "Compartment: Treatment failure & vascular damage": [[169, "compartment-treatment-failure-vascular-damage"]], "Compartment: Dead (diabetes)": [[169, "compartment-dead-diabetes"]], "Characteristic: All people with T2DM": [[169, "characteristic-all-people-with-t2dm"]], "Characteristic: People screened for T2DM": [[169, "characteristic-people-screened-for-t2dm"]], "Characteristic: People diagnosed with T2DM": [[169, "characteristic-people-diagnosed-with-t2dm"]], "Characteristic: People treated for T2DM": [[169, "characteristic-people-treated-for-t2dm"]], "Characteristic: People with HbA1c control": [[169, "characteristic-people-with-hba1c-control"]], "Characteristic: Proportion screened for T2DM": [[169, "characteristic-proportion-screened-for-t2dm"]], "Characteristic: Proportion diagnosed with T2DM": [[169, "characteristic-proportion-diagnosed-with-t2dm"]], "Characteristic: Proportion treated for T2DM": [[169, "characteristic-proportion-treated-for-t2dm"]], "Characteristic: Proportion with HbA1c control": [[169, "characteristic-proportion-with-hba1c-control"]], "Parameter: Estimated number of new diabetes cases annually": [[169, "parameter-estimated-number-of-new-diabetes-cases-annually"]], "Parameter: Time before progression to vascular damage": [[169, "parameter-time-before-progression-to-vascular-damage"]], "Parameter: Yield among those screened": [[169, "parameter-yield-among-those-screened"]], "Parameter: Diagnosis sensitivity": [[169, "parameter-diagnosis-sensitivity"]], "Parameter: Proportion of those experiencing treatment failure who are offered support": [[169, "parameter-proportion-of-those-experiencing-treatment-failure-who-are-offered-support"]], "Parameter: Death rate for diabetes with vascular damage": [[169, "parameter-death-rate-for-diabetes-with-vascular-damage"]], "Cascade: Diabetes care cascade": [[169, "cascade-diabetes-care-cascade"]], "Cascade: Diabetes care cascade - vascular damage": [[169, "cascade-diabetes-care-cascade-vascular-damage"]], "Cascade: Diabetes care cascade - uncomplicated cases": [[169, "cascade-diabetes-care-cascade-uncomplicated-cases"]], "SIR model": [[177, "sir-model"]], "Compartment: Infected": [[177, "compartment-infected"]], "Compartment: Recovered": [[177, "compartment-recovered"]], "Compartment: Dead": [[177, "compartment-dead"], [176, "compartment-dead"]], "Characteristic: Total number of entities": [[177, "characteristic-total-number-of-entities"]], "Characteristic: Prevalence": [[177, "characteristic-prevalence"]], "Characteristic: Number ever infected": [[177, "characteristic-number-ever-infected"]], "Characteristic: Number infected or susceptible": [[177, "characteristic-number-infected-or-susceptible"]], "Characteristic: Number not at risk of death": [[177, "characteristic-number-not-at-risk-of-death"]], "Characteristic: Proportion ever infected": [[177, "characteristic-proportion-ever-infected"]], "Characteristic: Proportion infected or susceptible": [[177, "characteristic-proportion-infected-or-susceptible"]], "Characteristic: Proportion not at risk of death": [[177, "characteristic-proportion-not-at-risk-of-death"]], "Parameter: Transmission probability per contact": [[177, "parameter-transmission-probability-per-contact"]], "Parameter: Number of contacts annually": [[177, "parameter-number-of-contacts-annually"]], "Parameter: Average duration of infections (years)": [[177, "parameter-average-duration-of-infections-years"]], "Parameter: Death rate for infected people": [[177, "parameter-death-rate-for-infected-people"]], "Parameter: Death rate for susceptible people": [[177, "parameter-death-rate-for-susceptible-people"]], "Parameter: Force of infection": [[177, "parameter-force-of-infection"]], "Contextual overview": [[157, "contextual-overview"]], "Hypertension with dynamics": [[174, "hypertension-with-dynamics"]], "Compartment: No hypertension": [[174, "compartment-no-hypertension"]], "Compartment: Screened, not diagnosed": [[174, "compartment-screened-not-diagnosed"]], "Compartment: Diagnosed, not treated": [[174, "compartment-diagnosed-not-treated"], [170, "compartment-diagnosed-not-treated"]], "Compartment: Treated, not controlled": [[174, "compartment-treated-not-controlled"]], "Compartment: Dead (hypertension)": [[174, "compartment-dead-hypertension"]], "Parameter: Estimated number of new cases annually": [[174, "parameter-estimated-number-of-new-cases-annually"]], "Parameter: Target population for screening programs": [[174, "parameter-target-population-for-screening-programs"]], "Parameter: Screening coverage shares": [[174, "parameter-screening-coverage-shares"]], "Parameter: Death rate for those with untreated hypertension": [[174, "parameter-death-rate-for-those-with-untreated-hypertension"]], "Cascade: Hypertension care cascade": [[174, "cascade-hypertension-care-cascade"]], "Timed transitions": [[166, "timed-transitions"]], "Motivation": [[166, "motivation"]], "Use cases": [[166, "use-cases"]], "Basic implementation": [[166, "basic-implementation"]], "Initialization": [[166, "initialization"]], "Normal transitions": [[166, "normal-transitions"]], "Duration groups": [[166, "duration-groups"]], "Architecture": [[166, "architecture"]], "Junctions": [[166, "junctions"]], "Diagnosis-Treated": [[170, "diagnosis-treated"]], "Characteristic: All diagnosed": [[170, "characteristic-all-diagnosed"]], "Parameter: Proportion of those on treatment lost-to-follow-up": [[170, "parameter-proportion-of-those-on-treatment-lost-to-follow-up"]], "Service modalities": [[176, "service-modalities"]], "Compartment: Unaware of own need": [[176, "compartment-unaware-of-own-need"]], "Compartment: Aware but not linked to services": [[176, "compartment-aware-but-not-linked-to-services"]], "Compartment: Linked to service provider": [[176, "compartment-linked-to-service-provider"]], "Compartment: Receiving services": [[176, "compartment-receiving-services"]], "Compartment: Successful outcome": [[176, "compartment-successful-outcome"]], "Characteristic: All people": [[176, "characteristic-all-people"]], "Characteristic: People aware of need": [[176, "characteristic-people-aware-of-need"]], "Characteristic: People linked to services": [[176, "characteristic-people-linked-to-services"]], "Characteristic: People receiving services": [[176, "characteristic-people-receiving-services"]], "Characteristic: People with successful outcomes": [[176, "characteristic-people-with-successful-outcomes"]], "Characteristic: Proportion aware of need": [[176, "characteristic-proportion-aware-of-need"]], "Characteristic: Proportion linked to services": [[176, "characteristic-proportion-linked-to-services"]], "Characteristic: Proportion receiving services": [[176, "characteristic-proportion-receiving-services"]], "Characteristic: Proportion with successful outcomes": [[176, "characteristic-proportion-with-successful-outcomes"]], "Parameter: Number of new cases (annual)": [[176, "parameter-number-of-new-cases-annual"]], "Parameter: Number becoming aware of need (annual)": [[176, "parameter-number-becoming-aware-of-need-annual"]], "Parameter: Number linked to services (annual)": [[176, "parameter-number-linked-to-services-annual"]], "Parameter: Number initiated onto services (annual)": [[176, "parameter-number-initiated-onto-services-annual"]], "Parameter: Proportion of those without successful outcomes who are offered further support": [[176, "parameter-proportion-of-those-without-successful-outcomes-who-are-offered-further-support"]], "Parameter: Probability of successful outcome among those receiving services": [[176, "parameter-probability-of-successful-outcome-among-those-receiving-services"]], "Population types": [[163, "population-types"]], "Framework population types": [[163, "framework-population-types"]], "Databook population types": [[163, "databook-population-types"]], "Programs and population types": [[163, "programs-and-population-types"]], "Running simulations": [[163, "running-simulations"]], "Plotting": [[163, "plotting"]], "Uncertainty": [[152, "Uncertainty"]], "Specifying uncertainty": [[152, "Specifying-uncertainty"]], "Sampling inputs": [[152, "Sampling-inputs"]], "Analysis": [[152, "Analysis"]], "Basic plotting": [[152, "Basic-plotting"]], "Comparing sampled results": [[152, "Comparing-sampled-results"]], "Distributions of differences between results": [[152, "Distributions-of-differences-between-results"]], "Cascade ensembles": [[152, "Cascade-ensembles"]], "Virtual stages": [[152, "Virtual-stages"]], "Memory-limited environments": [[152, "Memory-limited-environments"]], "Parallization": [[152, "Parallization"]], "Experimental plots": [[152, "Experimental-plots"]], "Examples": [[154, "examples"]], "HIV without dynamics": [[171, "hiv-without-dynamics"]], "atomica.plotting": [[96, "module-atomica.plotting"]], "atomica.programs.ProgramInstructions": [[108, "atomica-programs-programinstructions"]], "atomica.scenarios": [[119, "module-atomica.scenarios"]], "atomica.plotting.plot_legend": [[100, "atomica-plotting-plot-legend"]], "atomica.plotting.PlotData": [[97, "atomica-plotting-plotdata"]], "atomica.reconciliation.reconcile": [[114, "atomica-reconciliation-reconcile"]], "atomica.project.ProjectSettings": [[112, "atomica-project-projectsettings"]], "atomica.programs.Covout": [[106, "atomica-programs-covout"]], "atomica.plotting.save_figs": [[104, "atomica-plotting-save-figs"]], "atomica.results.Ensemble": [[116, "atomica-results-ensemble"]], "atomica.programs.Program": [[107, "atomica-programs-program"]], "atomica.results.export_results": [[118, "atomica-results-export-results"]], "atomica.parameters.Parameter": [[94, "atomica-parameters-parameter"]], "atomica.reconciliation": [[113, "module-atomica.reconciliation"]], "atomica.programs": [[105, "module-atomica.programs"]], "atomica.parameters": [[93, "module-atomica.parameters"]], "atomica.plotting.reorder_legend": [[103, "atomica-plotting-reorder-legend"]], "atomica.optimization.UnresolvableConstraint": [[90, "atomica-optimization-unresolvableconstraint"]], "atomica.results.Result": [[117, "atomica-results-result"]], "atomica.parameters.ParameterSet": [[95, "atomica-parameters-parameterset"]], "atomica.programs.ProgramSet": [[109, "atomica-programs-programset"]], "atomica.plotting.plot_bars": [[99, "atomica-plotting-plot-bars"]], "atomica.project": [[110, "module-atomica.project"]], "atomica.plotting.plot_series": [[101, "atomica-plotting-plot-series"]], "atomica.project.Project": [[111, "atomica-project-project"]], "atomica.results": [[115, "module-atomica.results"]], "atomica.plotting.Series": [[98, "atomica-plotting-series"]], "atomica.optimization.constrain_sum_bounded": [[91, "atomica-optimization-constrain-sum-bounded"]], "atomica.plotting.relabel_legend": [[102, "atomica-plotting-relabel-legend"]], "atomica.optimization.optimize": [[92, "atomica-optimization-optimize"]], "atomica.optimization": [[68, "module-atomica.optimization"]], "atomica.optimization.IncreaseByMeasurable": [[77, "atomica-optimization-increasebymeasurable"]], "atomica.optimization.TotalSpendConstraint": [[89, "atomica-optimization-totalspendconstraint"]], "atomica.optimization.Constraint": [[73, "atomica-optimization-constraint"]], "atomica.model.SourceCompartment": [[63, "atomica-model-sourcecompartment"]], "atomica.optimization.MaximizeCascadeConversionRate": [[79, "atomica-optimization-maximizecascadeconversionrate"]], "atomica.model.run_model": [[67, "atomica-model-run-model"]], "atomica.optimization.Adjustment": [[70, "atomica-optimization-adjustment"]], "atomica.optimization.Optimization": [[84, "atomica-optimization-optimization"]], "atomica.optimization.ExponentialSpendingAdjustment": [[75, "atomica-optimization-exponentialspendingadjustment"]], "atomica.model.SinkCompartment": [[62, "atomica-model-sinkcompartment"]], "atomica.optimization.SpendingPackageAdjustment": [[87, "atomica-optimization-spendingpackageadjustment"]], "atomica.optimization.AtLeastMeasurable": [[71, "atomica-optimization-atleastmeasurable"]], "atomica.optimization.Adjustable": [[69, "atomica-optimization-adjustable"]], "atomica.optimization.Measurable": [[82, "atomica-optimization-measurable"]], "atomica.model.TimedLink": [[65, "atomica-model-timedlink"]], "atomica.optimization.DecreaseByMeasurable": [[74, "atomica-optimization-decreasebymeasurable"]], "atomica.optimization.MinimizeMeasurable": [[83, "atomica-optimization-minimizemeasurable"]], "atomica.optimization.StartTimeAdjustment": [[88, "atomica-optimization-starttimeadjustment"]], "atomica.model.Population": [[60, "atomica-model-population"]], "atomica.model.Variable": [[66, "atomica-model-variable"]], "atomica.optimization.MaximizeCascadeStage": [[80, "atomica-optimization-maximizecascadestage"]], "atomica.optimization.SpendingAdjustment": [[86, "atomica-optimization-spendingadjustment"]], "atomica.model.TimedCompartment": [[64, "atomica-model-timedcompartment"]], "atomica.optimization.InvalidInitialConditions": [[78, "atomica-optimization-invalidinitialconditions"]], "atomica.optimization.FailedConstraint": [[76, "atomica-optimization-failedconstraint"]], "atomica.model.ResidualJunctionCompartment": [[61, "atomica-model-residualjunctioncompartment"]], "atomica.optimization.AtMostMeasurable": [[72, "atomica-optimization-atmostmeasurable"]], "atomica.optimization.MaximizeMeasurable": [[81, "atomica-optimization-maximizemeasurable"]], "atomica.optimization.PairedLinearSpendingAdjustment": [[85, "atomica-optimization-pairedlinearspendingadjustment"]], "atomica.scenarios.BudgetScenario": [[120, "atomica-scenarios-budgetscenario"]], "Plotting Documentation": [[149, "Plotting-Documentation"]], "Quick Reference": [[149, "Quick-Reference"]], "Just give me a plot": [[149, "Just-give-me-a-plot"]], "FAQs": [[149, "FAQs"]], "Data manipulation": [[149, "Data-manipulation"]], "General issues": [[149, "General-issues"]], "Bar graphs": [[149, "Bar-graphs"]], "Legends": [[149, "Legends"]], "Plotting system design": [[149, "Plotting-system-design"]], "Data preparation and aggregation": [[149, "Data-preparation-and-aggregation"]], "Function aggregations": [[149, "Function-aggregations"]], "Axis units": [[149, "Axis-units"]], "Flow rate aggregations and disaggregations": [[149, "Flow-rate-aggregations-and-disaggregations"]], "Plotting series": [[149, "Plotting-series"]], "Overriding data": [[149, "Overriding-data"]], "Stacked plots and data": [[149, "Stacked-plots-and-data"]], "Plotting transition parameters and flow rates": [[149, "Plotting-transition-parameters-and-flow-rates"]], "Setting full names": [[149, "Setting-full-names"]], "Further formatting": [[149, "Further-formatting"]], "Module-level settings and separate legends": [[149, "Module-level-settings-and-separate-legends"]], "Time accumulation": [[149, "Time-accumulation"]], "Saving figures": [[149, "Saving-figures"]], "Plotting bars": [[149, "Plotting-bars"]], "Time aggregation": [[149, "Time-aggregation"], [147, "Time-aggregation"]], "Stacking bars": [[149, "Stacking-bars"]], "Negative values": [[149, "Negative-values"]], "Horizontal bars": [[149, "Horizontal-bars"]], "Labelling bars": [[149, "Labelling-bars"]], "Working with legends": [[149, "Working-with-legends"]], "Controlling legend order": [[149, "Controlling-legend-order"]], "Relabeling legend entries": [[149, "Relabeling-legend-entries"]], "Making a new legend": [[149, "Making-a-new-legend"]], "Time aggregation options": [[149, "Time-aggregation-options"]], "Flow rates": [[149, "Flow-rates"]], "Setting colors": [[149, "Setting-colors"]], "Colour design patterns": [[149, "Colour-design-patterns"]], "atomica.scenarios.CombinedScenario": [[121, "atomica-scenarios-combinedscenario"]], "atomica.utils.NDict": [[130, "atomica-utils-ndict"]], "Plot unit conversions": [[148, "Plot-unit-conversions"]], "Programs": [[148, "Programs"]], "Models (implementation)": [[145, "Models-(implementation)"]], "Model object structure": [[145, "Model-object-structure"]], "Compartment": [[145, "Compartment"]], "Link": [[145, "Link"]], "Characteristic": [[145, "Characteristic"]], "Parameter": [[145, "Parameter"]], "Population": [[145, "Population"]], "Model": [[145, "Model"]], "Building": [[145, "Building"]], "Integrating": [[145, "Integrating"]], "Linking and unlinking": [[145, "Linking-and-unlinking"]], "atomica.utils.format_duration": [[136, "atomica-utils-format-duration"]], "Plotting programs": [[147, "Plotting-programs"]], "Creating PlotData from programs": [[147, "Creating-PlotData-from-programs"]], "Plotting spending and coverage": [[147, "Plotting-spending-and-coverage"]], "Bar plots and selecting times": [[147, "Bar-plots-and-selecting-times"]], "Output aggregation": [[147, "Output-aggregation"]], "Frameworks": [[144, "Frameworks"]], "ProjectFramework basics": [[144, "ProjectFramework-basics"]], "Accessing the data": [[144, "Accessing-the-data"]], "Exporting a Framework": [[144, "Exporting-a-Framework"]], "Making a new Framework": [[144, "Making-a-new-Framework"]], "Validating the input": [[144, "Validating-the-input"]], "Adding a quantity to the Framework": [[144, "Adding-a-quantity-to-the-Framework"]], "Convenience methods": [[144, "Convenience-methods"]], "Iterating over items": [[144, "Iterating-over-items"]], "atomica.utils.Quiet": [[132, "atomica-utils-quiet"]], "atomica.utils.datetime_to_year": [[134, "atomica-utils-datetime-to-year"]], "atomica.utils": [[129, "module-atomica.utils"]], "atomica.utils.nested_loop": [[137, "atomica-utils-nested-loop"]], "Basic workflow": [[143, "Basic-workflow"]], "Starting an application": [[143, "Starting-an-application"]], "Creating a project": [[143, "Creating-a-project"]], "Calibrating the model": [[143, "Calibrating-the-model"]], "Manual calibration": [[143, "Manual-calibration"]], "Automatic calibration": [[143, "Automatic-calibration"]], "Adding programs": [[143, "Adding-programs"]], "Budget scenarios": [[143, "Budget-scenarios"]], "Coverage scenarios": [[143, "Coverage-scenarios"]], "atomica.utils.TimeSeries": [[133, "atomica-utils-timeseries"]], "atomica.scenarios.CoverageScenario": [[122, "atomica-scenarios-coveragescenario"]], "atomica.system": [[125, "module-atomica.system"]], "atomica.scenarios.Scenario": [[124, "atomica-scenarios-scenario"]], "atomica.utils.stop_logging": [[141, "atomica-utils-stop-logging"]], "atomica.scenarios.ParameterScenario": [[123, "atomica-scenarios-parameterscenario"]], "atomica.system.NotFoundError": [[127, "atomica-system-notfounderror"]], "atomica.utils.NamedItem": [[131, "atomica-utils-nameditem"]], "atomica.utils.evaluate_plot_string": [[135, "atomica-utils-evaluate-plot-string"]], "atomica.system.FrameworkSettings": [[126, "atomica-system-frameworksettings"]], "atomica.version": [[142, "module-atomica.version"]], "atomica.utils.parent_dir": [[139, "atomica-utils-parent-dir"]], "atomica.system.atomica_path": [[128, "atomica-system-atomica-path"]], "atomica.utils.start_logging": [[140, "atomica-utils-start-logging"]], "atomica.utils.parallel_progress": [[138, "atomica-utils-parallel-progress"]], "Results and Models": [[146, "Results-and-Models"]], "Pre-specified plots": [[146, "Pre-specified-plots"]], "Exporting results": [[146, "Exporting-results"]], "Exporting raw results": [[146, "Exporting-raw-results"]], "Accessing raw values": [[146, "Accessing-raw-values"]], "Traversing the graph": [[146, "Traversing-the-graph"]]}, "indexentries": {"atomica": [[0, "module-atomica"]], "module": [[0, "module-atomica"], [1, "module-atomica.calibration"], [3, "module-atomica.cascade"], [16, "module-atomica.data"], [18, "module-atomica.demos"], [21, "module-atomica.excel"], [34, "module-atomica.framework"], [38, "module-atomica.function_parser"], [43, "module-atomica.migration"], [51, "module-atomica.model"], [68, "module-atomica.optimization"], [93, "module-atomica.parameters"], [96, "module-atomica.plotting"], [105, "module-atomica.programs"], [110, "module-atomica.project"], [113, "module-atomica.reconciliation"], [115, "module-atomica.results"], [119, "module-atomica.scenarios"], [125, "module-atomica.system"], [129, "module-atomica.utils"], [142, "module-atomica.version"]], "atomica.calibration": [[1, "module-atomica.calibration"]], "calibrate() (in module atomica.calibration)": [[2, "atomica.calibration.calibrate"]], "atomica.cascade": [[3, "module-atomica.cascade"]], "cascadeensemble (class in atomica.cascade)": [[4, "atomica.cascade.CascadeEnsemble"]], "add() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.add"]], "baseline (atomica.cascade.cascadeensemble attribute)": [[4, "atomica.cascade.CascadeEnsemble.baseline"]], "boxplot() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.boxplot"]], "get_vals() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.get_vals"]], "mapping_function (atomica.cascade.cascadeensemble attribute)": [[4, "atomica.cascade.CascadeEnsemble.mapping_function"]], "n_samples (atomica.cascade.cascadeensemble property)": [[4, "atomica.cascade.CascadeEnsemble.n_samples"]], "outputs (atomica.cascade.cascadeensemble property)": [[4, "atomica.cascade.CascadeEnsemble.outputs"]], "plot_bars() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.plot_bars"]], "plot_distribution() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.plot_distribution"]], "plot_multi_cascade() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.plot_multi_cascade"]], "plot_series() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.plot_series"]], "pops (atomica.cascade.cascadeensemble property)": [[4, "atomica.cascade.CascadeEnsemble.pops"]], "results (atomica.cascade.cascadeensemble property)": [[4, "atomica.cascade.CascadeEnsemble.results"]], "run_sims() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.run_sims"]], "samples (atomica.cascade.cascadeensemble attribute)": [[4, "atomica.cascade.CascadeEnsemble.samples"]], "set_baseline() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.set_baseline"]], "tvec (atomica.cascade.cascadeensemble property)": [[4, "atomica.cascade.CascadeEnsemble.tvec"]], "update() (atomica.cascade.cascadeensemble method)": [[4, "atomica.cascade.CascadeEnsemble.update"]], "invalidcascade": [[5, "atomica.cascade.InvalidCascade"]], "cascade_summary() (in module atomica.cascade)": [[6, "atomica.cascade.cascade_summary"]], "get_cascade_data() (in module atomica.cascade)": [[7, "atomica.cascade.get_cascade_data"]], "get_cascade_vals() (in module atomica.cascade)": [[8, "atomica.cascade.get_cascade_vals"]], "plot_cascade() (in module atomica.cascade)": [[9, "atomica.cascade.plot_cascade"]], "plot_multi_cascade() (in module atomica.cascade)": [[10, "atomica.cascade.plot_multi_cascade"]], "plot_single_cascade() (in module atomica.cascade)": [[11, "atomica.cascade.plot_single_cascade"]], "plot_single_cascade_series() (in module atomica.cascade)": [[12, "atomica.cascade.plot_single_cascade_series"]], "sanitize_cascade() (in module atomica.cascade)": [[13, "atomica.cascade.sanitize_cascade"]], "sanitize_pops() (in module atomica.cascade)": [[14, "atomica.cascade.sanitize_pops"]], "validate_cascade() (in module atomica.cascade)": [[15, "atomica.cascade.validate_cascade"]], "atomica.data": [[16, "module-atomica.data"]], "projectdata (class in atomica.data)": [[17, "atomica.data.ProjectData"]], "add_interaction() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.add_interaction"]], "add_pop() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.add_pop"]], "add_transfer() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.add_transfer"]], "change_tvec() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.change_tvec"]], "end_year (atomica.data.projectdata property)": [[17, "atomica.data.ProjectData.end_year"]], "from_spreadsheet() (atomica.data.projectdata static method)": [[17, "atomica.data.ProjectData.from_spreadsheet"]], "get_tdve_page() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.get_tdve_page"]], "get_ts() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.get_ts"]], "interpops (atomica.data.projectdata attribute)": [[17, "atomica.data.ProjectData.interpops"]], "new() (atomica.data.projectdata static method)": [[17, "atomica.data.ProjectData.new"]], "pops (atomica.data.projectdata attribute)": [[17, "atomica.data.ProjectData.pops"]], "remove_interaction() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.remove_interaction"]], "remove_transfer() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.remove_transfer"]], "rename_pop() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.rename_pop"]], "rename_transfer() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.rename_transfer"]], "save() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.save"]], "start_year (atomica.data.projectdata property)": [[17, "atomica.data.ProjectData.start_year"]], "tdve (atomica.data.projectdata attribute)": [[17, "atomica.data.ProjectData.tdve"]], "tdve_pages (atomica.data.projectdata attribute)": [[17, "atomica.data.ProjectData.tdve_pages"]], "to_spreadsheet() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.to_spreadsheet"]], "to_workbook() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.to_workbook"]], "transfers (atomica.data.projectdata attribute)": [[17, "atomica.data.ProjectData.transfers"]], "tvec (atomica.data.projectdata attribute)": [[17, "atomica.data.ProjectData.tvec"]], "validate() (atomica.data.projectdata method)": [[17, "atomica.data.ProjectData.validate"]], "atomica.demos": [[18, "module-atomica.demos"]], "demo() (in module atomica.demos)": [[19, "atomica.demos.demo"]], "make_demo_scenarios() (in module atomica.demos)": [[20, "atomica.demos.make_demo_scenarios"]], "atomica.excel": [[21, "module-atomica.excel"]], "timedependentconnections (class in atomica.excel)": [[22, "atomica.excel.TimeDependentConnections"]], "assumption_heading (atomica.excel.timedependentconnections attribute)": [[22, "atomica.excel.TimeDependentConnections.assumption_heading"]], "attributes (atomica.excel.timedependentconnections attribute)": [[22, "atomica.excel.TimeDependentConnections.attributes"]], "from_tables() (atomica.excel.timedependentconnections static method)": [[22, "atomica.excel.TimeDependentConnections.from_tables"]], "ts_attributes (atomica.excel.timedependentconnections attribute)": [[22, "atomica.excel.TimeDependentConnections.ts_attributes"]], "write() (atomica.excel.timedependentconnections method)": [[22, "atomica.excel.TimeDependentConnections.write"]], "write_assumption (atomica.excel.timedependentconnections attribute)": [[22, "atomica.excel.TimeDependentConnections.write_assumption"]], "write_uncertainty (atomica.excel.timedependentconnections attribute)": [[22, "atomica.excel.TimeDependentConnections.write_uncertainty"]], "write_units (atomica.excel.timedependentconnections attribute)": [[22, "atomica.excel.TimeDependentConnections.write_units"]], "timedependentvaluesentry (class in atomica.excel)": [[23, "atomica.excel.TimeDependentValuesEntry"]], "assumption_heading (atomica.excel.timedependentvaluesentry attribute)": [[23, "atomica.excel.TimeDependentValuesEntry.assumption_heading"]], "comment (atomica.excel.timedependentvaluesentry attribute)": [[23, "atomica.excel.TimeDependentValuesEntry.comment"]], "from_rows() (atomica.excel.timedependentvaluesentry static method)": [[23, "atomica.excel.TimeDependentValuesEntry.from_rows"]], "has_data (atomica.excel.timedependentvaluesentry property)": [[23, "atomica.excel.TimeDependentValuesEntry.has_data"]], "name (atomica.excel.timedependentvaluesentry attribute)": [[23, "atomica.excel.TimeDependentValuesEntry.name"]], "ts_attributes (atomica.excel.timedependentvaluesentry attribute)": [[23, "atomica.excel.TimeDependentValuesEntry.ts_attributes"]], "tvec (atomica.excel.timedependentvaluesentry attribute)": [[23, "atomica.excel.TimeDependentValuesEntry.tvec"]], "write() (atomica.excel.timedependentvaluesentry method)": [[23, "atomica.excel.TimeDependentValuesEntry.write"]], "write_assumption (atomica.excel.timedependentvaluesentry attribute)": [[23, "atomica.excel.TimeDependentValuesEntry.write_assumption"]], "write_uncertainty (atomica.excel.timedependentvaluesentry attribute)": [[23, "atomica.excel.TimeDependentValuesEntry.write_uncertainty"]], "write_units (atomica.excel.timedependentvaluesentry attribute)": [[23, "atomica.excel.TimeDependentValuesEntry.write_units"]], "apply_widths() (in module atomica.excel)": [[24, "atomica.excel.apply_widths"]], "cell_get_number() (in module atomica.excel)": [[25, "atomica.excel.cell_get_number"]], "cell_get_string() (in module atomica.excel)": [[26, "atomica.excel.cell_get_string"]], "copy_sheet() (in module atomica.excel)": [[27, "atomica.excel.copy_sheet"]], "read_dataframes() (in module atomica.excel)": [[28, "atomica.excel.read_dataframes"]], "read_tables() (in module atomica.excel)": [[29, "atomica.excel.read_tables"]], "standard_formats() (in module atomica.excel)": [[30, "atomica.excel.standard_formats"]], "transfer_comments() (in module atomica.excel)": [[31, "atomica.excel.transfer_comments"]], "update_widths() (in module atomica.excel)": [[32, "atomica.excel.update_widths"]], "validate_category() (in module atomica.excel)": [[33, "atomica.excel.validate_category"]], "atomica.framework": [[34, "module-atomica.framework"]], "invalidframework": [[35, "atomica.framework.InvalidFramework"]], "projectframework (class in atomica.framework)": [[36, "atomica.framework.ProjectFramework"]], "cascades (atomica.framework.projectframework property)": [[36, "atomica.framework.ProjectFramework.cascades"]], "characs (atomica.framework.projectframework property)": [[36, "atomica.framework.ProjectFramework.characs"]], "comps (atomica.framework.projectframework property)": [[36, "atomica.framework.ProjectFramework.comps"]], "created (atomica.framework.projectframework attribute)": [[36, "atomica.framework.ProjectFramework.created"]], "get_charac() (atomica.framework.projectframework method)": [[36, "atomica.framework.ProjectFramework.get_charac"]], "get_charac_includes() (atomica.framework.projectframework method)": [[36, "atomica.framework.ProjectFramework.get_charac_includes"]], "get_comp() (atomica.framework.projectframework method)": [[36, "atomica.framework.ProjectFramework.get_comp"]], "get_databook_units() (atomica.framework.projectframework method)": [[36, "atomica.framework.ProjectFramework.get_databook_units"]], "get_interaction() (atomica.framework.projectframework method)": [[36, "atomica.framework.ProjectFramework.get_interaction"]], "get_label() (atomica.framework.projectframework method)": [[36, "atomica.framework.ProjectFramework.get_label"]], "get_par() (atomica.framework.projectframework method)": [[36, "atomica.framework.ProjectFramework.get_par"]], "get_variable() (atomica.framework.projectframework method)": [[36, "atomica.framework.ProjectFramework.get_variable"]], "gitinfo (atomica.framework.projectframework attribute)": [[36, "atomica.framework.ProjectFramework.gitinfo"]], "interactions (atomica.framework.projectframework property)": [[36, "atomica.framework.ProjectFramework.interactions"]], "modified (atomica.framework.projectframework attribute)": [[36, "atomica.framework.ProjectFramework.modified"]], "name (atomica.framework.projectframework property)": [[36, "atomica.framework.ProjectFramework.name"]], "pars (atomica.framework.projectframework property)": [[36, "atomica.framework.ProjectFramework.pars"]], "pop_types (atomica.framework.projectframework property)": [[36, "atomica.framework.ProjectFramework.pop_types"]], "save() (atomica.framework.projectframework method)": [[36, "atomica.framework.ProjectFramework.save"]], "sheets (atomica.framework.projectframework attribute)": [[36, "atomica.framework.ProjectFramework.sheets"]], "spreadsheet (atomica.framework.projectframework attribute)": [[36, "atomica.framework.ProjectFramework.spreadsheet"]], "to_spreadsheet() (atomica.framework.projectframework method)": [[36, "atomica.framework.ProjectFramework.to_spreadsheet"]], "uid (atomica.framework.projectframework attribute)": [[36, "atomica.framework.ProjectFramework.uid"]], "version (atomica.framework.projectframework attribute)": [[36, "atomica.framework.ProjectFramework.version"]], "generate_framework_doc() (in module atomica.framework)": [[37, "atomica.framework.generate_framework_doc"]], "atomica.function_parser": [[38, "module-atomica.function_parser"]], "parse_function() (in module atomica.function_parser)": [[39, "atomica.function_parser.parse_function"]], "sdiv() (in module atomica.function_parser)": [[40, "atomica.function_parser.sdiv"]], "vector_max() (in module atomica.function_parser)": [[41, "atomica.function_parser.vector_max"]], "vector_min() (in module atomica.function_parser)": [[42, "atomica.function_parser.vector_min"]], "atomica.migration": [[43, "module-atomica.migration"]], "migration (class in atomica.migration)": [[44, "atomica.migration.Migration"]], "all_frameworks() (in module atomica.migration)": [[45, "atomica.migration.all_frameworks"]], "all_progsets() (in module atomica.migration)": [[46, "atomica.migration.all_progsets"]], "all_results() (in module atomica.migration)": [[47, "atomica.migration.all_results"]], "migrate() (in module atomica.migration)": [[48, "atomica.migration.migrate"]], "migration() (in module atomica.migration)": [[49, "atomica.migration.migration"]], "register_migration() (in module atomica.migration)": [[50, "atomica.migration.register_migration"]], "atomica.model": [[51, "module-atomica.model"]], "badinitialization": [[52, "atomica.model.BadInitialization"]], "characteristic (class in atomica.model)": [[53, "atomica.model.Characteristic"]], "id (atomica.model.characteristic attribute)": [[53, "atomica.model.Characteristic.id"]], "name (atomica.model.characteristic property)": [[53, "atomica.model.Characteristic.name"]], "plot() (atomica.model.characteristic method)": [[53, "atomica.model.Characteristic.plot"]], "pop (atomica.model.characteristic attribute)": [[53, "atomica.model.Characteristic.pop"]], "preallocate() (atomica.model.characteristic method)": [[53, "atomica.model.Characteristic.preallocate"]], "set_dynamic() (atomica.model.characteristic method)": [[53, "atomica.model.Characteristic.set_dynamic"]], "units (atomica.model.characteristic attribute)": [[53, "atomica.model.Characteristic.units"]], "update() (atomica.model.characteristic method)": [[53, "atomica.model.Characteristic.update"]], "compartment (class in atomica.model)": [[54, "atomica.model.Compartment"]], "connect() (atomica.model.compartment method)": [[54, "atomica.model.Compartment.connect"]], "id (atomica.model.compartment attribute)": [[54, "atomica.model.Compartment.id"]], "name (atomica.model.compartment property)": [[54, "atomica.model.Compartment.name"]], "outflow (atomica.model.compartment property)": [[54, "atomica.model.Compartment.outflow"]], "plot() (atomica.model.compartment method)": [[54, "atomica.model.Compartment.plot"]], "pop (atomica.model.compartment attribute)": [[54, "atomica.model.Compartment.pop"]], "preallocate() (atomica.model.compartment method)": [[54, "atomica.model.Compartment.preallocate"]], "resolve_outflows() (atomica.model.compartment method)": [[54, "atomica.model.Compartment.resolve_outflows"]], "set_dynamic() (atomica.model.compartment method)": [[54, "atomica.model.Compartment.set_dynamic"]], "units (atomica.model.compartment attribute)": [[54, "atomica.model.Compartment.units"]], "update() (atomica.model.compartment method)": [[54, "atomica.model.Compartment.update"]], "junctioncompartment (class in atomica.model)": [[55, "atomica.model.JunctionCompartment"]], "balance() (atomica.model.junctioncompartment method)": [[55, "atomica.model.JunctionCompartment.balance"]], "connect() (atomica.model.junctioncompartment method)": [[55, "atomica.model.JunctionCompartment.connect"]], "duration_group (atomica.model.junctioncompartment attribute)": [[55, "atomica.model.JunctionCompartment.duration_group"]], "id (atomica.model.junctioncompartment attribute)": [[55, "atomica.model.JunctionCompartment.id"]], "initial_flush() (atomica.model.junctioncompartment method)": [[55, "atomica.model.JunctionCompartment.initial_flush"]], "name (atomica.model.junctioncompartment property)": [[55, "atomica.model.JunctionCompartment.name"]], "outflow (atomica.model.junctioncompartment property)": [[55, "atomica.model.JunctionCompartment.outflow"]], "plot() (atomica.model.junctioncompartment method)": [[55, "atomica.model.JunctionCompartment.plot"]], "pop (atomica.model.junctioncompartment attribute)": [[55, "atomica.model.JunctionCompartment.pop"]], "preallocate() (atomica.model.junctioncompartment method)": [[55, "atomica.model.JunctionCompartment.preallocate"]], "resolve_outflows() (atomica.model.junctioncompartment method)": [[55, "atomica.model.JunctionCompartment.resolve_outflows"]], "set_dynamic() (atomica.model.junctioncompartment method)": [[55, "atomica.model.JunctionCompartment.set_dynamic"]], "units (atomica.model.junctioncompartment attribute)": [[55, "atomica.model.JunctionCompartment.units"]], "update() (atomica.model.junctioncompartment method)": [[55, "atomica.model.JunctionCompartment.update"]], "link (class in atomica.model)": [[56, "atomica.model.Link"]], "create() (atomica.model.link class method)": [[56, "atomica.model.Link.create"]], "id (atomica.model.link attribute)": [[56, "atomica.model.Link.id"]], "name (atomica.model.link property)": [[56, "atomica.model.Link.name"]], "plot() (atomica.model.link method)": [[56, "atomica.model.Link.plot"]], "pop (atomica.model.link attribute)": [[56, "atomica.model.Link.pop"]], "preallocate() (atomica.model.link method)": [[56, "atomica.model.Link.preallocate"]], "set_dynamic() (atomica.model.link method)": [[56, "atomica.model.Link.set_dynamic"]], "units (atomica.model.link attribute)": [[56, "atomica.model.Link.units"]], "update() (atomica.model.link method)": [[56, "atomica.model.Link.update"]], "model (class in atomica.model)": [[57, "atomica.model.Model"]], "build() (atomica.model.model method)": [[57, "atomica.model.Model.build"]], "dt (atomica.model.model attribute)": [[57, "atomica.model.Model.dt"]], "flush_junctions() (atomica.model.model method)": [[57, "atomica.model.Model.flush_junctions"]], "get_pop() (atomica.model.model method)": [[57, "atomica.model.Model.get_pop"]], "process() (atomica.model.model method)": [[57, "atomica.model.Model.process"]], "relink() (atomica.model.model method)": [[57, "atomica.model.Model.relink"]], "t (atomica.model.model attribute)": [[57, "atomica.model.Model.t"]], "unlink() (atomica.model.model method)": [[57, "atomica.model.Model.unlink"]], "update_comps() (atomica.model.model method)": [[57, "atomica.model.Model.update_comps"]], "update_links() (atomica.model.model method)": [[57, "atomica.model.Model.update_links"]], "update_pars() (atomica.model.model method)": [[57, "atomica.model.Model.update_pars"]], "modelerror": [[58, "atomica.model.ModelError"]], "parameter (class in atomica.model)": [[59, "atomica.model.Parameter"]], "constrain() (atomica.model.parameter method)": [[59, "atomica.model.Parameter.constrain"]], "deps (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.deps"]], "derivative (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.derivative"]], "fcn_str (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.fcn_str"]], "id (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.id"]], "limits (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.limits"]], "links (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.links"]], "name (atomica.model.parameter property)": [[59, "atomica.model.Parameter.name"]], "plot() (atomica.model.parameter method)": [[59, "atomica.model.Parameter.plot"]], "pop (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.pop"]], "pop_aggregation (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.pop_aggregation"]], "preallocate() (atomica.model.parameter method)": [[59, "atomica.model.Parameter.preallocate"]], "scale_factor (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.scale_factor"]], "set_dynamic() (atomica.model.parameter method)": [[59, "atomica.model.Parameter.set_dynamic"]], "set_fcn() (atomica.model.parameter method)": [[59, "atomica.model.Parameter.set_fcn"]], "skip_function (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.skip_function"]], "timescale (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.timescale"]], "units (atomica.model.parameter attribute)": [[59, "atomica.model.Parameter.units"]], "update() (atomica.model.parameter method)": [[59, "atomica.model.Parameter.update"]], "population (class in atomica.model)": [[60, "atomica.model.Population"]], "build() (atomica.model.population method)": [[60, "atomica.model.Population.build"]], "charac_lookup (atomica.model.population attribute)": [[60, "atomica.model.Population.charac_lookup"]], "characs (atomica.model.population attribute)": [[60, "atomica.model.Population.characs"]], "comp_lookup (atomica.model.population attribute)": [[60, "atomica.model.Population.comp_lookup"]], "comps (atomica.model.population attribute)": [[60, "atomica.model.Population.comps"]], "get_charac() (atomica.model.population method)": [[60, "atomica.model.Population.get_charac"]], "get_comp() (atomica.model.population method)": [[60, "atomica.model.Population.get_comp"]], "get_links() (atomica.model.population method)": [[60, "atomica.model.Population.get_links"]], "get_par() (atomica.model.population method)": [[60, "atomica.model.Population.get_par"]], "get_variable() (atomica.model.population method)": [[60, "atomica.model.Population.get_variable"]], "initialize_compartments() (atomica.model.population method)": [[60, "atomica.model.Population.initialize_compartments"]], "label (atomica.model.population attribute)": [[60, "atomica.model.Population.label"]], "link_lookup (atomica.model.population attribute)": [[60, "atomica.model.Population.link_lookup"]], "links (atomica.model.population attribute)": [[60, "atomica.model.Population.links"]], "name (atomica.model.population attribute)": [[60, "atomica.model.Population.name"]], "par_lookup (atomica.model.population attribute)": [[60, "atomica.model.Population.par_lookup"]], "pars (atomica.model.population attribute)": [[60, "atomica.model.Population.pars"]], "popsize() (atomica.model.population method)": [[60, "atomica.model.Population.popsize"]], "type (atomica.model.population attribute)": [[60, "atomica.model.Population.type"]], "residualjunctioncompartment (class in atomica.model)": [[61, "atomica.model.ResidualJunctionCompartment"]], "balance() (atomica.model.residualjunctioncompartment method)": [[61, "atomica.model.ResidualJunctionCompartment.balance"]], "connect() (atomica.model.residualjunctioncompartment method)": [[61, "atomica.model.ResidualJunctionCompartment.connect"]], "duration_group (atomica.model.residualjunctioncompartment attribute)": [[61, "atomica.model.ResidualJunctionCompartment.duration_group"]], "id (atomica.model.residualjunctioncompartment attribute)": [[61, "atomica.model.ResidualJunctionCompartment.id"]], "initial_flush() (atomica.model.residualjunctioncompartment method)": [[61, "atomica.model.ResidualJunctionCompartment.initial_flush"]], "name (atomica.model.residualjunctioncompartment property)": [[61, "atomica.model.ResidualJunctionCompartment.name"]], "outflow (atomica.model.residualjunctioncompartment property)": [[61, "atomica.model.ResidualJunctionCompartment.outflow"]], "plot() (atomica.model.residualjunctioncompartment method)": [[61, "atomica.model.ResidualJunctionCompartment.plot"]], "pop (atomica.model.residualjunctioncompartment attribute)": [[61, "atomica.model.ResidualJunctionCompartment.pop"]], "preallocate() (atomica.model.residualjunctioncompartment method)": [[61, "atomica.model.ResidualJunctionCompartment.preallocate"]], "resolve_outflows() (atomica.model.residualjunctioncompartment method)": [[61, "atomica.model.ResidualJunctionCompartment.resolve_outflows"]], "set_dynamic() (atomica.model.residualjunctioncompartment method)": [[61, "atomica.model.ResidualJunctionCompartment.set_dynamic"]], "units (atomica.model.residualjunctioncompartment attribute)": [[61, "atomica.model.ResidualJunctionCompartment.units"]], "update() (atomica.model.residualjunctioncompartment method)": [[61, "atomica.model.ResidualJunctionCompartment.update"]], "sinkcompartment (class in atomica.model)": [[62, "atomica.model.SinkCompartment"]], "connect() (atomica.model.sinkcompartment method)": [[62, "atomica.model.SinkCompartment.connect"]], "id (atomica.model.sinkcompartment attribute)": [[62, "atomica.model.SinkCompartment.id"]], "name (atomica.model.sinkcompartment property)": [[62, "atomica.model.SinkCompartment.name"]], "outflow (atomica.model.sinkcompartment property)": [[62, "atomica.model.SinkCompartment.outflow"]], "plot() (atomica.model.sinkcompartment method)": [[62, "atomica.model.SinkCompartment.plot"]], "pop (atomica.model.sinkcompartment attribute)": [[62, "atomica.model.SinkCompartment.pop"]], "preallocate() (atomica.model.sinkcompartment method)": [[62, "atomica.model.SinkCompartment.preallocate"]], "resolve_outflows() (atomica.model.sinkcompartment method)": [[62, "atomica.model.SinkCompartment.resolve_outflows"]], "set_dynamic() (atomica.model.sinkcompartment method)": [[62, "atomica.model.SinkCompartment.set_dynamic"]], "units (atomica.model.sinkcompartment attribute)": [[62, "atomica.model.SinkCompartment.units"]], "update() (atomica.model.sinkcompartment method)": [[62, "atomica.model.SinkCompartment.update"]], "sourcecompartment (class in atomica.model)": [[63, "atomica.model.SourceCompartment"]], "connect() (atomica.model.sourcecompartment method)": [[63, "atomica.model.SourceCompartment.connect"]], "id (atomica.model.sourcecompartment attribute)": [[63, "atomica.model.SourceCompartment.id"]], "name (atomica.model.sourcecompartment property)": [[63, "atomica.model.SourceCompartment.name"]], "outflow (atomica.model.sourcecompartment property)": [[63, "atomica.model.SourceCompartment.outflow"]], "plot() (atomica.model.sourcecompartment method)": [[63, "atomica.model.SourceCompartment.plot"]], "pop (atomica.model.sourcecompartment attribute)": [[63, "atomica.model.SourceCompartment.pop"]], "preallocate() (atomica.model.sourcecompartment method)": [[63, "atomica.model.SourceCompartment.preallocate"]], "resolve_outflows() (atomica.model.sourcecompartment method)": [[63, "atomica.model.SourceCompartment.resolve_outflows"]], "set_dynamic() (atomica.model.sourcecompartment method)": [[63, "atomica.model.SourceCompartment.set_dynamic"]], "units (atomica.model.sourcecompartment attribute)": [[63, "atomica.model.SourceCompartment.units"]], "update() (atomica.model.sourcecompartment method)": [[63, "atomica.model.SourceCompartment.update"]], "timedcompartment (class in atomica.model)": [[64, "atomica.model.TimedCompartment"]], "connect() (atomica.model.timedcompartment method)": [[64, "atomica.model.TimedCompartment.connect"]], "flush_link (atomica.model.timedcompartment attribute)": [[64, "atomica.model.TimedCompartment.flush_link"]], "id (atomica.model.timedcompartment attribute)": [[64, "atomica.model.TimedCompartment.id"]], "name (atomica.model.timedcompartment property)": [[64, "atomica.model.TimedCompartment.name"]], "outflow (atomica.model.timedcompartment property)": [[64, "atomica.model.TimedCompartment.outflow"]], "parameter (atomica.model.timedcompartment attribute)": [[64, "atomica.model.TimedCompartment.parameter"]], "plot() (atomica.model.timedcompartment method)": [[64, "atomica.model.TimedCompartment.plot"]], "pop (atomica.model.timedcompartment attribute)": [[64, "atomica.model.TimedCompartment.pop"]], "preallocate() (atomica.model.timedcompartment method)": [[64, "atomica.model.TimedCompartment.preallocate"]], "resolve_outflows() (atomica.model.timedcompartment method)": [[64, "atomica.model.TimedCompartment.resolve_outflows"]], "set_dynamic() (atomica.model.timedcompartment method)": [[64, "atomica.model.TimedCompartment.set_dynamic"]], "units (atomica.model.timedcompartment attribute)": [[64, "atomica.model.TimedCompartment.units"]], "update() (atomica.model.timedcompartment method)": [[64, "atomica.model.TimedCompartment.update"]], "vals (atomica.model.timedcompartment property)": [[64, "atomica.model.TimedCompartment.vals"]], "timedlink (class in atomica.model)": [[65, "atomica.model.TimedLink"]], "create() (atomica.model.timedlink class method)": [[65, "atomica.model.TimedLink.create"]], "id (atomica.model.timedlink attribute)": [[65, "atomica.model.TimedLink.id"]], "name (atomica.model.timedlink property)": [[65, "atomica.model.TimedLink.name"]], "plot() (atomica.model.timedlink method)": [[65, "atomica.model.TimedLink.plot"]], "pop (atomica.model.timedlink attribute)": [[65, "atomica.model.TimedLink.pop"]], "preallocate() (atomica.model.timedlink method)": [[65, "atomica.model.TimedLink.preallocate"]], "set_dynamic() (atomica.model.timedlink method)": [[65, "atomica.model.TimedLink.set_dynamic"]], "units (atomica.model.timedlink attribute)": [[65, "atomica.model.TimedLink.units"]], "update() (atomica.model.timedlink method)": [[65, "atomica.model.TimedLink.update"]], "vals (atomica.model.timedlink property)": [[65, "atomica.model.TimedLink.vals"]], "variable (class in atomica.model)": [[66, "atomica.model.Variable"]], "id (atomica.model.variable attribute)": [[66, "atomica.model.Variable.id"]], "name (atomica.model.variable property)": [[66, "atomica.model.Variable.name"]], "plot() (atomica.model.variable method)": [[66, "atomica.model.Variable.plot"]], "pop (atomica.model.variable attribute)": [[66, "atomica.model.Variable.pop"]], "preallocate() (atomica.model.variable method)": [[66, "atomica.model.Variable.preallocate"]], "set_dynamic() (atomica.model.variable method)": [[66, "atomica.model.Variable.set_dynamic"]], "units (atomica.model.variable attribute)": [[66, "atomica.model.Variable.units"]], "update() (atomica.model.variable method)": [[66, "atomica.model.Variable.update"]], "run_model() (in module atomica.model)": [[67, "atomica.model.run_model"]], "atomica.optimization": [[68, "module-atomica.optimization"]], "adjustable (class in atomica.optimization)": [[69, "atomica.optimization.Adjustable"]], "get_hard_bounds() (atomica.optimization.adjustable method)": [[69, "atomica.optimization.Adjustable.get_hard_bounds"]], "adjustment (class in atomica.optimization)": [[70, "atomica.optimization.Adjustment"]], "adjustables (atomica.optimization.adjustment attribute)": [[70, "atomica.optimization.Adjustment.adjustables"]], "get_initialization() (atomica.optimization.adjustment method)": [[70, "atomica.optimization.Adjustment.get_initialization"]], "atleastmeasurable (class in atomica.optimization)": [[71, "atomica.optimization.AtLeastMeasurable"]], "get_baseline() (atomica.optimization.atleastmeasurable method)": [[71, "atomica.optimization.AtLeastMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.atleastmeasurable method)": [[71, "atomica.optimization.AtLeastMeasurable.get_objective_val"]], "atmostmeasurable (class in atomica.optimization)": [[72, "atomica.optimization.AtMostMeasurable"]], "get_baseline() (atomica.optimization.atmostmeasurable method)": [[72, "atomica.optimization.AtMostMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.atmostmeasurable method)": [[72, "atomica.optimization.AtMostMeasurable.get_objective_val"]], "constraint (class in atomica.optimization)": [[73, "atomica.optimization.Constraint"]], "constrain_instructions() (atomica.optimization.constraint method)": [[73, "atomica.optimization.Constraint.constrain_instructions"]], "get_hard_constraint() (atomica.optimization.constraint method)": [[73, "atomica.optimization.Constraint.get_hard_constraint"]], "decreasebymeasurable (class in atomica.optimization)": [[74, "atomica.optimization.DecreaseByMeasurable"]], "get_baseline() (atomica.optimization.decreasebymeasurable method)": [[74, "atomica.optimization.DecreaseByMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.decreasebymeasurable method)": [[74, "atomica.optimization.DecreaseByMeasurable.get_objective_val"]], "exponentialspendingadjustment (class in atomica.optimization)": [[75, "atomica.optimization.ExponentialSpendingAdjustment"]], "adjustables (atomica.optimization.exponentialspendingadjustment attribute)": [[75, "atomica.optimization.ExponentialSpendingAdjustment.adjustables"]], "get_initialization() (atomica.optimization.exponentialspendingadjustment method)": [[75, "atomica.optimization.ExponentialSpendingAdjustment.get_initialization"]], "failedconstraint": [[76, "atomica.optimization.FailedConstraint"]], "increasebymeasurable (class in atomica.optimization)": [[77, "atomica.optimization.IncreaseByMeasurable"]], "get_baseline() (atomica.optimization.increasebymeasurable method)": [[77, "atomica.optimization.IncreaseByMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.increasebymeasurable method)": [[77, "atomica.optimization.IncreaseByMeasurable.get_objective_val"]], "invalidinitialconditions": [[78, "atomica.optimization.InvalidInitialConditions"]], "maximizecascadeconversionrate (class in atomica.optimization)": [[79, "atomica.optimization.MaximizeCascadeConversionRate"]], "get_baseline() (atomica.optimization.maximizecascadeconversionrate method)": [[79, "atomica.optimization.MaximizeCascadeConversionRate.get_baseline"]], "get_objective_val() (atomica.optimization.maximizecascadeconversionrate method)": [[79, "atomica.optimization.MaximizeCascadeConversionRate.get_objective_val"]], "maximizecascadestage (class in atomica.optimization)": [[80, "atomica.optimization.MaximizeCascadeStage"]], "get_baseline() (atomica.optimization.maximizecascadestage method)": [[80, "atomica.optimization.MaximizeCascadeStage.get_baseline"]], "get_objective_val() (atomica.optimization.maximizecascadestage method)": [[80, "atomica.optimization.MaximizeCascadeStage.get_objective_val"]], "maximizemeasurable (class in atomica.optimization)": [[81, "atomica.optimization.MaximizeMeasurable"]], "get_baseline() (atomica.optimization.maximizemeasurable method)": [[81, "atomica.optimization.MaximizeMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.maximizemeasurable method)": [[81, "atomica.optimization.MaximizeMeasurable.get_objective_val"]], "measurable (class in atomica.optimization)": [[82, "atomica.optimization.Measurable"]], "get_baseline() (atomica.optimization.measurable method)": [[82, "atomica.optimization.Measurable.get_baseline"]], "get_objective_val() (atomica.optimization.measurable method)": [[82, "atomica.optimization.Measurable.get_objective_val"]], "minimizemeasurable (class in atomica.optimization)": [[83, "atomica.optimization.MinimizeMeasurable"]], "get_baseline() (atomica.optimization.minimizemeasurable method)": [[83, "atomica.optimization.MinimizeMeasurable.get_baseline"]], "get_objective_val() (atomica.optimization.minimizemeasurable method)": [[83, "atomica.optimization.MinimizeMeasurable.get_objective_val"]], "optimization (class in atomica.optimization)": [[84, "atomica.optimization.Optimization"]], "compute_objective() (atomica.optimization.optimization method)": [[84, "atomica.optimization.Optimization.compute_objective"]], "constrain_instructions() (atomica.optimization.optimization method)": [[84, "atomica.optimization.Optimization.constrain_instructions"]], "get_adjustment() (atomica.optimization.optimization method)": [[84, "atomica.optimization.Optimization.get_adjustment"]], "get_baselines() (atomica.optimization.optimization method)": [[84, "atomica.optimization.Optimization.get_baselines"]], "get_hard_constraints() (atomica.optimization.optimization method)": [[84, "atomica.optimization.Optimization.get_hard_constraints"]], "get_initialization() (atomica.optimization.optimization method)": [[84, "atomica.optimization.Optimization.get_initialization"]], "maxiters (atomica.optimization.optimization attribute)": [[84, "atomica.optimization.Optimization.maxiters"]], "maxtime (atomica.optimization.optimization attribute)": [[84, "atomica.optimization.Optimization.maxtime"]], "method (atomica.optimization.optimization attribute)": [[84, "atomica.optimization.Optimization.method"]], "update_instructions() (atomica.optimization.optimization method)": [[84, "atomica.optimization.Optimization.update_instructions"]], "pairedlinearspendingadjustment (class in atomica.optimization)": [[85, "atomica.optimization.PairedLinearSpendingAdjustment"]], "adjustables (atomica.optimization.pairedlinearspendingadjustment attribute)": [[85, "atomica.optimization.PairedLinearSpendingAdjustment.adjustables"]], "get_initialization() (atomica.optimization.pairedlinearspendingadjustment method)": [[85, "atomica.optimization.PairedLinearSpendingAdjustment.get_initialization"]], "spendingadjustment (class in atomica.optimization)": [[86, "atomica.optimization.SpendingAdjustment"]], "adjustables (atomica.optimization.spendingadjustment attribute)": [[86, "atomica.optimization.SpendingAdjustment.adjustables"]], "get_initialization() (atomica.optimization.spendingadjustment method)": [[86, "atomica.optimization.SpendingAdjustment.get_initialization"]], "spendingpackageadjustment (class in atomica.optimization)": [[87, "atomica.optimization.SpendingPackageAdjustment"]], "adjust_total_spend (atomica.optimization.spendingpackageadjustment property)": [[87, "atomica.optimization.SpendingPackageAdjustment.adjust_total_spend"]], "adjustables (atomica.optimization.spendingpackageadjustment attribute)": [[87, "atomica.optimization.SpendingPackageAdjustment.adjustables"]], "get_initialization() (atomica.optimization.spendingpackageadjustment method)": [[87, "atomica.optimization.SpendingPackageAdjustment.get_initialization"]], "starttimeadjustment (class in atomica.optimization)": [[88, "atomica.optimization.StartTimeAdjustment"]], "adjustables (atomica.optimization.starttimeadjustment attribute)": [[88, "atomica.optimization.StartTimeAdjustment.adjustables"]], "get_initialization() (atomica.optimization.starttimeadjustment method)": [[88, "atomica.optimization.StartTimeAdjustment.get_initialization"]], "totalspendconstraint (class in atomica.optimization)": [[89, "atomica.optimization.TotalSpendConstraint"]], "constrain_instructions() (atomica.optimization.totalspendconstraint method)": [[89, "atomica.optimization.TotalSpendConstraint.constrain_instructions"]], "get_hard_constraint() (atomica.optimization.totalspendconstraint method)": [[89, "atomica.optimization.TotalSpendConstraint.get_hard_constraint"]], "unresolvableconstraint": [[90, "atomica.optimization.UnresolvableConstraint"]], "constrain_sum_bounded() (in module atomica.optimization)": [[91, "atomica.optimization.constrain_sum_bounded"]], "optimize() (in module atomica.optimization)": [[92, "atomica.optimization.optimize"]], "atomica.parameters": [[93, "module-atomica.parameters"]], "parameter (class in atomica.parameters)": [[94, "atomica.parameters.Parameter"]], "has_values() (atomica.parameters.parameter method)": [[94, "atomica.parameters.Parameter.has_values"]], "interpolate() (atomica.parameters.parameter method)": [[94, "atomica.parameters.Parameter.interpolate"]], "pops (atomica.parameters.parameter property)": [[94, "atomica.parameters.Parameter.pops"]], "sample() (atomica.parameters.parameter method)": [[94, "atomica.parameters.Parameter.sample"]], "smooth() (atomica.parameters.parameter method)": [[94, "atomica.parameters.Parameter.smooth"]], "parameterset (class in atomica.parameters)": [[95, "atomica.parameters.ParameterSet"]], "all_pars() (atomica.parameters.parameterset method)": [[95, "atomica.parameters.ParameterSet.all_pars"]], "calibration_spreadsheet() (atomica.parameters.parameterset method)": [[95, "atomica.parameters.ParameterSet.calibration_spreadsheet"]], "get_par() (atomica.parameters.parameterset method)": [[95, "atomica.parameters.ParameterSet.get_par"]], "load_calibration() (atomica.parameters.parameterset method)": [[95, "atomica.parameters.ParameterSet.load_calibration"]], "sample() (atomica.parameters.parameterset method)": [[95, "atomica.parameters.ParameterSet.sample"]], "save_calibration() (atomica.parameters.parameterset method)": [[95, "atomica.parameters.ParameterSet.save_calibration"]], "y_factors (atomica.parameters.parameterset property)": [[95, "atomica.parameters.ParameterSet.y_factors"]], "atomica.plotting": [[96, "module-atomica.plotting"]], "plotdata (class in atomica.plotting)": [[97, "atomica.plotting.PlotData"]], "__getitem__() (atomica.plotting.plotdata method)": [[97, "atomica.plotting.PlotData.__getitem__"]], "accumulate() (atomica.plotting.plotdata method)": [[97, "atomica.plotting.PlotData.accumulate"]], "interpolate() (atomica.plotting.plotdata method)": [[97, "atomica.plotting.PlotData.interpolate"]], "programs() (atomica.plotting.plotdata static method)": [[97, "atomica.plotting.PlotData.programs"]], "set_colors() (atomica.plotting.plotdata method)": [[97, "atomica.plotting.PlotData.set_colors"]], "time_aggregate() (atomica.plotting.plotdata method)": [[97, "atomica.plotting.PlotData.time_aggregate"]], "tvals() (atomica.plotting.plotdata method)": [[97, "atomica.plotting.PlotData.tvals"]], "series (class in atomica.plotting)": [[98, "atomica.plotting.Series"]], "data_label (atomica.plotting.series attribute)": [[98, "atomica.plotting.Series.data_label"]], "data_pop (atomica.plotting.series attribute)": [[98, "atomica.plotting.Series.data_pop"]], "interpolate() (atomica.plotting.series method)": [[98, "atomica.plotting.Series.interpolate"]], "timescale (atomica.plotting.series attribute)": [[98, "atomica.plotting.Series.timescale"]], "unit_string (atomica.plotting.series property)": [[98, "atomica.plotting.Series.unit_string"]], "units (atomica.plotting.series attribute)": [[98, "atomica.plotting.Series.units"]], "plot_bars() (in module atomica.plotting)": [[99, "atomica.plotting.plot_bars"]], "plot_legend() (in module atomica.plotting)": [[100, "atomica.plotting.plot_legend"]], "plot_series() (in module atomica.plotting)": [[101, "atomica.plotting.plot_series"]], "relabel_legend() (in module atomica.plotting)": [[102, "atomica.plotting.relabel_legend"]], "reorder_legend() (in module atomica.plotting)": [[103, "atomica.plotting.reorder_legend"]], "save_figs() (in module atomica.plotting)": [[104, "atomica.plotting.save_figs"]], "atomica.programs": [[105, "module-atomica.programs"]], "covout (class in atomica.programs)": [[106, "atomica.programs.Covout"]], "compute_impact_interaction() (atomica.programs.covout method)": [[106, "atomica.programs.Covout.compute_impact_interaction"]], "get_outcome() (atomica.programs.covout method)": [[106, "atomica.programs.Covout.get_outcome"]], "n_progs (atomica.programs.covout property)": [[106, "atomica.programs.Covout.n_progs"]], "sample() (atomica.programs.covout method)": [[106, "atomica.programs.Covout.sample"]], "update_outcomes() (atomica.programs.covout method)": [[106, "atomica.programs.Covout.update_outcomes"]], "program (class in atomica.programs)": [[107, "atomica.programs.Program"]], "baseline_spend (atomica.programs.program attribute)": [[107, "atomica.programs.Program.baseline_spend"]], "capacity_constraint (atomica.programs.program attribute)": [[107, "atomica.programs.Program.capacity_constraint"]], "coverage (atomica.programs.program attribute)": [[107, "atomica.programs.Program.coverage"]], "get_capacity() (atomica.programs.program method)": [[107, "atomica.programs.Program.get_capacity"]], "get_prop_covered() (atomica.programs.program method)": [[107, "atomica.programs.Program.get_prop_covered"]], "get_spend() (atomica.programs.program method)": [[107, "atomica.programs.Program.get_spend"]], "is_one_off (atomica.programs.program property)": [[107, "atomica.programs.Program.is_one_off"]], "label (atomica.programs.program attribute)": [[107, "atomica.programs.Program.label"]], "name (atomica.programs.program attribute)": [[107, "atomica.programs.Program.name"]], "sample() (atomica.programs.program method)": [[107, "atomica.programs.Program.sample"]], "saturation (atomica.programs.program attribute)": [[107, "atomica.programs.Program.saturation"]], "spend_data (atomica.programs.program attribute)": [[107, "atomica.programs.Program.spend_data"]], "target_comps (atomica.programs.program attribute)": [[107, "atomica.programs.Program.target_comps"]], "target_pops (atomica.programs.program attribute)": [[107, "atomica.programs.Program.target_pops"]], "unit_cost (atomica.programs.program attribute)": [[107, "atomica.programs.Program.unit_cost"]], "programinstructions (class in atomica.programs)": [[108, "atomica.programs.ProgramInstructions"]], "scale_alloc() (atomica.programs.programinstructions method)": [[108, "atomica.programs.ProgramInstructions.scale_alloc"]], "programset (class in atomica.programs)": [[109, "atomica.programs.ProgramSet"]], "add_comp() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.add_comp"]], "add_par() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.add_par"]], "add_pop() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.add_pop"]], "add_program() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.add_program"]], "from_spreadsheet() (atomica.programs.programset class method)": [[109, "atomica.programs.ProgramSet.from_spreadsheet"]], "get_alloc() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.get_alloc"]], "get_capacities() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.get_capacities"]], "get_outcomes() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.get_outcomes"]], "get_prop_coverage() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.get_prop_coverage"]], "new() (atomica.programs.programset static method)": [[109, "atomica.programs.ProgramSet.new"]], "remove_comp() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.remove_comp"]], "remove_par() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.remove_par"]], "remove_pop() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.remove_pop"]], "remove_program() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.remove_program"]], "sample() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.sample"]], "to_spreadsheet() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.to_spreadsheet"]], "to_workbook() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.to_workbook"]], "validate() (atomica.programs.programset method)": [[109, "atomica.programs.ProgramSet.validate"]], "atomica.project": [[110, "module-atomica.project"]], "project (class in atomica.project)": [[111, "atomica.project.Project"]], "calibrate() (atomica.project.project method)": [[111, "atomica.project.Project.calibrate"]], "create_databook() (atomica.project.project method)": [[111, "atomica.project.Project.create_databook"]], "load() (atomica.project.project static method)": [[111, "atomica.project.Project.load"]], "load_databook() (atomica.project.project method)": [[111, "atomica.project.Project.load_databook"]], "load_progbook() (atomica.project.project method)": [[111, "atomica.project.Project.load_progbook"]], "make_parset() (atomica.project.project method)": [[111, "atomica.project.Project.make_parset"]], "make_progbook() (atomica.project.project method)": [[111, "atomica.project.Project.make_progbook"]], "make_scenario() (atomica.project.project method)": [[111, "atomica.project.Project.make_scenario"]], "optim() (atomica.project.project method)": [[111, "atomica.project.Project.optim"]], "parset() (atomica.project.project method)": [[111, "atomica.project.Project.parset"]], "parsets (atomica.project.project attribute)": [[111, "atomica.project.Project.parsets"]], "progset() (atomica.project.project method)": [[111, "atomica.project.Project.progset"]], "result() (atomica.project.project method)": [[111, "atomica.project.Project.result"]], "run_optimization() (atomica.project.project method)": [[111, "atomica.project.Project.run_optimization"]], "run_sampled_sims() (atomica.project.project method)": [[111, "atomica.project.Project.run_sampled_sims"]], "run_scenarios() (atomica.project.project method)": [[111, "atomica.project.Project.run_scenarios"]], "run_sim() (atomica.project.project method)": [[111, "atomica.project.Project.run_sim"]], "save() (atomica.project.project method)": [[111, "atomica.project.Project.save"]], "scen() (atomica.project.project method)": [[111, "atomica.project.Project.scen"]], "update_settings() (atomica.project.project method)": [[111, "atomica.project.Project.update_settings"]], "projectsettings (class in atomica.project)": [[112, "atomica.project.ProjectSettings"]], "tvec (atomica.project.projectsettings property)": [[112, "atomica.project.ProjectSettings.tvec"]], "update_time_vector() (atomica.project.projectsettings method)": [[112, "atomica.project.ProjectSettings.update_time_vector"]], "atomica.reconciliation": [[113, "module-atomica.reconciliation"]], "reconcile() (in module atomica.reconciliation)": [[114, "atomica.reconciliation.reconcile"]], "atomica.results": [[115, "module-atomica.results"]], "ensemble (class in atomica.results)": [[116, "atomica.results.Ensemble"]], "add() (atomica.results.ensemble method)": [[116, "atomica.results.Ensemble.add"]], "baseline (atomica.results.ensemble attribute)": [[116, "atomica.results.Ensemble.baseline"]], "boxplot() (atomica.results.ensemble method)": [[116, "atomica.results.Ensemble.boxplot"]], "mapping_function (atomica.results.ensemble attribute)": [[116, "atomica.results.Ensemble.mapping_function"]], "n_samples (atomica.results.ensemble property)": [[116, "atomica.results.Ensemble.n_samples"]], "outputs (atomica.results.ensemble property)": [[116, "atomica.results.Ensemble.outputs"]], "plot_bars() (atomica.results.ensemble method)": [[116, "atomica.results.Ensemble.plot_bars"]], "plot_distribution() (atomica.results.ensemble method)": [[116, "atomica.results.Ensemble.plot_distribution"]], "plot_series() (atomica.results.ensemble method)": [[116, "atomica.results.Ensemble.plot_series"]], "pops (atomica.results.ensemble property)": [[116, "atomica.results.Ensemble.pops"]], "results (atomica.results.ensemble property)": [[116, "atomica.results.Ensemble.results"]], "run_sims() (atomica.results.ensemble method)": [[116, "atomica.results.Ensemble.run_sims"]], "samples (atomica.results.ensemble attribute)": [[116, "atomica.results.Ensemble.samples"]], "set_baseline() (atomica.results.ensemble method)": [[116, "atomica.results.Ensemble.set_baseline"]], "tvec (atomica.results.ensemble property)": [[116, "atomica.results.Ensemble.tvec"]], "update() (atomica.results.ensemble method)": [[116, "atomica.results.Ensemble.update"]], "result (class in atomica.results)": [[117, "atomica.results.Result"]], "charac_names() (atomica.results.result method)": [[117, "atomica.results.Result.charac_names"]], "check_for_nans() (atomica.results.result method)": [[117, "atomica.results.Result.check_for_nans"]], "comp_names() (atomica.results.result method)": [[117, "atomica.results.Result.comp_names"]], "dt (atomica.results.result property)": [[117, "atomica.results.Result.dt"]], "export_raw() (atomica.results.result method)": [[117, "atomica.results.Result.export_raw"]], "framework (atomica.results.result property)": [[117, "atomica.results.Result.framework"]], "get_alloc() (atomica.results.result method)": [[117, "atomica.results.Result.get_alloc"]], "get_coverage() (atomica.results.result method)": [[117, "atomica.results.Result.get_coverage"]], "get_equivalent_alloc() (atomica.results.result method)": [[117, "atomica.results.Result.get_equivalent_alloc"]], "get_variable() (atomica.results.result method)": [[117, "atomica.results.Result.get_variable"]], "link_names() (atomica.results.result method)": [[117, "atomica.results.Result.link_names"]], "par_names() (atomica.results.result method)": [[117, "atomica.results.Result.par_names"]], "plot() (atomica.results.result method)": [[117, "atomica.results.Result.plot"]], "pop_labels (atomica.results.result property)": [[117, "atomica.results.Result.pop_labels"]], "t (atomica.results.result property)": [[117, "atomica.results.Result.t"]], "used_programs (atomica.results.result property)": [[117, "atomica.results.Result.used_programs"]], "export_results() (in module atomica.results)": [[118, "atomica.results.export_results"]], "atomica.scenarios": [[119, "module-atomica.scenarios"]], "budgetscenario (class in atomica.scenarios)": [[120, "atomica.scenarios.BudgetScenario"]], "active (atomica.scenarios.budgetscenario attribute)": [[120, "atomica.scenarios.BudgetScenario.active"]], "get_instructions() (atomica.scenarios.budgetscenario method)": [[120, "atomica.scenarios.BudgetScenario.get_instructions"]], "get_parset() (atomica.scenarios.budgetscenario method)": [[120, "atomica.scenarios.BudgetScenario.get_parset"]], "get_progset() (atomica.scenarios.budgetscenario method)": [[120, "atomica.scenarios.BudgetScenario.get_progset"]], "parsetname (atomica.scenarios.budgetscenario attribute)": [[120, "atomica.scenarios.BudgetScenario.parsetname"]], "progsetname (atomica.scenarios.budgetscenario attribute)": [[120, "atomica.scenarios.BudgetScenario.progsetname"]], "run() (atomica.scenarios.budgetscenario method)": [[120, "atomica.scenarios.BudgetScenario.run"]], "combinedscenario (class in atomica.scenarios)": [[121, "atomica.scenarios.CombinedScenario"]], "active (atomica.scenarios.combinedscenario attribute)": [[121, "atomica.scenarios.CombinedScenario.active"]], "get_instructions() (atomica.scenarios.combinedscenario method)": [[121, "atomica.scenarios.CombinedScenario.get_instructions"]], "get_parset() (atomica.scenarios.combinedscenario method)": [[121, "atomica.scenarios.CombinedScenario.get_parset"]], "get_progset() (atomica.scenarios.combinedscenario method)": [[121, "atomica.scenarios.CombinedScenario.get_progset"]], "interpolation (atomica.scenarios.combinedscenario attribute)": [[121, "atomica.scenarios.CombinedScenario.interpolation"]], "parsetname (atomica.scenarios.combinedscenario attribute)": [[121, "atomica.scenarios.CombinedScenario.parsetname"]], "progsetname (atomica.scenarios.combinedscenario attribute)": [[121, "atomica.scenarios.CombinedScenario.progsetname"]], "run() (atomica.scenarios.combinedscenario method)": [[121, "atomica.scenarios.CombinedScenario.run"]], "scenario_values (atomica.scenarios.combinedscenario attribute)": [[121, "atomica.scenarios.CombinedScenario.scenario_values"]], "coveragescenario (class in atomica.scenarios)": [[122, "atomica.scenarios.CoverageScenario"]], "active (atomica.scenarios.coveragescenario attribute)": [[122, "atomica.scenarios.CoverageScenario.active"]], "get_instructions() (atomica.scenarios.coveragescenario method)": [[122, "atomica.scenarios.CoverageScenario.get_instructions"]], "get_parset() (atomica.scenarios.coveragescenario method)": [[122, "atomica.scenarios.CoverageScenario.get_parset"]], "get_progset() (atomica.scenarios.coveragescenario method)": [[122, "atomica.scenarios.CoverageScenario.get_progset"]], "parsetname (atomica.scenarios.coveragescenario attribute)": [[122, "atomica.scenarios.CoverageScenario.parsetname"]], "progsetname (atomica.scenarios.coveragescenario attribute)": [[122, "atomica.scenarios.CoverageScenario.progsetname"]], "run() (atomica.scenarios.coveragescenario method)": [[122, "atomica.scenarios.CoverageScenario.run"]], "parameterscenario (class in atomica.scenarios)": [[123, "atomica.scenarios.ParameterScenario"]], "active (atomica.scenarios.parameterscenario attribute)": [[123, "atomica.scenarios.ParameterScenario.active"]], "add() (atomica.scenarios.parameterscenario method)": [[123, "atomica.scenarios.ParameterScenario.add"]], "get_instructions() (atomica.scenarios.parameterscenario method)": [[123, "atomica.scenarios.ParameterScenario.get_instructions"]], "get_parset() (atomica.scenarios.parameterscenario method)": [[123, "atomica.scenarios.ParameterScenario.get_parset"]], "get_progset() (atomica.scenarios.parameterscenario method)": [[123, "atomica.scenarios.ParameterScenario.get_progset"]], "interpolation (atomica.scenarios.parameterscenario attribute)": [[123, "atomica.scenarios.ParameterScenario.interpolation"]], "parsetname (atomica.scenarios.parameterscenario attribute)": [[123, "atomica.scenarios.ParameterScenario.parsetname"]], "progsetname (atomica.scenarios.parameterscenario attribute)": [[123, "atomica.scenarios.ParameterScenario.progsetname"]], "run() (atomica.scenarios.parameterscenario method)": [[123, "atomica.scenarios.ParameterScenario.run"]], "scenario_values (atomica.scenarios.parameterscenario attribute)": [[123, "atomica.scenarios.ParameterScenario.scenario_values"]], "scenario (class in atomica.scenarios)": [[124, "atomica.scenarios.Scenario"]], "active (atomica.scenarios.scenario attribute)": [[124, "atomica.scenarios.Scenario.active"]], "get_instructions() (atomica.scenarios.scenario method)": [[124, "atomica.scenarios.Scenario.get_instructions"]], "get_parset() (atomica.scenarios.scenario method)": [[124, "atomica.scenarios.Scenario.get_parset"]], "get_progset() (atomica.scenarios.scenario method)": [[124, "atomica.scenarios.Scenario.get_progset"]], "parsetname (atomica.scenarios.scenario attribute)": [[124, "atomica.scenarios.Scenario.parsetname"]], "progsetname (atomica.scenarios.scenario attribute)": [[124, "atomica.scenarios.Scenario.progsetname"]], "run() (atomica.scenarios.scenario method)": [[124, "atomica.scenarios.Scenario.run"]], "atomica.system": [[125, "module-atomica.system"]], "frameworksettings (class in atomica.system)": [[126, "atomica.system.FrameworkSettings"]], "notfounderror": [[127, "atomica.system.NotFoundError"]], "atomica_path() (in module atomica.system)": [[128, "atomica.system.atomica_path"]], "atomica.utils": [[129, "module-atomica.utils"]], "ndict (class in atomica.utils)": [[130, "atomica.utils.NDict"]], "__add__() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.__add__"]], "append() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.append"]], "clear() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.clear"]], "copy() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.copy"]], "dict_items() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.dict_items"]], "dict_keys() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.dict_keys"]], "dict_values() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.dict_values"]], "disp() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.disp"]], "enumitems() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.enumitems"]], "enumkeys() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.enumkeys"]], "enumvals() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.enumvals"]], "enumvalues() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.enumvalues"]], "export() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.export"]], "filter() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.filter"]], "filtervals() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.filtervals"]], "findbykey() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.findbykey"]], "findbyval() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.findbyval"]], "findkeys() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.findkeys"]], "fromeach() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.fromeach"]], "fromkeys() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.fromkeys"]], "get() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.get"]], "getnested() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.getnested"]], "index() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.index"]], "insert() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.insert"]], "items() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.items"]], "iteritems() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.iteritems"]], "iternested() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.iternested"]], "keys() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.keys"]], "make() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.make"]], "makefrom() (atomica.utils.ndict class method)": [[130, "atomica.utils.NDict.makefrom"]], "makenested() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.makenested"]], "map() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.map"]], "pop() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.pop"]], "popitem() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.popitem"]], "promote() (atomica.utils.ndict class method)": [[130, "atomica.utils.NDict.promote"]], "remove() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.remove"]], "rename() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.rename"]], "reverse() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.reverse"]], "reversed() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.reversed"]], "setdefault() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.setdefault"]], "setitem() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.setitem"]], "setnested() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.setnested"]], "sort() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.sort"]], "sorted() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.sorted"]], "toeach() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.toeach"]], "update() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.update"]], "valind() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.valind"]], "values() (atomica.utils.ndict method)": [[130, "atomica.utils.NDict.values"]], "nameditem (class in atomica.utils)": [[131, "atomica.utils.NamedItem"]], "quiet (class in atomica.utils)": [[132, "atomica.utils.Quiet"]], "timeseries (class in atomica.utils)": [[133, "atomica.utils.TimeSeries"]], "assumption (atomica.utils.timeseries attribute)": [[133, "atomica.utils.TimeSeries.assumption"]], "copy() (atomica.utils.timeseries method)": [[133, "atomica.utils.TimeSeries.copy"]], "get() (atomica.utils.timeseries method)": [[133, "atomica.utils.TimeSeries.get"]], "get_arrays() (atomica.utils.timeseries method)": [[133, "atomica.utils.TimeSeries.get_arrays"]], "has_data (atomica.utils.timeseries property)": [[133, "atomica.utils.TimeSeries.has_data"]], "has_time_data (atomica.utils.timeseries property)": [[133, "atomica.utils.TimeSeries.has_time_data"]], "insert() (atomica.utils.timeseries method)": [[133, "atomica.utils.TimeSeries.insert"]], "interpolate() (atomica.utils.timeseries method)": [[133, "atomica.utils.TimeSeries.interpolate"]], "remove() (atomica.utils.timeseries method)": [[133, "atomica.utils.TimeSeries.remove"]], "remove_after() (atomica.utils.timeseries method)": [[133, "atomica.utils.TimeSeries.remove_after"]], "remove_before() (atomica.utils.timeseries method)": [[133, "atomica.utils.TimeSeries.remove_before"]], "remove_between() (atomica.utils.timeseries method)": [[133, "atomica.utils.TimeSeries.remove_between"]], "sample() (atomica.utils.timeseries method)": [[133, "atomica.utils.TimeSeries.sample"]], "sigma (atomica.utils.timeseries attribute)": [[133, "atomica.utils.TimeSeries.sigma"]], "t (atomica.utils.timeseries attribute)": [[133, "atomica.utils.TimeSeries.t"]], "units (atomica.utils.timeseries attribute)": [[133, "atomica.utils.TimeSeries.units"]], "vals (atomica.utils.timeseries attribute)": [[133, "atomica.utils.TimeSeries.vals"]], "datetime_to_year() (in module atomica.utils)": [[134, "atomica.utils.datetime_to_year"]], "evaluate_plot_string() (in module atomica.utils)": [[135, "atomica.utils.evaluate_plot_string"]], "format_duration() (in module atomica.utils)": [[136, "atomica.utils.format_duration"]], "nested_loop() (in module atomica.utils)": [[137, "atomica.utils.nested_loop"]], "parallel_progress() (in module atomica.utils)": [[138, "atomica.utils.parallel_progress"]], "parent_dir() (in module atomica.utils)": [[139, "atomica.utils.parent_dir"]], "start_logging() (in module atomica.utils)": [[140, "atomica.utils.start_logging"]], "stop_logging() (in module atomica.utils)": [[141, "atomica.utils.stop_logging"]], "atomica.version": [[142, "module-atomica.version"]]}})